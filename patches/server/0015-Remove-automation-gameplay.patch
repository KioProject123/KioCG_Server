From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Joket_abc <15005771700@qq.com>
Date: Sat, 23 Mar 2024 11:28:48 +0800
Subject: [PATCH] Remove automation gameplay


diff --git a/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java b/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java
index 8dfa5027987c74eff98f1b27e343bbab392727fa..21117c367314d0e2ee19005bbfba1ca822e8d77d 100644
--- a/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java
+++ b/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java
@@ -556,6 +556,7 @@ public class WorldConfiguration extends ConfigurationPart {
 
     public class KiocgConfig extends ConfigurationPart {
         public boolean deathItemsOnlyPickedUpByOneself = false;
+        public boolean removeAutomationGameplay = true;
     }
     // KioCG end
 }
diff --git a/src/main/java/net/minecraft/world/entity/vehicle/MinecartHopper.java b/src/main/java/net/minecraft/world/entity/vehicle/MinecartHopper.java
index b7293b263ec2abe158f28c4c961d3fd67e312ced..ee9270fc7a21283acf70c508952b35b17bca596b 100644
--- a/src/main/java/net/minecraft/world/entity/vehicle/MinecartHopper.java
+++ b/src/main/java/net/minecraft/world/entity/vehicle/MinecartHopper.java
@@ -81,9 +81,11 @@ public class MinecartHopper extends AbstractMinecartContainer implements Hopper
     @Override
     public void tick() {
         super.tick();
+        if (!this.level().paperConfig().kiocgConfig.removeAutomationGameplay) { // KioCG
         if (!this.level().isClientSide && this.isAlive() && this.isEnabled() && this.suckInItems()) {
             this.setChanged();
         }
+        } // KioCG
     }
 
     public boolean suckInItems() {
diff --git a/src/main/java/net/minecraft/world/level/block/entity/HopperBlockEntity.java b/src/main/java/net/minecraft/world/level/block/entity/HopperBlockEntity.java
index c948efe0eafb592627b608c2db6fdb0126f89863..b94b99bfd45072c69c4bb7d6d55fcd0a0ce237a6 100644
--- a/src/main/java/net/minecraft/world/level/block/entity/HopperBlockEntity.java
+++ b/src/main/java/net/minecraft/world/level/block/entity/HopperBlockEntity.java
@@ -136,6 +136,7 @@ public class HopperBlockEntity extends RandomizableContainerBlockEntity implemen
     }
 
     public static void pushItemsTick(Level world, BlockPos pos, BlockState state, HopperBlockEntity blockEntity) {
+        if (world.paperConfig().kiocgConfig.removeAutomationGameplay) return; // KioCG
         --blockEntity.cooldownTime;
         blockEntity.tickedGameTime = world.getGameTime();
         if (!blockEntity.isOnCooldown()) {
diff --git a/src/main/java/net/minecraft/world/level/block/piston/PistonBaseBlock.java b/src/main/java/net/minecraft/world/level/block/piston/PistonBaseBlock.java
index be74adc86f0ca467f3b59e7b57fd47a8f381d86e..c66361d94edbc92b55b9a58d19882afe5bccae2a 100644
--- a/src/main/java/net/minecraft/world/level/block/piston/PistonBaseBlock.java
+++ b/src/main/java/net/minecraft/world/level/block/piston/PistonBaseBlock.java
@@ -402,6 +402,7 @@ public class PistonBaseBlock extends DirectionalBlock {
             org.bukkit.event.block.BlockPistonEvent event;
             if (retract) {
                 event = new BlockPistonExtendEvent(bblock, blocks, CraftBlock.notchToBlockFace(enumdirection1));
+                if (world.paperConfig().kiocgConfig.removeAutomationGameplay) event.setCancelled(true); // KioCG
             } else {
                 event = new BlockPistonRetractEvent(bblock, blocks, CraftBlock.notchToBlockFace(enumdirection1));
             }
diff --git a/src/main/java/org/bukkit/craftbukkit/event/CraftEventFactory.java b/src/main/java/org/bukkit/craftbukkit/event/CraftEventFactory.java
index c0823c612de9dc2a64cc797f061eef25c5f31359..41dedd0601a58094985854a5ea3174381f760417 100644
--- a/src/main/java/org/bukkit/craftbukkit/event/CraftEventFactory.java
+++ b/src/main/java/org/bukkit/craftbukkit/event/CraftEventFactory.java
@@ -2129,12 +2129,14 @@ public class CraftEventFactory {
     public static boolean handleBlockFailedDispenseEvent(ServerLevel serverLevel, BlockPos pos) {
         org.bukkit.block.Block block = CraftBlock.at(serverLevel, pos);
         io.papermc.paper.event.block.BlockFailedDispenseEvent event = new io.papermc.paper.event.block.BlockFailedDispenseEvent(block);
+        if (serverLevel.paperConfig().kiocgConfig.removeAutomationGameplay) event.shouldPlayEffect(false); // KioCG
         return event.callEvent();
     }
 
     public static boolean handleBlockPreDispenseEvent(ServerLevel serverLevel, BlockPos pos, ItemStack itemStack, int slot) {
         org.bukkit.block.Block block = CraftBlock.at(serverLevel, pos);
         io.papermc.paper.event.block.BlockPreDispenseEvent event = new io.papermc.paper.event.block.BlockPreDispenseEvent(block, org.bukkit.craftbukkit.inventory.CraftItemStack.asCraftMirror(itemStack), slot);
+        if (serverLevel.paperConfig().kiocgConfig.removeAutomationGameplay) event.setCancelled(true); // KioCG
         return event.callEvent();
     }
     // Paper end
