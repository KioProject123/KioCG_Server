From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Joket_abc <15005771700@qq.com>
Date: Sun, 3 Mar 2024 05:37:52 +0800
Subject: [PATCH] Player in structure API


diff --git a/src/main/java/com/kiocg/java/Tags.java b/src/main/java/com/kiocg/java/Tags.java
index baa74b8f73ef3412a902c0f92985557404278026..1f393a3e0301d46ea0bfaba375a8e6eea7ba3d3b 100644
--- a/src/main/java/com/kiocg/java/Tags.java
+++ b/src/main/java/com/kiocg/java/Tags.java
@@ -1,5 +1,5 @@
 package com.kiocg.java;
 
 public class Tags {
-
+    public static final String kiocgInStructure = "KioCG_inStructure";
 }
diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index 58591bf2f63b9c5e97d9ce4188dff3366968a178..bf5faf452d920d7709594f65f20aa98dcd398a4f 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -832,6 +832,15 @@ public class ServerPlayer extends Player {
 
             if (this.tickCount % 20 == 0) {
                 CriteriaTriggers.LOCATION.trigger(this);
+                // KioCG start
+                if (this.tickCount % 20 == 0 && this.serverLevel().isLoaded(this.blockPosition())) {
+                    if (this.serverLevel().structureManager().hasAnyStructureAtExact(this.blockPosition())) {
+                        this.addTag(com.kiocg.java.Tags.kiocgInStructure);
+                    } else {
+                        this.removeTag(com.kiocg.java.Tags.kiocgInStructure);
+                    }
+                }
+                // KioCG end
             }
 
             // CraftBukkit start - initialize oldLevel, fire PlayerLevelChangeEvent, and tick client-sided world border
diff --git a/src/main/java/net/minecraft/world/level/StructureManager.java b/src/main/java/net/minecraft/world/level/StructureManager.java
index b59581b92aed0bc1b09008c695b0b112c3e65743..5edeaa78e58328be9e079e431765542eeb905285 100644
--- a/src/main/java/net/minecraft/world/level/StructureManager.java
+++ b/src/main/java/net/minecraft/world/level/StructureManager.java
@@ -158,6 +158,41 @@ public class StructureManager {
         return this.level.getChunk(sectionPos.x(), sectionPos.z(), ChunkStatus.STRUCTURE_REFERENCES).hasAnyStructureReferences();
     }
 
+    // KioCG start
+    private static final java.util.Set<net.minecraft.world.level.levelgen.structure.StructureType<?>> simpleStructure = new java.util.HashSet<>() {{
+        add(net.minecraft.world.level.levelgen.structure.StructureType.BURIED_TREASURE);
+        add(net.minecraft.world.level.levelgen.structure.StructureType.NETHER_FOSSIL);
+        add(net.minecraft.world.level.levelgen.structure.StructureType.RUINED_PORTAL);
+    }};
+
+    public boolean hasAnyStructureAtExact(BlockPos pos) {
+        net.minecraft.world.level.levelgen.structure.BoundingBox boundingBox = new net.minecraft.world.level.levelgen.structure.BoundingBox
+            (pos.getX() - 4, pos.getY() - 4, pos.getZ() - 4, pos.getX() + 4, pos.getY() + 4, pos.getZ() + 4);
+        for (Map.Entry<Structure, LongSet> entry : this.getAllStructuresAt(pos).entrySet()) {
+            if (simpleStructure.contains(entry.getKey().type())) continue;
+
+            java.util.concurrent.atomic.AtomicBoolean hasPieceAt = new java.util.concurrent.atomic.AtomicBoolean(false);
+            this.fillStartsForStructure(entry.getKey(), entry.getValue(), structureStart -> {
+                if (this.structureHasPieceIntersects(boundingBox, structureStart)) {
+                    hasPieceAt.set(true);
+                }
+            });
+            if (hasPieceAt.get()) return true;
+        }
+        return false;
+    }
+
+    public boolean structureHasPieceIntersects(net.minecraft.world.level.levelgen.structure.BoundingBox boundingBox, StructureStart structureStart) {
+        for (StructurePiece structurePiece : structureStart.getPieces()) {
+            if (structurePiece.getBoundingBox().intersects(boundingBox)) {
+                return true;
+            }
+        }
+
+        return false;
+    }
+    // KioCG end
+
     public Map<Structure, LongSet> getAllStructuresAt(BlockPos pos) {
         SectionPos sectionPos = SectionPos.of(pos);
         return this.level.getChunk(sectionPos.x(), sectionPos.z(), ChunkStatus.STRUCTURE_REFERENCES).getAllReferences();
