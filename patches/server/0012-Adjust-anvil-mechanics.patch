From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Joket_abc <15005771700@qq.com>
Date: Mon, 8 Jul 2024 12:56:35 +0800
Subject: [PATCH] Adjust anvil mechanics


diff --git a/src/main/java/io/papermc/paper/configuration/GlobalConfiguration.java b/src/main/java/io/papermc/paper/configuration/GlobalConfiguration.java
index fef19857b670319613f9183de680dd23d6d1a0e8..bcd27313a5932f229806d4233a4c8c1fe5f62e0c 100644
--- a/src/main/java/io/papermc/paper/configuration/GlobalConfiguration.java
+++ b/src/main/java/io/papermc/paper/configuration/GlobalConfiguration.java
@@ -435,6 +435,13 @@ public class GlobalConfiguration extends ConfigurationPart {
         public class Enchant extends ConfigurationPart {
             public boolean allowUnsafeCommand = true;
         }
+
+        public Anvil anvil;
+        public class Anvil extends ConfigurationPart {
+            public int maxCumulativeCost = 31;
+            public boolean repairNoLevelCost = true;
+            public boolean renameNoLevelCost = true;
+        }
     }
     // KioCG end
 }
diff --git a/src/main/java/net/minecraft/world/inventory/AnvilMenu.java b/src/main/java/net/minecraft/world/inventory/AnvilMenu.java
index 2854ecc3598364a86ff1104e9bc8dad90caedce4..88025f48b51bd70357e8f748c523e5cb405becce 100644
--- a/src/main/java/net/minecraft/world/inventory/AnvilMenu.java
+++ b/src/main/java/net/minecraft/world/inventory/AnvilMenu.java
@@ -142,6 +142,7 @@ public class AnvilMenu extends ItemCombinerMenu {
         int i = 0;
         long j = 0L;
         byte b0 = 0;
+        boolean allowZeroLevel = false; // KioCG
 
         if (!itemstack.isEmpty() && EnchantmentHelper.canStoreEnchantments(itemstack)) {
             ItemStack itemstack1 = itemstack.copy();
@@ -149,6 +150,7 @@ public class AnvilMenu extends ItemCombinerMenu {
             ItemEnchantments.Mutable itemenchantments_a = new ItemEnchantments.Mutable(EnchantmentHelper.getEnchantmentsForCrafting(itemstack1));
 
             j += (long) (Integer) itemstack.getOrDefault(DataComponents.REPAIR_COST, 0) + (long) (Integer) itemstack2.getOrDefault(DataComponents.REPAIR_COST, 0);
+            j = Math.max(j, io.papermc.paper.configuration.GlobalConfiguration.get().kiocgConfig.anvil.maxCumulativeCost); // KioCG
             this.repairItemCountCost = 0;
             int k;
 
@@ -170,6 +172,12 @@ public class AnvilMenu extends ItemCombinerMenu {
                     for (i1 = 0; k > 0 && i1 < itemstack2.getCount(); ++i1) {
                         l = itemstack1.getDamageValue() - k;
                         itemstack1.setDamageValue(l);
+                        // KioCG start
+                        if (io.papermc.paper.configuration.GlobalConfiguration.get().kiocgConfig.anvil.repairNoLevelCost) {
+                            allowZeroLevel = true;
+                            j = 0;
+                        } else
+                        // KioCG end
                         ++i;
                         k = Math.min(itemstack1.getDamageValue(), itemstack1.getMaxDamage() / 4);
                     }
@@ -264,11 +272,23 @@ public class AnvilMenu extends ItemCombinerMenu {
             if (this.itemName != null && !StringUtil.isBlank(this.itemName)) {
                 if (!this.itemName.equals(itemstack.getHoverName().getString())) {
                     b0 = 1;
+                    // KioCG start
+                    if (io.papermc.paper.configuration.GlobalConfiguration.get().kiocgConfig.anvil.renameNoLevelCost) {
+                        allowZeroLevel = true;
+                        j = 0;
+                    } else
+                    // KioCG end
                     i += b0;
                     itemstack1.set(DataComponents.CUSTOM_NAME, Component.literal(this.itemName));
                 }
             } else if (itemstack.has(DataComponents.CUSTOM_NAME)) {
                 b0 = 1;
+                // KioCG start
+                if (io.papermc.paper.configuration.GlobalConfiguration.get().kiocgConfig.anvil.renameNoLevelCost) {
+                    allowZeroLevel = true;
+                    j = 0;
+                } else
+                // KioCG end
                 i += b0;
                 itemstack1.remove(DataComponents.CUSTOM_NAME);
             }
@@ -277,6 +297,7 @@ public class AnvilMenu extends ItemCombinerMenu {
 
             this.cost.set(k2);
             if (i <= 0) {
+                if (i < 0 || !allowZeroLevel) // KioCG
                 itemstack1 = ItemStack.EMPTY;
             }
 
@@ -295,6 +316,7 @@ public class AnvilMenu extends ItemCombinerMenu {
                 }
 
                 if (b0 != i || b0 == 0) {
+                    if (k2 != 0) // KioCG - 如果启用, 则重命名或原材料修复装备不计算铁砧惩罚
                     k = AnvilMenu.calculateIncreasedRepairCost(k);
                 }
 
diff --git a/src/main/java/net/minecraft/world/item/BowItem.java b/src/main/java/net/minecraft/world/item/BowItem.java
index 6eb5c0f23d9dc61e69ad5ad493c89602a9dcd4b5..5f31c923b250cdc46005a2e5f8d00fd8f5c88f2a 100644
--- a/src/main/java/net/minecraft/world/item/BowItem.java
+++ b/src/main/java/net/minecraft/world/item/BowItem.java
@@ -99,4 +99,11 @@ public class BowItem extends ProjectileWeaponItem {
     public int getDefaultProjectileRange() {
         return 15;
     }
+
+    // KioCG start
+    @Override
+    public boolean isValidRepairItem(ItemStack stack, ItemStack ingredient) {
+        return ingredient.is(Items.STRING) || super.isValidRepairItem(stack, ingredient);
+    }
+    // KioCG end
 }
diff --git a/src/main/java/net/minecraft/world/item/BrushItem.java b/src/main/java/net/minecraft/world/item/BrushItem.java
index 2c75c33af46b4e8be4cfadc6de7f1760f69022fa..19473423efd501f83d193ac0ba15bc72169c4847 100644
--- a/src/main/java/net/minecraft/world/item/BrushItem.java
+++ b/src/main/java/net/minecraft/world/item/BrushItem.java
@@ -121,6 +121,13 @@ public class BrushItem extends Item {
         }
     }
 
+    // KioCG start
+    @Override
+    public boolean isValidRepairItem(ItemStack stack, ItemStack ingredient) {
+        return ingredient.is(Items.FEATHER) || super.isValidRepairItem(stack, ingredient);
+    }
+    // KioCG end
+
     static record DustParticlesDelta(double xd, double yd, double zd) {
         private static final double ALONG_SIDE_DELTA = 1.0;
         private static final double OUT_FROM_SIDE_DELTA = 0.1;
diff --git a/src/main/java/net/minecraft/world/item/FishingRodItem.java b/src/main/java/net/minecraft/world/item/FishingRodItem.java
index efb21967fdd2c3b4cb35db6faf213d55da5fc30e..26e217c1ffeee0f427ec595238289554a31184a5 100644
--- a/src/main/java/net/minecraft/world/item/FishingRodItem.java
+++ b/src/main/java/net/minecraft/world/item/FishingRodItem.java
@@ -69,4 +69,11 @@ public class FishingRodItem extends Item {
     public int getEnchantmentValue() {
         return 1;
     }
+
+    // KioCG start
+    @Override
+    public boolean isValidRepairItem(ItemStack stack, ItemStack ingredient) {
+        return ingredient.is(Items.STRING) || super.isValidRepairItem(stack, ingredient);
+    }
+    // KioCG end
 }
diff --git a/src/main/java/net/minecraft/world/item/FlintAndSteelItem.java b/src/main/java/net/minecraft/world/item/FlintAndSteelItem.java
index 7e1ad8dd734f5066101384e83d1f9519434a84e6..09fca8bd146869f5d0eb356ecefba237c77d3cef 100644
--- a/src/main/java/net/minecraft/world/item/FlintAndSteelItem.java
+++ b/src/main/java/net/minecraft/world/item/FlintAndSteelItem.java
@@ -76,4 +76,11 @@ public class FlintAndSteelItem extends Item {
             return InteractionResult.sidedSuccess(world.isClientSide());
         }
     }
+
+    // KioCG start
+    @Override
+    public boolean isValidRepairItem(ItemStack stack, ItemStack ingredient) {
+        return ingredient.is(Items.FLINT) || super.isValidRepairItem(stack, ingredient);
+    }
+    // KioCG end
 }
diff --git a/src/main/java/net/minecraft/world/item/ShearsItem.java b/src/main/java/net/minecraft/world/item/ShearsItem.java
index cb809796372a4658aa617404f9fddffff9b45cb7..84f34307435dc0bb13f012d7d77d9f3b24d61cef 100644
--- a/src/main/java/net/minecraft/world/item/ShearsItem.java
+++ b/src/main/java/net/minecraft/world/item/ShearsItem.java
@@ -79,4 +79,11 @@ public class ShearsItem extends Item {
 
         return super.useOn(context);
     }
+
+    // KioCG start
+    @Override
+    public boolean isValidRepairItem(ItemStack stack, ItemStack ingredient) {
+        return ingredient.is(Items.IRON_INGOT) || super.isValidRepairItem(stack, ingredient);
+    }
+    // KioCG end
 }
