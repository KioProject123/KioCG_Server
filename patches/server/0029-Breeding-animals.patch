From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Joket_abc <15005771700@qq.com>
Date: Tue, 2 Apr 2024 19:33:24 +0800
Subject: [PATCH] Breeding animals


diff --git a/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java b/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java
index 976e2e7dfc19673f4f0adbf3bbee4ac507775af2..b35689942d4bb1701cf89f5d9ca0781e75c2ed2f 100644
--- a/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java
+++ b/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java
@@ -596,6 +596,11 @@ public class WorldConfiguration extends ConfigurationPart {
                 public boolean zombiesSkinnedIntoSkeletons = true;
             }
 
+            public KiocgConfig.Entity.Animal animal;
+            public class Animal extends ConfigurationPart {
+                public boolean animalCanBreed = false;
+            }
+
             public boolean betterMobGriefingSetting = true;
             public boolean turretEnable = true;
             public int turretCooldownDefault = 100;
diff --git a/src/main/java/net/minecraft/world/entity/AgeableMob.java b/src/main/java/net/minecraft/world/entity/AgeableMob.java
index 3dc3609d13a7b823d15384d1c385b68eeb933d26..c44ee87c9fc365206d9fb3b4345ed39329e984a5 100644
--- a/src/main/java/net/minecraft/world/entity/AgeableMob.java
+++ b/src/main/java/net/minecraft/world/entity/AgeableMob.java
@@ -21,6 +21,19 @@ public abstract class AgeableMob extends PathfinderMob {
     protected int forcedAge;
     protected int forcedAgeTimer;
     public boolean ageLocked; // CraftBukkit
+    // KioCG start
+    private int feedingDay;
+    private int produceDay;
+    private int totalFeedingDays;
+    private int numberOfProducedToday;
+
+    public int getTotalFeedingDays() {
+        return this.totalFeedingDays;
+    }
+    public int getNumberOfProducedToday() {
+        return this.numberOfProducedToday;
+    }
+    // KioCG end
 
     protected AgeableMob(EntityType<? extends AgeableMob> type, Level world) {
         super(type, world);
@@ -131,6 +144,12 @@ public abstract class AgeableMob extends PathfinderMob {
         nbt.putInt("Age", this.getAge());
         nbt.putInt("ForcedAge", this.forcedAge);
         nbt.putBoolean("AgeLocked", this.ageLocked); // CraftBukkit
+        // KioCG start
+        nbt.putInt("KioCG.FeedingDay", this.feedingDay);
+        nbt.putInt("KioCG.ProduceDay", this.produceDay);
+        nbt.putInt("KioCG.TotalFeedingDays", this.totalFeedingDays);
+        nbt.putInt("KioCG.NumberOfProducedToday", this.numberOfProducedToday);
+        // KioCG end
     }
 
     @Override
@@ -139,6 +158,20 @@ public abstract class AgeableMob extends PathfinderMob {
         this.setAge(nbt.getInt("Age"));
         this.forcedAge = nbt.getInt("ForcedAge");
         this.ageLocked = nbt.getBoolean("AgeLocked"); // CraftBukkit
+        // KioCG start
+        if (nbt.contains("KioCG.FeedingDay", net.minecraft.nbt.Tag.TAG_INT)) {
+            this.feedingDay = nbt.getInt("KioCG.FeedingDay");
+        }
+        if (nbt.contains("KioCG.ProduceDay", net.minecraft.nbt.Tag.TAG_INT)) {
+            this.produceDay = nbt.getInt("KioCG.ProduceDay");
+        }
+        if (nbt.contains("KioCG.TotalFeedingDays", net.minecraft.nbt.Tag.TAG_INT)) {
+            this.totalFeedingDays = nbt.getInt("KioCG.TotalFeedingDays");
+        }
+        if (nbt.contains("KioCG.NumberOfProducedToday", net.minecraft.nbt.Tag.TAG_INT)) {
+            this.numberOfProducedToday = nbt.getInt("KioCG.NumberOfProducedToday");
+        }
+        // KioCG end
     }
 
     @Override
@@ -171,6 +204,8 @@ public abstract class AgeableMob extends PathfinderMob {
                 --i;
                 this.setAge(i);
             }
+
+            tickProduce(); // KioCG
         }
 
     }
@@ -204,6 +239,50 @@ public abstract class AgeableMob extends PathfinderMob {
         return (int) ((float) (breedingAge / 20) * 0.1F);
     }
 
+    // KioCG start
+    public void tickProduce() {
+        int days = (int) this.level().getDays();
+
+        if (this.produceDay != 0 && days > this.produceDay) {
+            this.produceDay = 0;
+            ++this.totalFeedingDays;
+            this.numberOfProducedToday = getNumberOfProduced();
+        }
+
+        if (days < this.feedingDay) {
+            this.feedingDay = days;
+            if (this.produceDay != 0) {
+                this.produceDay = this.feedingDay;
+            }
+        }
+    }
+
+    public int getNumberOfProduced() {
+        return 1;
+    }
+
+    public boolean canFeed() {
+        return (int) this.level().getDays() > this.feedingDay;
+    }
+
+    public void feedingFeed() {
+        this.feedingDay = (int) this.level().getDays();
+        this.produceDay = this.feedingDay;
+    }
+
+    public boolean canProduce() {
+        return this.numberOfProducedToday > 0;
+    }
+
+    public void produce() {
+        produce(1);
+    }
+
+    public void produce(int amount) {
+        this.numberOfProducedToday -= amount;
+    }
+    // KioCG end
+
     public static class AgeableMobGroupData implements SpawnGroupData {
 
         private int groupSize;
diff --git a/src/main/java/net/minecraft/world/entity/ai/behavior/AnimalMakeLove.java b/src/main/java/net/minecraft/world/entity/ai/behavior/AnimalMakeLove.java
index 2a7373bb87157540d2ccba6321fb4b1e562beb55..63fd814455617d10c3f6a6ec7d5d793546d06d5e 100644
--- a/src/main/java/net/minecraft/world/entity/ai/behavior/AnimalMakeLove.java
+++ b/src/main/java/net/minecraft/world/entity/ai/behavior/AnimalMakeLove.java
@@ -46,6 +46,7 @@ public class AnimalMakeLove extends Behavior<Animal> {
 
     @Override
     protected boolean checkExtraStartConditions(ServerLevel world, Animal entity) {
+        if (!entity.level().paperConfig().kiocgConfig.entity.animal.animalCanBreed) return false; // KioCG
         return entity.isInLove() && this.findValidBreedPartner(entity).isPresent();
     }
 
diff --git a/src/main/java/net/minecraft/world/entity/ai/goal/BreedGoal.java b/src/main/java/net/minecraft/world/entity/ai/goal/BreedGoal.java
index 262653d72d1452b6f17582dbebbcad0c0a49ef63..7ec9025c07f5e07e541c68302582f86cad572444 100644
--- a/src/main/java/net/minecraft/world/entity/ai/goal/BreedGoal.java
+++ b/src/main/java/net/minecraft/world/entity/ai/goal/BreedGoal.java
@@ -32,6 +32,7 @@ public class BreedGoal extends Goal {
 
     @Override
     public boolean canUse() {
+        if (!this.animal.level().paperConfig().kiocgConfig.entity.animal.animalCanBreed) return false; // KioCG
         if (!this.animal.isInLove()) {
             return false;
         } else {
diff --git a/src/main/java/net/minecraft/world/entity/animal/Animal.java b/src/main/java/net/minecraft/world/entity/animal/Animal.java
index e96fca314bebea5fcdb684d3478af1b6dc5f13cf..7dbc9c42d2f458ea6b8b6871bfe2dea24280e9f5 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Animal.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Animal.java
@@ -146,7 +146,7 @@ public abstract class Animal extends AgeableMob {
         if (this.isFood(itemstack)) {
             int i = this.getAge();
 
-            if (!this.level().isClientSide && i == 0 && this.canFallInLove()) {
+            if (!this.level().isClientSide && this.canFeed()) { // KioCG
                 final ItemStack breedCopy = itemstack.copy(); // Paper - Fix EntityBreedEvent copying
                 this.usePlayerItem(player, hand, itemstack);
                 this.setInLove(player, breedCopy); // Paper - Fix EntityBreedEvent copying
@@ -195,6 +195,7 @@ public abstract class Animal extends AgeableMob {
             this.loveCause = player.getUUID();
         }
         // Paper - Fix EntityBreedEvent copying; set breed item in better place
+        this.feedingFeed(); // KioCG
 
         this.level().broadcastEntityEvent(this, (byte) 18);
     }
diff --git a/src/main/java/net/minecraft/world/entity/animal/Chicken.java b/src/main/java/net/minecraft/world/entity/animal/Chicken.java
index 8e347718f72297398b5e6d34a893264bc10efe18..b912cb2ceb3f3cd3af1ef03565ed64ce866a4c56 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Chicken.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Chicken.java
@@ -50,7 +50,7 @@ public class Chicken extends Animal {
 
     public Chicken(EntityType<? extends Chicken> type, Level world) {
         super(type, world);
-        this.eggTime = this.random.nextInt(6000) + 6000;
+        this.eggTime = this.random.nextInt(20 * 10); // KioCG
         this.setPathfindingMalus(PathType.WATER, 0.0F);
     }
 
@@ -96,17 +96,25 @@ public class Chicken extends Animal {
         }
 
         this.flap += this.flapping * 2.0F;
-        if (!this.level().isClientSide && this.isAlive() && !this.isBaby() && !this.isChickenJockey() && --this.eggTime <= 0) {
+        if (!this.level().isClientSide && this.isAlive() && !this.isBaby() && this.canProduce() && !this.isChickenJockey() && --this.eggTime <= 0) { // KioCG
             this.playSound(SoundEvents.CHICKEN_EGG, 1.0F, (this.random.nextFloat() - this.random.nextFloat()) * 0.2F + 1.0F);
             this.forceDrops = true; // CraftBukkit
-            this.spawnAtLocation((ItemLike) Items.EGG);
+            this.spawnAtLocation((ItemLike) Items.EGG, this.getNumberOfProducedToday()); // KioCG
             this.forceDrops = false; // CraftBukkit
             this.gameEvent(GameEvent.ENTITY_PLACE);
-            this.eggTime = this.random.nextInt(6000) + 6000;
+            this.eggTime = this.random.nextInt(20 * 10); // KioCG
+            this.produce(this.getNumberOfProducedToday()); // KioCG
         }
 
     }
 
+    // KioCG start
+    @Override
+    public int getNumberOfProduced() {
+        return Math.min(1 + this.getTotalFeedingDays() / 10, 5);
+    }
+    // KioCG end
+
     @Override
     protected boolean isFlapping() {
         return this.flyDist > this.nextFlap;
diff --git a/src/main/java/net/minecraft/world/entity/animal/Cow.java b/src/main/java/net/minecraft/world/entity/animal/Cow.java
index e336934f37075a827843e4b1bb2b6b660d2c60c9..c6322a84a53b4052f24fda6a755900ec8e45cc32 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Cow.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Cow.java
@@ -96,7 +96,7 @@ public class Cow extends Animal {
     public InteractionResult mobInteract(Player player, InteractionHand hand) {
         ItemStack itemstack = player.getItemInHand(hand);
 
-        if (itemstack.is(Items.BUCKET) && !this.isBaby()) {
+        if (itemstack.is(Items.BUCKET) && !this.isBaby() && this.canProduce()) { // KioCG
             // CraftBukkit start - Got milk?
             PlayerBucketFillEvent event = CraftEventFactory.callPlayerBucketFillEvent((ServerLevel) player.level(), player, this.blockPosition(), this.blockPosition(), null, itemstack, Items.MILK_BUCKET, hand);
 
@@ -109,6 +109,7 @@ public class Cow extends Animal {
             player.playSound(SoundEvents.COW_MILK, 1.0F, 1.0F);
             ItemStack itemstack1 = ItemUtils.createFilledResult(itemstack, player, CraftItemStack.asNMSCopy(event.getItemStack())); // CraftBukkit
 
+            this.produce(); // KioCG
             player.setItemInHand(hand, itemstack1);
             return InteractionResult.sidedSuccess(this.level().isClientSide);
         } else {
@@ -116,6 +117,13 @@ public class Cow extends Animal {
         }
     }
 
+    // KioCG start
+    @Override
+    public int getNumberOfProduced() {
+        return Math.min(1 + this.getTotalFeedingDays() / 30, 3);
+    }
+    // KioCG end
+
     @Nullable
     @Override
     public Cow getBreedOffspring(ServerLevel world, AgeableMob entity) {
diff --git a/src/main/java/net/minecraft/world/entity/animal/MushroomCow.java b/src/main/java/net/minecraft/world/entity/animal/MushroomCow.java
index 0c21959f57ae88fcd0a4d6dc911c1ce347c96528..760cdd726d3c242a5214d9995cddb04e587fb0a1 100644
--- a/src/main/java/net/minecraft/world/entity/animal/MushroomCow.java
+++ b/src/main/java/net/minecraft/world/entity/animal/MushroomCow.java
@@ -95,7 +95,7 @@ public class MushroomCow extends Cow implements Shearable, VariantHolder<Mushroo
     public InteractionResult mobInteract(Player player, InteractionHand hand) {
         ItemStack itemstack = player.getItemInHand(hand);
 
-        if (itemstack.is(Items.BOWL) && !this.isBaby()) {
+        if (itemstack.is(Items.BOWL) && !this.isBaby() && this.canProduce()) { // KioCG
             boolean flag = false;
             ItemStack itemstack1;
 
@@ -110,6 +110,7 @@ public class MushroomCow extends Cow implements Shearable, VariantHolder<Mushroo
 
             ItemStack itemstack2 = ItemUtils.createFilledResult(itemstack, player, itemstack1, false);
 
+            this.produce(); // KioCG
             player.setItemInHand(hand, itemstack2);
             SoundEvent soundeffect;
 
diff --git a/src/main/java/net/minecraft/world/entity/animal/Panda.java b/src/main/java/net/minecraft/world/entity/animal/Panda.java
index e108f876d3f129c6287f13d68427aed2a6f0c5b1..e4d014eb54c94ebca54a598d08f1bfeae792a636 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Panda.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Panda.java
@@ -672,7 +672,7 @@ public class Panda extends Animal {
             if (this.isBaby()) {
                 this.usePlayerItem(player, hand, itemstack);
                 this.ageUp((int) ((float) (-this.getAge() / 20) * 0.1F), true);
-            } else if (!this.level().isClientSide && this.getAge() == 0 && this.canFallInLove()) {
+            } else if (!this.level().isClientSide && this.canFeed()) { // KioCG
                 final ItemStack breedCopy = itemstack.copy(); // Paper - Fix EntityBreedEvent copying
                 this.usePlayerItem(player, hand, itemstack);
                 this.setInLove(player, breedCopy); // Paper - Fix EntityBreedEvent copying
diff --git a/src/main/java/net/minecraft/world/entity/animal/Sheep.java b/src/main/java/net/minecraft/world/entity/animal/Sheep.java
index 38ac2759894660be1ee7ba59b0bd1270158e9232..9d1eb4726d9cee834589b38af4d1b4f2971252bb 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Sheep.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Sheep.java
@@ -151,6 +151,16 @@ public class Sheep extends Animal implements Shearable {
         super.aiStep();
     }
 
+    // KioCG start
+    @Override
+    public void tickProduce() {
+        super.tickProduce();
+        if (this.canProduce() && this.isSheared()) {
+            this.ate();
+        }
+    }
+    // KioCG end
+
     public static AttributeSupplier.Builder createAttributes() {
         return Mob.createMobAttributes().add(Attributes.MAX_HEALTH, 8.0D).add(Attributes.MOVEMENT_SPEED, 0.23000000417232513D);
     }
@@ -254,7 +264,7 @@ public class Sheep extends Animal implements Shearable {
         ItemStack itemstack = player.getItemInHand(hand);
 
         if (itemstack.is(Items.SHEARS)) {
-            if (!this.level().isClientSide && this.readyForShearing()) {
+            if (!this.level().isClientSide && this.readyForShearing() && this.canProduce()) { // KioCG
                 // CraftBukkit start
                 // Paper start - custom shear drops
                 java.util.List<ItemStack> drops = this.generateDefaultDrops();
@@ -267,6 +277,7 @@ public class Sheep extends Animal implements Shearable {
                 }
                 // Paper end - custom shear drops
                 // CraftBukkit end
+                this.produce(); // KioCG
                 this.shear(SoundSource.PLAYERS, drops); // Paper
                 this.gameEvent(GameEvent.SHEAR, player);
                 itemstack.hurtAndBreak(1, player, getSlotForHand(hand));
@@ -279,6 +290,13 @@ public class Sheep extends Animal implements Shearable {
         }
     }
 
+    // KioCG start
+    @Override
+    public int getNumberOfProduced() {
+        return Math.min(1 + this.getTotalFeedingDays() / 15, 5);
+    }
+    // KioCG end
+
     @Override
     public void shear(SoundSource shearedSoundCategory) {
         // Paper start - custom shear drops
@@ -299,6 +317,7 @@ public class Sheep extends Animal implements Shearable {
     public void shear(SoundSource shearedSoundCategory, java.util.List<ItemStack> drops) {
         // Paper end - custom shear drops
         this.level().playSound((Player) null, (Entity) this, SoundEvents.SHEEP_SHEAR, shearedSoundCategory, 1.0F, 1.0F);
+        if (!this.canProduce()) // KioCG
         this.setSheared(true);
         int i = 1 + this.random.nextInt(3);
 
@@ -405,6 +424,7 @@ public class Sheep extends Animal implements Shearable {
         if (event.isCancelled()) return;
         // CraftBukkit end
         super.ate();
+        if (this.canProduce()) // KioCG
         this.setSheared(false);
         if (this.isBaby()) {
             this.ageUp(60);
diff --git a/src/main/java/net/minecraft/world/entity/animal/Turtle.java b/src/main/java/net/minecraft/world/entity/animal/Turtle.java
index caf4120721be8f2f7e2d737abbf73296cbe170b5..37367262bff1749d9e2c94522abeff7b2883dcc7 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Turtle.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Turtle.java
@@ -187,10 +187,12 @@ public class Turtle extends Animal {
         return pos.getY() < world.getSeaLevel() + 4 && TurtleEggBlock.onSand(world, pos) && isBrightEnoughToSpawn(world, pos);
     }
 
+    private Turtle.TurtleBreedGoal turtleBreedGoal; // KioCG
+
     @Override
     protected void registerGoals() {
         this.goalSelector.addGoal(0, new Turtle.TurtlePanicGoal(this, 1.2D));
-        this.goalSelector.addGoal(1, new Turtle.TurtleBreedGoal(this, 1.0D));
+        this.goalSelector.addGoal(1, turtleBreedGoal = new Turtle.TurtleBreedGoal(this, 1.0D)); // KioCG
         this.goalSelector.addGoal(1, new Turtle.TurtleLayEggGoal(this, 1.0D));
         this.goalSelector.addGoal(2, new TemptGoal(this, 1.1D, (itemstack) -> {
             return itemstack.is(ItemTags.TURTLE_FOOD);
@@ -301,6 +303,17 @@ public class Turtle extends Animal {
 
     }
 
+    // KioCG start
+    @Override
+    public void tickProduce() {
+        super.tickProduce();
+        if (this.canProduce()) {
+            this.produce();
+            turtleBreedGoal.breed();
+        }
+    }
+    // KioCG end
+
     @Override
     protected void ageBoundaryReached() {
         super.ageBoundaryReached();
diff --git a/src/main/java/net/minecraft/world/entity/animal/camel/Camel.java b/src/main/java/net/minecraft/world/entity/animal/camel/Camel.java
index 147974651d37e81d81ca97bfa31c9df9867492be..abfb6242a57dd689e9cc94f67e3782fcfd6d44a7 100644
--- a/src/main/java/net/minecraft/world/entity/animal/camel/Camel.java
+++ b/src/main/java/net/minecraft/world/entity/animal/camel/Camel.java
@@ -387,7 +387,7 @@ public class Camel extends AbstractHorse implements PlayerRideableJumping, Saddl
                 this.heal(2.0F, org.bukkit.event.entity.EntityRegainHealthEvent.RegainReason.EATING); // Paper - Add missing regain reason
             }
 
-            boolean flag1 = this.isTamed() && this.getAge() == 0 && this.canFallInLove();
+            boolean flag1 = this.isTamed() && this.canFeed(); // KioCG
 
             if (flag1) {
                 this.setInLove(player, item.copy()); // Paper - Fix EntityBreedEvent copying
diff --git a/src/main/java/net/minecraft/world/entity/animal/frog/Frog.java b/src/main/java/net/minecraft/world/entity/animal/frog/Frog.java
index 816977990639ec0559b652fc9666afd5046f0a5d..c1e7cb7924f8ea0e33c487193a0bb2ad83fc1f28 100644
--- a/src/main/java/net/minecraft/world/entity/animal/frog/Frog.java
+++ b/src/main/java/net/minecraft/world/entity/animal/frog/Frog.java
@@ -201,6 +201,17 @@ public class Frog extends Animal implements VariantHolder<Holder<FrogVariant>> {
         super.tick();
     }
 
+    // KioCG start
+    @Override
+    public void tickProduce() {
+        super.tickProduce();
+        if (this.canProduce()) {
+            this.produce();
+            this.spawnChildFromBreeding((ServerLevel) this.level(), this);
+        }
+    }
+    // KioCG end
+
     @Override
     public void onSyncedDataUpdated(EntityDataAccessor<?> data) {
         if (DATA_POSE.equals(data)) {
diff --git a/src/main/java/net/minecraft/world/entity/animal/goat/Goat.java b/src/main/java/net/minecraft/world/entity/animal/goat/Goat.java
index 376bcbc189008464f4d518c1e07643431ba96306..b1af4fab67512662d12008c03b5a4fcddfaf1860 100644
--- a/src/main/java/net/minecraft/world/entity/animal/goat/Goat.java
+++ b/src/main/java/net/minecraft/world/entity/animal/goat/Goat.java
@@ -229,7 +229,7 @@ public class Goat extends Animal {
     public InteractionResult mobInteract(Player player, InteractionHand hand) {
         ItemStack itemstack = player.getItemInHand(hand);
 
-        if (itemstack.is(Items.BUCKET) && !this.isBaby()) {
+        if (itemstack.is(Items.BUCKET) && !this.isBaby() && this.canProduce()) { // KioCG
             // CraftBukkit start - Got milk?
             PlayerBucketFillEvent event = CraftEventFactory.callPlayerBucketFillEvent((ServerLevel) player.level(), player, this.blockPosition(), this.blockPosition(), null, itemstack, Items.MILK_BUCKET, hand);
 
@@ -241,6 +241,7 @@ public class Goat extends Animal {
             player.playSound(this.getMilkingSound(), 1.0F, 1.0F);
             ItemStack itemstack1 = ItemUtils.createFilledResult(itemstack, player, CraftItemStack.asNMSCopy(event.getItemStack())); // CraftBukkit
 
+            this.produce(); // KioCG
             player.setItemInHand(hand, itemstack1);
             return InteractionResult.sidedSuccess(this.level().isClientSide);
         } else {
@@ -255,6 +256,13 @@ public class Goat extends Animal {
         }
     }
 
+    // KioCG start
+    @Override
+    public int getNumberOfProduced() {
+        return Math.min(1 + this.getTotalFeedingDays() / 25, 3);
+    }
+    // KioCG end
+
     @Override
     public SpawnGroupData finalizeSpawn(ServerLevelAccessor world, DifficultyInstance difficulty, MobSpawnType spawnReason, @Nullable SpawnGroupData entityData) {
         RandomSource randomsource = world.getRandom();
diff --git a/src/main/java/net/minecraft/world/entity/animal/horse/AbstractHorse.java b/src/main/java/net/minecraft/world/entity/animal/horse/AbstractHorse.java
index 1f5ed236fb7c0c1b0181675747d25d233f534284..5fe110e258f371066b36b0f2efd11256af5036ff 100644
--- a/src/main/java/net/minecraft/world/entity/animal/horse/AbstractHorse.java
+++ b/src/main/java/net/minecraft/world/entity/animal/horse/AbstractHorse.java
@@ -570,7 +570,7 @@ public abstract class AbstractHorse extends Animal implements ContainerListener,
             f = 4.0F;
             short0 = 60;
             b0 = 5;
-            if (!this.level().isClientSide && this.isTamed() && this.getAge() == 0 && !this.isInLove()) {
+            if (!this.level().isClientSide && this.isTamed() && this.canFeed()) { // KioCG
                 flag = true;
                 this.setInLove(player, item.copy()); // Paper - Fix EntityBreedEvent copying
             }
@@ -578,7 +578,7 @@ public abstract class AbstractHorse extends Animal implements ContainerListener,
             f = 10.0F;
             short0 = 240;
             b0 = 10;
-            if (!this.level().isClientSide && this.isTamed() && this.getAge() == 0 && !this.isInLove()) {
+            if (!this.level().isClientSide && this.isTamed() && this.canFeed()) { // KioCG
                 flag = true;
                 this.setInLove(player, item.copy()); // Paper - Fix EntityBreedEvent copying
             }
diff --git a/src/main/java/net/minecraft/world/entity/animal/horse/Llama.java b/src/main/java/net/minecraft/world/entity/animal/horse/Llama.java
index cf6a3a63b6f2b96943c0f399e8c82d293fee31ba..5a1733b3b6e3f7e5a3fdbb31e678e94e6dbc6c0c 100644
--- a/src/main/java/net/minecraft/world/entity/animal/horse/Llama.java
+++ b/src/main/java/net/minecraft/world/entity/animal/horse/Llama.java
@@ -177,7 +177,7 @@ public class Llama extends AbstractChestedHorse implements VariantHolder<Llama.V
             b0 = 90;
             b1 = 6;
             f = 10.0F;
-            if (this.isTamed() && this.getAge() == 0 && this.canFallInLove()) {
+            if (this.isTamed() && this.canFeed()) { // KioCG
                 flag = true;
                 this.setInLove(player, item.copy()); // Paper - Fix EntityBreedEvent copying
             }
diff --git a/src/main/java/net/minecraft/world/entity/animal/sniffer/Sniffer.java b/src/main/java/net/minecraft/world/entity/animal/sniffer/Sniffer.java
index fadd341ff398886a4da102eefa1beb95a63bbd6d..54aab0e38ef072253fbbc3dd47b337b86b35f159 100644
--- a/src/main/java/net/minecraft/world/entity/animal/sniffer/Sniffer.java
+++ b/src/main/java/net/minecraft/world/entity/animal/sniffer/Sniffer.java
@@ -485,6 +485,17 @@ public class Sniffer extends Animal {
         super.customServerAiStep();
     }
 
+    // KioCG start
+    @Override
+    public void tickProduce() {
+        super.tickProduce();
+        if (this.canProduce()) {
+            this.produce();
+            this.spawnChildFromBreeding((ServerLevel) this.level(), this);
+        }
+    }
+    // KioCG end
+
     @Override
     protected void sendDebugPackets() {
         super.sendDebugPackets();
diff --git a/src/main/java/net/minecraft/world/entity/npc/Villager.java b/src/main/java/net/minecraft/world/entity/npc/Villager.java
index 7e1871401ec5e3e9a85232053490259f132aec0a..b032632f68eda8a7c4045d2640f8e32c45ddcd3d 100644
--- a/src/main/java/net/minecraft/world/entity/npc/Villager.java
+++ b/src/main/java/net/minecraft/world/entity/npc/Villager.java
@@ -740,6 +740,7 @@ public class Villager extends AbstractVillager implements ReputationEventHandler
 
     @Override
     public boolean canBreed() {
+        if (!this.level().paperConfig().kiocgConfig.entity.animal.animalCanBreed) return false; // KioCG
         return this.foodLevel + this.countFoodPointsInInventory() >= 12 && !this.isSleeping() && this.getAge() == 0;
     }
 
