From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Joket_abc <15005771700@qq.com>
Date: Tue, 9 Apr 2024 12:35:05 +0800
Subject: [PATCH] Entity bossbar API


diff --git a/src/main/java/net/minecraft/server/level/ServerBossEvent.java b/src/main/java/net/minecraft/server/level/ServerBossEvent.java
index 4f91107f9ae42f96c060c310596db9aa869a8dbc..e0cd8255c962927461915ef2a8cc14903f180777 100644
--- a/src/main/java/net/minecraft/server/level/ServerBossEvent.java
+++ b/src/main/java/net/minecraft/server/level/ServerBossEvent.java
@@ -131,4 +131,32 @@ public class ServerBossEvent extends BossEvent {
     public Collection<ServerPlayer> getPlayers() {
         return this.unmodifiablePlayers;
     }
+
+    // KioCG start
+    public net.minecraft.nbt.CompoundTag save(net.minecraft.core.HolderLookup.Provider provider) {
+        net.minecraft.nbt.CompoundTag nbttagcompound = new net.minecraft.nbt.CompoundTag();
+
+        nbttagcompound.putString("Name", Component.Serializer.toJson(this.name, provider));
+        nbttagcompound.putBoolean("Visible", this.isVisible());
+        nbttagcompound.putString("Color", this.getColor().getName());
+        nbttagcompound.putString("Overlay", this.getOverlay().getName());
+        nbttagcompound.putBoolean("DarkenScreen", this.shouldDarkenScreen());
+        nbttagcompound.putBoolean("PlayBossMusic", this.shouldPlayBossMusic());
+        nbttagcompound.putBoolean("CreateWorldFog", this.shouldCreateWorldFog());
+        return nbttagcompound;
+    }
+
+    public static ServerBossEvent load(net.minecraft.nbt.CompoundTag nbt, net.minecraft.core.HolderLookup.Provider provider) {
+        Component displayName1 = Component.Serializer.fromJson(nbt.getString("Name"), provider);
+        BossBarColor color1 = BossBarColor.byName(nbt.getString("Color"));
+        BossBarOverlay overlay1 = BossBarOverlay.byName(nbt.getString("Overlay"));
+        ServerBossEvent bossbar = new ServerBossEvent(displayName1, color1, overlay1);
+
+        bossbar.setVisible(nbt.getBoolean("Visible"));
+        bossbar.setDarkenScreen(nbt.getBoolean("DarkenScreen"));
+        bossbar.setPlayBossMusic(nbt.getBoolean("PlayBossMusic"));
+        bossbar.setCreateWorldFog(nbt.getBoolean("CreateWorldFog"));
+        return bossbar;
+    }
+    // KioCG end
 }
diff --git a/src/main/java/net/minecraft/world/entity/Mob.java b/src/main/java/net/minecraft/world/entity/Mob.java
index 7b93c6a04cca2ac31d137f06ef83bb08559b10bf..1824d2b10bc0ea64234ab42896ce8fd1d3001ef7 100644
--- a/src/main/java/net/minecraft/world/entity/Mob.java
+++ b/src/main/java/net/minecraft/world/entity/Mob.java
@@ -145,6 +145,7 @@ public abstract class Mob extends LivingEntity implements EquipmentUser, Leashab
     private Leashable.LeashData leashData;
     private BlockPos restrictCenter;
     private float restrictRadius;
+    @Nullable private net.minecraft.server.level.ServerBossEvent bossbar; // KioCG
 
     public boolean aware = true; // CraftBukkit
 
@@ -449,6 +450,7 @@ public abstract class Mob extends LivingEntity implements EquipmentUser, Leashab
             this.updateControlFlags();
         }
 
+        updateBossbar(); // KioCG
     }
 
     protected void updateControlFlags() {
@@ -551,6 +553,8 @@ public abstract class Mob extends LivingEntity implements EquipmentUser, Leashab
         }
 
         nbt.putBoolean("Bukkit.Aware", this.aware); // CraftBukkit
+
+        if (this.bossbar != null) nbt.put("KioCG.Bossbar", this.bossbar.save(this.registryAccess())); // KioCG
     }
 
     @Override
@@ -628,6 +632,8 @@ public abstract class Mob extends LivingEntity implements EquipmentUser, Leashab
             this.aware = nbt.getBoolean("Bukkit.Aware");
         }
         // CraftBukkit end
+
+        if (nbt.contains("KioCG.Bossbar")) this.bossbar = net.minecraft.server.level.ServerBossEvent.load(nbt.getCompound("KioCG.Bossbar"), this.registryAccess()); // KioCG
     }
 
     @Override
@@ -1804,4 +1810,52 @@ public abstract class Mob extends LivingEntity implements EquipmentUser, Leashab
 
         return itemmonsteregg == null ? null : new ItemStack(itemmonsteregg);
     }
+
+    // KioCG start
+    @Nullable
+    public net.minecraft.server.level.ServerBossEvent getBossBar() {
+        return this.bossbar;
+    }
+
+    public void setBossBar(net.minecraft.server.level.ServerBossEvent bossbar) {
+        removeBossBar();
+        this.bossbar = bossbar;
+    }
+
+    public void removeBossBar() {
+        if (this.bossbar != null) {
+            this.bossbar.removeAllPlayers();
+            this.bossbar = null;
+        }
+    }
+
+    private void updateBossbar() {
+        if (this.bossbar != null) {
+            this.bossbar.setProgress(this.getHealth() / this.getMaxHealth());
+
+            java.util.Set<net.minecraft.server.level.ServerPlayer> set = com.google.common.collect.Sets.newHashSet();
+            Iterator iterator = this.tracker.seenBy.iterator();
+
+            while (iterator.hasNext()) {
+                net.minecraft.server.level.ServerPlayer entityplayer = (net.minecraft.server.level.ServerPlayer) iterator.next();
+
+                if (this.position().distanceToSqr(entityplayer.position()) <= 16 * 16) {
+                    this.bossbar.addPlayer(entityplayer);
+                    set.add(entityplayer);
+                }
+            }
+
+            java.util.Set<net.minecraft.server.level.ServerPlayer> set1 = com.google.common.collect.Sets.newHashSet(this.bossbar.getPlayers());
+
+            set1.removeAll(set);
+            Iterator iterator1 = set1.iterator();
+
+            while (iterator1.hasNext()) {
+                net.minecraft.server.level.ServerPlayer entityplayer1 = (net.minecraft.server.level.ServerPlayer) iterator1.next();
+
+                this.bossbar.removePlayer(entityplayer1);
+            }
+        }
+    }
+    // KioCG end
 }
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftMob.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftMob.java
index deb66c04abefb4a88521483db1612e494bd27164..6476349ef9759a9b471472f69d3545376d1dd17f 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftMob.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftMob.java
@@ -175,4 +175,16 @@ public abstract class CraftMob extends CraftLivingEntity implements Mob {
         return getHandle().getExperienceReward((ServerLevel) this.getHandle().level(), null);
     }
     // Paper end
+
+    // KioCG start
+    @Override
+    public org.bukkit.boss.BossBar getBossbar() {
+        return new org.bukkit.craftbukkit.boss.CraftBossBar(getHandle().getBossBar());
+    }
+
+    @Override
+    public void setBossbar(org.bukkit.boss.BossBar bossbar) {
+        getHandle().setBossBar(((org.bukkit.craftbukkit.boss.CraftBossBar) bossbar).getHandle());
+    }
+    // KioCG end
 }
