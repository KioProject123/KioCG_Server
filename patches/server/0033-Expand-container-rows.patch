From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Joket_abc <15005771700@qq.com>
Date: Fri, 5 Apr 2024 19:22:58 +0800
Subject: [PATCH] Expand container rows


diff --git a/src/main/java/net/minecraft/world/entity/player/Player.java b/src/main/java/net/minecraft/world/entity/player/Player.java
index e422b5a178c749c183e924ea461be25da6b62db1..028f8e4dabc2b4762061fb6674fa04e14671b18e 100644
--- a/src/main/java/net/minecraft/world/entity/player/Player.java
+++ b/src/main/java/net/minecraft/world/entity/player/Player.java
@@ -200,6 +200,7 @@ public abstract class Player extends LivingEntity {
     public boolean affectsSpawning = true; // Paper - Affects Spawning API
     public net.kyori.adventure.util.TriState flyingFallDamage = net.kyori.adventure.util.TriState.NOT_SET; // Paper - flying fall damage
     public int campfireHealTick; // KioCG
+    public int enderchestRows; // KioCG
 
     // CraftBukkit start
     public boolean fauxSleeping;
diff --git a/src/main/java/net/minecraft/world/inventory/ChestMenu.java b/src/main/java/net/minecraft/world/inventory/ChestMenu.java
index 0dbfd23bbfc6ad203f048142f8c90ef741849fe1..962522590aa10bde17652d9b2d5c86476bbfbab3 100644
--- a/src/main/java/net/minecraft/world/inventory/ChestMenu.java
+++ b/src/main/java/net/minecraft/world/inventory/ChestMenu.java
@@ -75,6 +75,21 @@ public class ChestMenu extends AbstractContainerMenu {
         return new ChestMenu(MenuType.GENERIC_9x6, syncId, playerInventory, inventory, 6);
     }
 
+    // KioCG start
+    public static ChestMenu oneRow(int syncId, Inventory playerInventory, Container inventory) {
+        return new ChestMenu(MenuType.GENERIC_9x1, syncId, playerInventory, inventory, 1);
+    }
+    public static ChestMenu twoRows(int syncId, Inventory playerInventory, Container inventory) {
+        return new ChestMenu(MenuType.GENERIC_9x2, syncId, playerInventory, inventory, 2);
+    }
+    public static ChestMenu fourRows(int syncId, Inventory playerInventory, Container inventory) {
+        return new ChestMenu(MenuType.GENERIC_9x4, syncId, playerInventory, inventory, 4);
+    }
+    public static ChestMenu fiveRows(int syncId, Inventory playerInventory, Container inventory) {
+        return new ChestMenu(MenuType.GENERIC_9x5, syncId, playerInventory, inventory, 5);
+    }
+    // KioCG end
+
     public ChestMenu(MenuType<?> type, int syncId, Inventory playerInventory, Container inventory, int rows) {
         super(type, syncId);
         checkContainerSize(inventory, rows * 9);
diff --git a/src/main/java/net/minecraft/world/inventory/PlayerEnderChestContainer.java b/src/main/java/net/minecraft/world/inventory/PlayerEnderChestContainer.java
index a15d5ff872dbd77f3c3145e0328f3d02e431ff8c..5622ad7997012b6e0743f353887d51b9db83253b 100644
--- a/src/main/java/net/minecraft/world/inventory/PlayerEnderChestContainer.java
+++ b/src/main/java/net/minecraft/world/inventory/PlayerEnderChestContainer.java
@@ -31,11 +31,18 @@ public class PlayerEnderChestContainer extends SimpleContainer {
     }
 
     public PlayerEnderChestContainer(Player owner) {
-        super(27);
+        super(6 * 9); // KioCG - 始终加载最大末影箱
         this.owner = owner;
         // CraftBukkit end
     }
 
+    // KioCG start
+    @Override
+    public int getContainerSize() {
+        return this.owner.enderchestRows * 9;
+    }
+    // KioCG end
+
     public void setActiveChest(EnderChestBlockEntity blockEntity) {
         this.activeChest = blockEntity;
     }
@@ -48,7 +55,7 @@ public class PlayerEnderChestContainer extends SimpleContainer {
     public void fromTag(ListTag list, HolderLookup.Provider registries) {
         int i;
 
-        for (i = 0; i < this.getContainerSize(); ++i) {
+        for (i = 0; i < 6 * 9; ++i) { // KioCG - 始终加载最大末影箱
             this.setItem(i, ItemStack.EMPTY);
         }
 
@@ -56,7 +63,7 @@ public class PlayerEnderChestContainer extends SimpleContainer {
             CompoundTag nbttagcompound = list.getCompound(i);
             int j = nbttagcompound.getByte("Slot") & 255;
 
-            if (j >= 0 && j < this.getContainerSize()) {
+            if (j >= 0 && j < 6 * 9) { // KioCG - 始终加载最大末影箱
                 this.setItem(j, (ItemStack) ItemStack.parse(registries, nbttagcompound).orElse(ItemStack.EMPTY));
             }
         }
@@ -67,7 +74,7 @@ public class PlayerEnderChestContainer extends SimpleContainer {
     public ListTag createTag(HolderLookup.Provider registries) {
         ListTag nbttaglist = new ListTag();
 
-        for (int i = 0; i < this.getContainerSize(); ++i) {
+        for (int i = 0; i < 6 * 9; ++i) { // KioCG - 始终加载最大末影箱
             ItemStack itemstack = this.getItem(i);
 
             if (!itemstack.isEmpty()) {
diff --git a/src/main/java/net/minecraft/world/level/block/ChestBlock.java b/src/main/java/net/minecraft/world/level/block/ChestBlock.java
index 0b27baf10770cb3077c4e75da55209689d614513..6dbf7bca4f1e29f5bb33e7622c35abcc411a48c6 100644
--- a/src/main/java/net/minecraft/world/level/block/ChestBlock.java
+++ b/src/main/java/net/minecraft/world/level/block/ChestBlock.java
@@ -225,6 +225,7 @@ public class ChestBlock extends AbstractChestBlock<ChestBlockEntity> implements
             }
         }
 
+        blockpropertychesttype = ChestType.SINGLE; // KioCG - 强制单箱子
         return (BlockState) ((BlockState) ((BlockState) this.defaultBlockState().setValue(ChestBlock.FACING, enumdirection)).setValue(ChestBlock.TYPE, blockpropertychesttype)).setValue(ChestBlock.WATERLOGGED, fluid.getType() == Fluids.WATER);
     }
 
diff --git a/src/main/java/net/minecraft/world/level/block/EnderChestBlock.java b/src/main/java/net/minecraft/world/level/block/EnderChestBlock.java
index 491a59336899179c79820cd61541d49f7337c0f6..eac92b5dfdfd7ed85dd32726168f1caa444fc5bb 100644
--- a/src/main/java/net/minecraft/world/level/block/EnderChestBlock.java
+++ b/src/main/java/net/minecraft/world/level/block/EnderChestBlock.java
@@ -92,7 +92,7 @@ public class EnderChestBlock extends AbstractChestBlock<EnderChestBlockEntity> i
                 playerEnderChestContainer.setActiveChest(enderChestBlockEntity);
                 // Paper start - Fix InventoryOpenEvent cancellation
                 if (player.openMenu(
-                    new SimpleMenuProvider((i, inventory, playerx) -> ChestMenu.threeRows(i, inventory, playerEnderChestContainer), CONTAINER_TITLE)
+                    new SimpleMenuProvider((i, inventory, playerx) -> this.getEnderChestRows(i, inventory, playerEnderChestContainer, player), CONTAINER_TITLE) // KioCG
                 ).isPresent()) {
                     player.awardStat(Stats.OPEN_ENDERCHEST);
                     PiglinAi.angerNearbyPiglins(player, true);
@@ -105,6 +105,34 @@ public class EnderChestBlock extends AbstractChestBlock<EnderChestBlockEntity> i
         }
     }
 
+    // KioCG start
+    private ChestMenu getEnderChestRows(int syncId, net.minecraft.world.entity.player.Inventory inventory, PlayerEnderChestContainer playerEnderChestContainer, Player player) {
+        org.bukkit.craftbukkit.entity.CraftHumanEntity bukkitPlayer = player.getBukkitEntity();
+        if (bukkitPlayer.hasPermission("kiocg.enderchestrows.6")) {
+            player.enderchestRows = 6;
+            return ChestMenu.sixRows(syncId, inventory, playerEnderChestContainer);
+        } else if (bukkitPlayer.hasPermission("kiocg.enderchestrows.5")) {
+            player.enderchestRows = 5;
+            return ChestMenu.fiveRows(syncId, inventory, playerEnderChestContainer);
+        } else if (bukkitPlayer.hasPermission("kiocg.enderchestrows.4")) {
+            player.enderchestRows = 4;
+            return ChestMenu.fourRows(syncId, inventory, playerEnderChestContainer);
+        } else if (bukkitPlayer.hasPermission("kiocg.enderchestrows.3")) {
+            player.enderchestRows = 3;
+            return ChestMenu.threeRows(syncId, inventory, playerEnderChestContainer);
+        } else if (bukkitPlayer.hasPermission("kiocg.enderchestrows.2")) {
+            player.enderchestRows = 2;
+            return ChestMenu.twoRows(syncId, inventory, playerEnderChestContainer);
+        } else if (bukkitPlayer.hasPermission("kiocg.enderchestrows.1")) {
+            player.enderchestRows = 1;
+            return ChestMenu.oneRow(syncId, inventory, playerEnderChestContainer);
+        } else {
+            player.enderchestRows = 3;
+            return ChestMenu.threeRows(syncId, inventory, playerEnderChestContainer);
+        }
+    }
+    // KioCG end
+
     @Override
     public BlockEntity newBlockEntity(BlockPos pos, BlockState state) {
         return new EnderChestBlockEntity(pos, state);
diff --git a/src/main/java/net/minecraft/world/level/block/TrappedChestBlock.java b/src/main/java/net/minecraft/world/level/block/TrappedChestBlock.java
index 17f0f170d68bb55efc61771e9a32ce62924bab2b..5253d064082e7623cb760fc3ce74feeaaeaf59e0 100644
--- a/src/main/java/net/minecraft/world/level/block/TrappedChestBlock.java
+++ b/src/main/java/net/minecraft/world/level/block/TrappedChestBlock.java
@@ -37,6 +37,8 @@ public class TrappedChestBlock extends ChestBlock {
         return Stats.CUSTOM.get(Stats.TRIGGER_TRAPPED_CHEST);
     }
 
+    // KioCG start
+    /*
     @Override
     protected boolean isSignalSource(BlockState state) {
         return true;
@@ -51,4 +53,6 @@ public class TrappedChestBlock extends ChestBlock {
     protected int getDirectSignal(BlockState state, BlockGetter world, BlockPos pos, Direction direction) {
         return direction == Direction.UP ? state.getSignal(world, pos, direction) : 0;
     }
+    */
+    // KioCG end
 }
diff --git a/src/main/java/net/minecraft/world/level/block/entity/ChestBlockEntity.java b/src/main/java/net/minecraft/world/level/block/entity/ChestBlockEntity.java
index b88aa184cd06a0485146f58a5b61a56a50911209..4f3d36721fbc021df3d21476f8019ab05da9fe44 100644
--- a/src/main/java/net/minecraft/world/level/block/entity/ChestBlockEntity.java
+++ b/src/main/java/net/minecraft/world/level/block/entity/ChestBlockEntity.java
@@ -68,7 +68,7 @@ public class ChestBlockEntity extends RandomizableContainerBlockEntity implement
 
     protected ChestBlockEntity(BlockEntityType<?> type, BlockPos pos, BlockState state) {
         super(type, pos, state);
-        this.items = NonNullList.withSize(27, ItemStack.EMPTY);
+        this.items = NonNullList.withSize(type == BlockEntityType.TRAPPED_CHEST ? 54 : 27, ItemStack.EMPTY); // KioCG
         this.openersCounter = new ContainerOpenersCounter() {
             @Override
             protected void onOpen(Level world, BlockPos pos, BlockState state) {
diff --git a/src/main/java/net/minecraft/world/level/block/entity/TrappedChestBlockEntity.java b/src/main/java/net/minecraft/world/level/block/entity/TrappedChestBlockEntity.java
index 74ad37e2b6ebb7a54497767337df98525cf55f22..ac3f45a9ae85b543be71331446f676b06899e5bd 100644
--- a/src/main/java/net/minecraft/world/level/block/entity/TrappedChestBlockEntity.java
+++ b/src/main/java/net/minecraft/world/level/block/entity/TrappedChestBlockEntity.java
@@ -10,6 +10,8 @@ public class TrappedChestBlockEntity extends ChestBlockEntity {
         super(BlockEntityType.TRAPPED_CHEST, pos, state);
     }
 
+    // KioCG start
+    /*
     @Override
     protected void signalOpenCount(Level world, BlockPos pos, BlockState state, int oldViewerCount, int newViewerCount) {
         super.signalOpenCount(world, pos, state, oldViewerCount, newViewerCount);
@@ -19,4 +21,21 @@ public class TrappedChestBlockEntity extends ChestBlockEntity {
             world.updateNeighborsAt(pos.below(), block);
         }
     }
+    */
+
+    @Override
+    protected net.minecraft.world.inventory.AbstractContainerMenu createMenu(int syncId, net.minecraft.world.entity.player.Inventory playerInventory) {
+        return net.minecraft.world.inventory.ChestMenu.sixRows(syncId, playerInventory, this);
+    }
+
+    @Override
+    protected net.minecraft.network.chat.Component getDefaultName() {
+        return net.minecraft.network.chat.Component.translatable("container.chestDouble");
+    }
+
+    @Override
+    public int getContainerSize() {
+        return 54;
+    }
+    // KioCG end
 }
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index 507684c5b8c8615314a2fbd968a0f981a1f02d30..e49dda50773a9d646f9c42d7f2bb52d2867844ee 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -234,6 +234,29 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
         }
     }
 
+    // KioCG start
+    @Override
+    public void recalculatePermissions() {
+        super.recalculatePermissions();
+
+        if (this.hasPermission("kiocg.enderchestrows.6")) {
+            this.getHandle().enderchestRows = 6;
+        } else if (this.hasPermission("kiocg.enderchestrows.5")) {
+            this.getHandle().enderchestRows = 5;
+        } else if (this.hasPermission("kiocg.enderchestrows.4")) {
+            this.getHandle().enderchestRows = 4;
+        } else if (this.hasPermission("kiocg.enderchestrows.3")) {
+            this.getHandle().enderchestRows = 3;
+        } else if (this.hasPermission("kiocg.enderchestrows.2")) {
+            this.getHandle().enderchestRows = 2;
+        } else if (this.hasPermission("kiocg.enderchestrows.1")) {
+            this.getHandle().enderchestRows = 1;
+        } else {
+            this.getHandle().enderchestRows = 3;
+        }
+    }
+    // KioCG end
+
     @Override
     public boolean isOp() {
         return this.server.getHandle().isOp(this.getProfile());
