From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Joket_abc <15005771700@qq.com>
Date: Fri, 15 Mar 2024 10:48:31 +0800
Subject: [PATCH] Auto discard rider display entity


diff --git a/src/main/java/net/minecraft/world/entity/Display.java b/src/main/java/net/minecraft/world/entity/Display.java
index bba45aa7ba4fa578344ec2b9dfa552097770a59f..f93cf7a056f3172720f30de0391920b875c0b9c6 100644
--- a/src/main/java/net/minecraft/world/entity/Display.java
+++ b/src/main/java/net/minecraft/world/entity/Display.java
@@ -97,6 +97,7 @@ public abstract class Display extends Entity {
     private Display.RenderState renderState;
     @Nullable
     private Display.PosRotInterpolationTarget posRotInterpolationTarget;
+    private int riderPriority = 0; public int getRiderPriority() { return this.riderPriority; } public void setRiderPriority(int riderPriority) { this.riderPriority = riderPriority; } // KioCG
 
     public Display(EntityType<?> type, Level world) {
         super(type, world);
@@ -180,6 +181,17 @@ public abstract class Display extends Entity {
         }
     }
 
+    // KioCG start
+    @Override
+    public void stopRiding(boolean suppressCancellation) {
+        Entity entity = this.getVehicle();
+        super.stopRiding(suppressCancellation);
+        if (entity != null && this.getVehicle() == null) {
+            this.discard();
+        }
+    }
+    // KioCG end
+
     protected abstract void updateRenderSubState(boolean shouldLerp, float lerpProgress);
 
     @Override
@@ -264,6 +276,8 @@ public abstract class Display extends Entity {
         } else {
             this.setBrightnessOverride(null);
         }
+
+        if (nbt.contains("KioCG.RiderPriority")) this.riderPriority = nbt.getInt("KioCG.RiderPriority"); // KioCG
     }
 
     public void setTransformation(Transformation transformation) {
@@ -295,6 +309,8 @@ public abstract class Display extends Entity {
         if (brightness != null) {
             Brightness.CODEC.encodeStart(NbtOps.INSTANCE, brightness).result().ifPresent(brightnessx -> nbt.put("brightness", brightnessx));
         }
+
+        nbt.putInt("KioCG.RiderPriority", this.riderPriority); // KioCG
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index ab187003b71afa0f08e0da2f9cb9b8a42128f4ee..58ce2776d2fd454e91a911c1a2aba6759e209797 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -4877,6 +4877,42 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource, S
         this.setRot(f, f1);
     }
 
+    // KioCG start
+    @Nullable
+    public <T extends Display> T addRiderDisplay(EntityType<T> type, java.util.function.Consumer<T> function) {
+        return addRiderDisplay(type, 0, function);
+    }
+
+    @Nullable
+    public <T extends Display> T addRiderDisplay(EntityType<T> type, int priority, java.util.function.Consumer<T> function) {
+        final Entity firstPassenger = this.getFirstPassenger();
+        if (firstPassenger == null || firstPassenger instanceof Display display && display.getRiderPriority() < priority) {
+            this.ejectPassengers();
+
+            T display = type.create(this.level());
+            if (display != null) {
+                display.moveTo(this.position());
+                display.persist = false;
+                display.setRiderPriority(priority);
+                display.startRiding(this);
+                function.accept(display);
+                this.level().addFreshEntity(display);
+            }
+            return display;
+        }
+        return null;
+    }
+
+    public boolean removeRiderDisplay(@Nullable UUID uuid) {
+        final Entity firstPassenger = this.getFirstPassenger();
+        if (firstPassenger instanceof Display display && (uuid == null || display.getUUID().equals(uuid))) {
+            firstPassenger.discard();
+            return true;
+        }
+        return false;
+    }
+    // KioCG end
+
     public static enum RemovalReason {
 
         KILLED(true, false), DISCARDED(true, false), UNLOADED_TO_CHUNK(false, true), UNLOADED_WITH_PLAYER(false, false), CHANGED_DIMENSION(false, false);
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftDisplay.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftDisplay.java
index 48eeb1d9ba0ad6f895bfe507a6fbe4b9c9530e47..9f188b9e47948c111a89f3923c0d5386811215e1 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftDisplay.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftDisplay.java
@@ -167,4 +167,6 @@ public class CraftDisplay extends CraftEntity implements Display {
             this.getHandle().setBrightnessOverride(null);
         }
     }
+
+    public int getRiderPriority() { return this.getHandle().getRiderPriority(); } public void setRiderPriority(int riderPriority) { this.getHandle().setRiderPriority(riderPriority); } // KioCG
 }
