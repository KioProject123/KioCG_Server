From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Joket_abc <15005771700@qq.com>
Date: Sat, 23 Mar 2024 20:14:36 +0800
Subject: [PATCH] Flowers and grasses spread naturally


diff --git a/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java b/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java
index e7a95d6bd9b422593bb2c2561d21b8845e387988..bdd9c30ed02e2ed61eacd30ed00beadb7d21b7c3 100644
--- a/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java
+++ b/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java
@@ -644,6 +644,7 @@ public class WorldConfiguration extends ConfigurationPart {
         public boolean sleepAnyTime = true;
         public double sleepHealingRegenRate = 20.0;
         public double saplingsWitheredChance = 0.025;
+        public boolean flowersAndGrassesSpreadNaturally = true;
     }
     // KioCG end
 }
diff --git a/src/main/java/net/minecraft/world/level/block/FlowerBlock.java b/src/main/java/net/minecraft/world/level/block/FlowerBlock.java
index 630cc4f2e7c9a5286375f2cf19d6374bed4a751b..463948ec9e7eab86de9ed6fd55dbbad47e5f7548 100644
--- a/src/main/java/net/minecraft/world/level/block/FlowerBlock.java
+++ b/src/main/java/net/minecraft/world/level/block/FlowerBlock.java
@@ -52,4 +52,52 @@ public class FlowerBlock extends BushBlock implements SuspiciousEffectHolder {
     public SuspiciousStewEffects getSuspiciousEffects() {
         return this.suspiciousStewEffects;
     }
+
+    // KioCG start
+    @Override
+    public boolean isRandomlyTicking(BlockState state) {
+        return true;
+    }
+
+    @Override
+    public byte dayTicking() {
+        return 1;
+    }
+
+    @Override
+    public void randomTick(BlockState state, net.minecraft.server.level.ServerLevel world, BlockPos pos, net.minecraft.util.RandomSource random) {
+        if (!world.paperConfig().kiocgConfig.flowersAndGrassesSpreadNaturally || !world.isRainingAt(pos)) return;
+        if (true) { // Spigot - SPIGOT-7159: Better modifier resolution // KioCG
+            int i = 5;
+            java.util.Iterator iterator = BlockPos.betweenClosed(pos.offset(-4, -1, -4), pos.offset(4, 1, 4)).iterator();
+
+            while (iterator.hasNext()) {
+                BlockPos blockposition1 = (BlockPos) iterator.next();
+
+                if (world.getBlockState(blockposition1).getBlock() instanceof FlowerBlock) {
+                    --i;
+                    if (i <= 0) {
+                        return;
+                    }
+                }
+            }
+
+            BlockPos blockposition2 = pos.offset(random.nextInt(3) - 1, random.nextInt(2) - random.nextInt(2), random.nextInt(3) - 1);
+            final BlockPos sourcePos = pos; // Paper - Use correct source for mushroom block spread event
+
+            for (int j = 0; j < 4; ++j) {
+                if (world.isEmptyBlock(blockposition2) && state.canSurvive(world, blockposition2)) {
+                    pos = blockposition2;
+                }
+
+                blockposition2 = pos.offset(random.nextInt(3) - 1, random.nextInt(2) - random.nextInt(2), random.nextInt(3) - 1);
+            }
+
+            if (world.isEmptyBlock(blockposition2) && state.canSurvive(world, blockposition2)) {
+                org.bukkit.craftbukkit.event.CraftEventFactory.handleBlockSpreadEvent(world, sourcePos, blockposition2, state, 2); // CraftBukkit // Paper - Use correct source for mushroom block spread event
+            }
+        }
+
+    }
+    // KioCG end
 }
diff --git a/src/main/java/net/minecraft/world/level/block/TallGrassBlock.java b/src/main/java/net/minecraft/world/level/block/TallGrassBlock.java
index d8d256e29f341c9759c3905ec0371e637e1a27d1..06cf43db29225eed0787bab9fb3100984edd2d37 100644
--- a/src/main/java/net/minecraft/world/level/block/TallGrassBlock.java
+++ b/src/main/java/net/minecraft/world/level/block/TallGrassBlock.java
@@ -48,4 +48,52 @@ public class TallGrassBlock extends BushBlock implements BonemealableBlock {
             DoublePlantBlock.placeAt(world, doublePlantBlock.defaultBlockState(), pos, 2);
         }
     }
+
+    // KioCG start
+    @Override
+    public boolean isRandomlyTicking(BlockState state) {
+        return true;
+    }
+
+    @Override
+    public byte dayTicking() {
+        return 1;
+    }
+
+    @Override
+    public void randomTick(BlockState state, ServerLevel world, BlockPos pos, RandomSource random) {
+        if (!world.paperConfig().kiocgConfig.flowersAndGrassesSpreadNaturally || !world.isRainingAt(pos)) return;
+        if (true) { // Spigot - SPIGOT-7159: Better modifier resolution // KioCG
+            int i = 5;
+            java.util.Iterator iterator = BlockPos.betweenClosed(pos.offset(-4, -1, -4), pos.offset(4, 1, 4)).iterator();
+
+            while (iterator.hasNext()) {
+                BlockPos blockposition1 = (BlockPos) iterator.next();
+
+                if (world.getBlockState(blockposition1).getBlock() instanceof TallGrassBlock) {
+                    --i;
+                    if (i <= 0) {
+                        return;
+                    }
+                }
+            }
+
+            BlockPos blockposition2 = pos.offset(random.nextInt(3) - 1, random.nextInt(2) - random.nextInt(2), random.nextInt(3) - 1);
+            final BlockPos sourcePos = pos; // Paper - Use correct source for mushroom block spread event
+
+            for (int j = 0; j < 4; ++j) {
+                if (world.isEmptyBlock(blockposition2) && state.canSurvive(world, blockposition2)) {
+                    pos = blockposition2;
+                }
+
+                blockposition2 = pos.offset(random.nextInt(3) - 1, random.nextInt(2) - random.nextInt(2), random.nextInt(3) - 1);
+            }
+
+            if (world.isEmptyBlock(blockposition2) && state.canSurvive(world, blockposition2)) {
+                org.bukkit.craftbukkit.event.CraftEventFactory.handleBlockSpreadEvent(world, sourcePos, blockposition2, state, 2); // CraftBukkit // Paper - Use correct source for mushroom block spread event
+            }
+        }
+
+    }
+    // KioCG end
 }
