From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Joket_abc <15005771700@qq.com>
Date: Wed, 28 Feb 2024 22:31:18 +0800
Subject: [PATCH] Override upstream patches


diff --git a/src/main/java/io/papermc/paper/adventure/ChatProcessor.java b/src/main/java/io/papermc/paper/adventure/ChatProcessor.java
index 14e412ebf75b0e06ab53a1c8f9dd1be6ad1e2680..25913fad74986577b56e2eb4f60442d16acd2cca 100644
--- a/src/main/java/io/papermc/paper/adventure/ChatProcessor.java
+++ b/src/main/java/io/papermc/paper/adventure/ChatProcessor.java
@@ -317,7 +317,7 @@ public final class ChatProcessor {
 
         private void sendToServer(final ChatType.Bound chatType, final @Nullable Function<Audience, net.minecraft.network.chat.Component> msgFunction) {
             final PlayerChatMessage toConsoleMessage = msgFunction == null ? ChatProcessor.this.message : ChatProcessor.this.message.withUnsignedContent(msgFunction.apply(ChatProcessor.this.server.console));
-            ChatProcessor.this.server.logChatMessage(toConsoleMessage.decoratedContent(), chatType, ChatProcessor.this.server.getPlayerList().verifyChatTrusted(toConsoleMessage) ? null : "Not Secure");
+            ChatProcessor.this.server.logChatMessage(toConsoleMessage.decoratedContent(), chatType, ChatProcessor.this.server.getPlayerList().verifyChatTrusted(toConsoleMessage) ? null : null); // KioCG
         }
     }
 
diff --git a/src/main/java/io/papermc/paper/commands/FeedbackForwardingSender.java b/src/main/java/io/papermc/paper/commands/FeedbackForwardingSender.java
index e3a5f1ec376319bdfda87fa27ae217bff3914292..26c6a95966a7751cc22e25092bd6cced5f641ea7 100644
--- a/src/main/java/io/papermc/paper/commands/FeedbackForwardingSender.java
+++ b/src/main/java/io/papermc/paper/commands/FeedbackForwardingSender.java
@@ -49,7 +49,7 @@ public final class FeedbackForwardingSender extends ServerCommandSender {
 
     @Override
     public String getName() {
-        return "FeedbackForwardingSender";
+        return io.papermc.paper.configuration.GlobalConfiguration.get().kiocgConfig.feedbackForwardingSenderName; // KioCG
     }
 
     @Override
diff --git a/src/main/java/io/papermc/paper/configuration/GlobalConfiguration.java b/src/main/java/io/papermc/paper/configuration/GlobalConfiguration.java
index b8499c1cea97a1a88a53053bc7da132f2fd3928d..f3f0652f99097fe39b2174ac3b53eec4a6581d9a 100644
--- a/src/main/java/io/papermc/paper/configuration/GlobalConfiguration.java
+++ b/src/main/java/io/papermc/paper/configuration/GlobalConfiguration.java
@@ -346,4 +346,12 @@ public class GlobalConfiguration extends ConfigurationPart {
         public boolean disableChorusPlantUpdates = false;
         public boolean disableMushroomBlockUpdates = false;
     }
+
+    // KioCG start
+    public KiocgConfig kiocgConfig;
+
+    public class KiocgConfig extends ConfigurationPart {
+        public String feedbackForwardingSenderName = "MOSS";
+    }
+    // KioCG end
 }
diff --git a/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java b/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java
index 7509b17414f836e8b53fc62b02b386ba4e8c5ca9..5251de7f1c475fcbb279e0c9161dbc1b54b92f99 100644
--- a/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java
+++ b/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java
@@ -548,4 +548,12 @@ public class WorldConfiguration extends ConfigurationPart {
             VANILLA, EIGENCRAFT, ALTERNATE_CURRENT
         }
     }
+
+    // KioCG start
+    public KiocgConfig kiocgConfig;
+
+    public class KiocgConfig extends ConfigurationPart {
+
+    }
+    // KioCG end
 }
diff --git a/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java b/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
index 7d82cc6b847124cf4225428ba310309544928148..ff74e69ddc1423bec03937b61b3be04b2be4529d 100644
--- a/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
+++ b/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
@@ -197,7 +197,7 @@ public class DedicatedServer extends MinecraftServer implements ServerInterface
         }
 
         // Paper start - detect running as root
-        if (io.papermc.paper.util.ServerEnvironment.userIsRootOrAdmin()) {
+        if (false && io.papermc.paper.util.ServerEnvironment.userIsRootOrAdmin()) { // KioCG
             DedicatedServer.LOGGER.warn("****************************");
             DedicatedServer.LOGGER.warn("YOU ARE RUNNING THIS SERVER AS AN ADMINISTRATIVE OR ROOT USER. THIS IS NOT ADVISED.");
             DedicatedServer.LOGGER.warn("YOU ARE OPENING YOURSELF UP TO POTENTIAL RISKS WHEN DOING THIS.");
@@ -296,7 +296,7 @@ public class DedicatedServer extends MinecraftServer implements ServerInterface
         String proxyFlavor = (io.papermc.paper.configuration.GlobalConfiguration.get().proxies.velocity.enabled) ? "Velocity" : "BungeeCord";
         String proxyLink = (io.papermc.paper.configuration.GlobalConfiguration.get().proxies.velocity.enabled) ? "https://docs.papermc.io/velocity/security" : "http://www.spigotmc.org/wiki/firewall-guide/";
         // Paper end - Add Velocity IP Forwarding Support
-        if (!this.usesAuthentication()) {
+        if (false && !this.usesAuthentication()) { // KioCG
             DedicatedServer.LOGGER.warn("**** SERVER IS RUNNING IN OFFLINE/INSECURE MODE!");
             DedicatedServer.LOGGER.warn("The server will make no attempt to authenticate usernames. Beware.");
             // Spigot start
diff --git a/src/main/java/net/minecraft/server/players/PlayerList.java b/src/main/java/net/minecraft/server/players/PlayerList.java
index 5f20606cc2c79ad9a4c4d4d6c9e6a2a31a88b282..b70d23725d21d82ae348c378b91330ed00e23552 100644
--- a/src/main/java/net/minecraft/server/players/PlayerList.java
+++ b/src/main/java/net/minecraft/server/players/PlayerList.java
@@ -1371,7 +1371,7 @@ public abstract class PlayerList {
         // Paper end
         boolean flag = this.verifyChatTrusted(message);
 
-        this.server.logChatMessage((unsignedFunction == null ? message.decoratedContent() : unsignedFunction.apply(this.server.console)), params, flag ? null : "Not Secure"); // Paper
+        this.server.logChatMessage((unsignedFunction == null ? message.decoratedContent() : unsignedFunction.apply(this.server.console)), params, flag ? null : null); // Paper // KioCG
         OutgoingChatMessage outgoingchatmessage = OutgoingChatMessage.create(message);
         boolean flag1 = false;
 
