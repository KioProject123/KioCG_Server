From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Joket_abc <15005771700@qq.com>
Date: Sun, 17 Mar 2024 14:39:32 +0800
Subject: [PATCH] Sleep any time


diff --git a/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java b/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java
index ab05fe72beb0ce2b67842fa281169fbc3c5e6494..9bda7a360da9a13f8b6a5b289cafbc97bdf91bb0 100644
--- a/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java
+++ b/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java
@@ -602,6 +602,9 @@ public class WorldConfiguration extends ConfigurationPart {
 
             public boolean betterMobGriefingSetting = true;
         }
+
+        public boolean sleepAnyTime = true;
+        public double sleepHealingRegenRate = 20;
     }
     // KioCG end
 }
diff --git a/src/main/java/net/minecraft/server/level/ServerLevel.java b/src/main/java/net/minecraft/server/level/ServerLevel.java
index f72d85b28327a99149d17c9f533f0c4bc3155937..c56346d4c204299df97ea6bce15abf4c131e3f13 100644
--- a/src/main/java/net/minecraft/server/level/ServerLevel.java
+++ b/src/main/java/net/minecraft/server/level/ServerLevel.java
@@ -656,6 +656,7 @@ public class ServerLevel extends Level implements WorldGenLevel, ca.spottedleaf.
         int i = this.getGameRules().getInt(GameRules.RULE_PLAYERS_SLEEPING_PERCENTAGE);
         long j;
 
+        if (!this.paperConfig().kiocgConfig.sleepAnyTime) { // KioCG
         if (this.sleepStatus.areEnoughSleeping(i) && this.sleepStatus.areEnoughDeepSleeping(i, this.players)) {
             // CraftBukkit start
             j = this.levelData.getDayTime() + 24000L;
@@ -675,6 +676,7 @@ public class ServerLevel extends Level implements WorldGenLevel, ca.spottedleaf.
                 this.resetWeatherCycle();
             }
         }
+        } // KioCG
 
         this.updateSkyBrightness();
         if (flag) {
@@ -1009,6 +1011,7 @@ public class ServerLevel extends Level implements WorldGenLevel, ca.spottedleaf.
     }
 
     private void announceSleepStatus() {
+        if (this.paperConfig().kiocgConfig.sleepAnyTime) return; // KioCG
         if (this.canSleepThroughNights()) {
             if (!this.getServer().isSingleplayer() || this.getServer().isPublished()) {
                 int i = this.getGameRules().getInt(GameRules.RULE_PLAYERS_SLEEPING_PERCENTAGE);
diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index 3fa64d67b00a7864810403968602d2bf0619f382..fa72d34522e51a179ba3d044e2cf309c0498dcd2 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -1512,7 +1512,7 @@ public class ServerPlayer extends net.minecraft.world.entity.player.Player imple
                 return Either.left(net.minecraft.world.entity.player.Player.BedSleepingProblem.OBSTRUCTED);
             } else {
                 this.setRespawnPosition(this.level().dimension(), blockposition, this.getYRot(), false, true, com.destroystokyo.paper.event.player.PlayerSetSpawnEvent.Cause.BED); // Paper - Add PlayerSetSpawnEvent
-                if (this.level().isDay()) {
+                if (this.level().isDay() && !this.level().paperConfig().kiocgConfig.sleepAnyTime) { // KioCG
                     return Either.left(net.minecraft.world.entity.player.Player.BedSleepingProblem.NOT_POSSIBLE_NOW);
                 } else {
                     if (!this.isCreative()) {
@@ -1562,7 +1562,7 @@ public class ServerPlayer extends net.minecraft.world.entity.player.Player imple
                         CriteriaTriggers.SLEPT_IN_BED.trigger(this);
                     });
 
-                    if (!this.serverLevel().canSleepThroughNights()) {
+                    if (!this.serverLevel().canSleepThroughNights() && !this.level().paperConfig().kiocgConfig.sleepAnyTime) { // KioCG
                         this.displayClientMessage(Component.translatable("sleep.not_possible"), true);
                     }
 
@@ -2542,7 +2542,7 @@ public class ServerPlayer extends net.minecraft.world.entity.player.Player imple
             // Paper end - Add PlayerSetSpawnEvent
 
             if (event.willNotifyPlayer() && event.getNotification() != null) { // Paper - Add PlayerSetSpawnEvent
-                this.sendSystemMessage(PaperAdventure.asVanilla(event.getNotification())); // Paper - Add PlayerSetSpawnEvent
+                this.sendSystemMessage(PaperAdventure.asVanilla(event.getNotification()), this.level().paperConfig().kiocgConfig.sleepAnyTime); // Paper - Add PlayerSetSpawnEvent // KioCG
             }
 
             this.respawnPosition = pos;
diff --git a/src/main/java/net/minecraft/world/entity/player/Player.java b/src/main/java/net/minecraft/world/entity/player/Player.java
index 4a29117cedb2b0ab02c2e1b13c07feceadc1ee48..07cd4ebd9420d8aca34aebd92a15040deb995059 100644
--- a/src/main/java/net/minecraft/world/entity/player/Player.java
+++ b/src/main/java/net/minecraft/world/entity/player/Player.java
@@ -275,7 +275,7 @@ public abstract class Player extends LivingEntity {
                 this.sleepCounter = 100;
             }
 
-            if (!this.level().isClientSide && this.level().isDay()) {
+            if (!this.level().isClientSide && this.level().isDay() && !this.level().paperConfig().kiocgConfig.sleepAnyTime) { // KioCG
                 this.stopSleepInBed(false, true);
             }
         } else if (this.sleepCounter > 0) {
diff --git a/src/main/java/net/minecraft/world/food/FoodData.java b/src/main/java/net/minecraft/world/food/FoodData.java
index ee7f4f06ff023d372611e704d5da58a37e80c388..a6bea77afb8323948657c8f85b9938b6da93942b 100644
--- a/src/main/java/net/minecraft/world/food/FoodData.java
+++ b/src/main/java/net/minecraft/world/food/FoodData.java
@@ -84,6 +84,27 @@ public class FoodData {
 
         boolean flag = player.level().getGameRules().getBoolean(GameRules.RULE_NATURAL_REGENERATION);
 
+        // KioCG start
+        if (player.level().paperConfig().kiocgConfig.sleepHealingRegenRate >= 0 && this.foodLevel > 6 && player.isSleeping() && player.isHurt()) {
+            ++this.tickTimer;
+            if (this.tickTimer >= player.level().paperConfig().kiocgConfig.sleepHealingRegenRate) {
+                final float health = player.getHealth();
+                player.heal(1.0F);
+                if (player.getHealth() > health) {
+                    ((net.minecraft.server.level.ServerLevel) player.level()).sendParticles(
+                            (ServerPlayer) player,
+                            net.minecraft.core.particles.ParticleTypes.HEART,
+                            player.getX(), player.getY(), player.getZ(),
+                            5,
+                            0.3, 0.3, 0.3,
+                            1.0,
+                            false);
+                }
+
+                this.tickTimer = 0;
+            }
+        } else
+        // KioCG end
         if (flag && this.saturationLevel > 0.0F && player.isHurt() && this.foodLevel >= 20) {
             ++this.tickTimer;
             if (this.tickTimer >= this.saturatedRegenRate) { // CraftBukkit
