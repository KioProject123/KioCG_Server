From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Joket_abc <15005771700@qq.com>
Date: Tue, 23 Jul 2024 16:56:25 +0800
Subject: [PATCH] Campfire boiling water


diff --git a/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java b/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java
index b677db8422b291c5d88f9a525584c0e89db73226..0bb261af69004df183ab6bfb7389aaf726c86fa7 100644
--- a/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java
+++ b/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java
@@ -617,6 +617,7 @@ public class WorldConfiguration extends ConfigurationPart {
 
             public int campfireExtinguishingOne = -1;
             public int campfireExtinguishingTwo = -1;
+            public int campfireBoilingWaterTime = 600;
         }
     }
     // KioCG end
diff --git a/src/main/java/net/minecraft/world/level/block/LayeredCauldronBlock.java b/src/main/java/net/minecraft/world/level/block/LayeredCauldronBlock.java
index 66dabb34eb4dfdd526ee1800d04aeda0cc99fcda..098fcb24a5174c173c57bfdd9afb5fb8227c4968 100644
--- a/src/main/java/net/minecraft/world/level/block/LayeredCauldronBlock.java
+++ b/src/main/java/net/minecraft/world/level/block/LayeredCauldronBlock.java
@@ -131,6 +131,19 @@ public class LayeredCauldronBlock extends AbstractCauldronBlock {
         if (event.isCancelled()) {
             return false;
         }
+
+        // KioCG start
+        final net.minecraft.world.level.block.entity.BlockEntity blockEntity = world.getBlockEntity(blockposition.below());
+        if (blockEntity instanceof net.minecraft.world.level.block.entity.CampfireBlockEntity campfireBlockEntity) {
+            final int oldLevel = event.getBlock().getBlockData() instanceof org.bukkit.block.data.Levelled oldLevelled ? oldLevelled.getLevel() : 0;
+            final int newLevel = event.getNewState().getBlockData() instanceof org.bukkit.block.data.Levelled newLevelled ? newLevelled.getLevel() : 0;
+            // 根本不关心岩浆
+            if (oldLevel != newLevel) {
+                campfireBlockEntity.cauldronLevelChanged(oldLevel, newLevel);
+            }
+        }
+        // KioCG end
+
         newState.update(true);
         if (sendGameEvent) world.gameEvent((Holder) GameEvent.BLOCK_CHANGE, blockposition, GameEvent.Context.of(newBlock)); // Paper - Call CauldronLevelChangeEvent
         return true;
diff --git a/src/main/java/net/minecraft/world/level/block/entity/CampfireBlockEntity.java b/src/main/java/net/minecraft/world/level/block/entity/CampfireBlockEntity.java
index 4d29c609c44fe2100c132cbac8abfdef4d0b201f..21701477e2cd0b24301bd8f4b268d035b95caf36 100644
--- a/src/main/java/net/minecraft/world/level/block/entity/CampfireBlockEntity.java
+++ b/src/main/java/net/minecraft/world/level/block/entity/CampfireBlockEntity.java
@@ -48,6 +48,7 @@ public class CampfireBlockEntity extends BlockEntity implements Clearable {
     private final RecipeManager.CachedCheck<SingleRecipeInput, CampfireCookingRecipe> quickCheck;
     public final boolean[] stopCooking; // Paper - Add more Campfire API
     private int litTicks = 0; // KioCG
+    private int cauldronTemperature = 0; // KioCG
 
     public CampfireBlockEntity(BlockPos pos, BlockState state) {
         super(BlockEntityType.CAMPFIRE, pos, state);
@@ -76,6 +77,7 @@ public class CampfireBlockEntity extends BlockEntity implements Clearable {
                 System.arraycopy(campfire.cookingProgress, 0, soulCampfire.cookingProgress, 0, campfire.cookingProgress.length);
                 System.arraycopy(campfire.cookingTime, 0, soulCampfire.cookingTime, 0, campfire.cookingTime.length);
                 System.arraycopy(campfire.stopCooking, 0, soulCampfire.stopCooking, 0, campfire.stopCooking.length);
+                soulCampfire.cauldronTemperature = campfire.cauldronTemperature;
             } else {
                 world.setBlock(pos, net.minecraft.world.level.block.Blocks.AIR.defaultBlockState(), 3);
             }
@@ -157,6 +159,32 @@ public class CampfireBlockEntity extends BlockEntity implements Clearable {
             }
         }
 
+        // KioCG start
+        BlockPos above = pos.above();
+        BlockState aboveState = world.getBlockState(above);
+        if (aboveState.is(net.minecraft.world.level.block.Blocks.WATER_CAULDRON)) {
+            if (!campfire.isCauldronBoiling()) {
+                Integer level = aboveState.getValue(net.minecraft.world.level.block.LayeredCauldronBlock.LEVEL);
+                campfire.cauldronTemperature = Math.min(campfire.cauldronTemperature + switch (level) {
+                    case 1 -> 3;
+                    case 2 -> 2;
+                    case 3 -> 1;
+                    default -> throw new IllegalStateException("Unexpected value: " + level);
+                }, world.paperConfig().kiocgConfig.theLongDark.campfireBoilingWaterTime);
+                flag = true;
+            } else {
+                if (world.getRandom().nextDouble() < 0.1) {
+                    world.playSound(null, above, net.minecraft.sounds.SoundEvents.POINTED_DRIPSTONE_DRIP_WATER_INTO_CAULDRON, net.minecraft.sounds.SoundSource.BLOCKS, 1.0F, 0.1F);
+                }
+
+                double x = (double) above.getX() + 0.5;
+                double y = (double) above.getY() + 1.0;
+                double z = (double) above.getZ() + 0.5;
+                ((net.minecraft.server.level.ServerLevel) world).sendParticles(ParticleTypes.FALLING_WATER, x, y, z, 10, 0.25, 0.1, 0.25, 1.0);
+            }
+        }
+        // KioCG end
+
         if (flag) {
             setChanged(world, pos, state);
         }
@@ -172,6 +200,12 @@ public class CampfireBlockEntity extends BlockEntity implements Clearable {
                 campfire.cookingProgress[i] = Mth.clamp(campfire.cookingProgress[i] - 2, 0, campfire.cookingTime[i]);
             }
         }
+        // KioCG start
+        if (campfire.cauldronTemperature > 0) {
+            flag = true;
+            campfire.cauldronTemperature = Math.max(0, campfire.cauldronTemperature - 2);
+        }
+        // KioCG end
 
         if (flag) {
             setChanged(world, pos, state);
@@ -189,12 +223,27 @@ public class CampfireBlockEntity extends BlockEntity implements Clearable {
                 campfire.cookingProgress[i] = (int) 0;
             }
         }
+        if (campfire.cauldronTemperature > 0) {
+            flag = true;
+            campfire.cauldronTemperature = 0;
+        }
 
         if (flag) {
             setChanged(world, pos, state);
         }
 
     }
+
+    public boolean isCauldronBoiling() {
+        return this.cauldronTemperature >= this.level.paperConfig().kiocgConfig.theLongDark.campfireBoilingWaterTime;
+    }
+
+    public void cauldronLevelChanged(int oldLevel, int newLevel) {
+        if (newLevel > oldLevel) {
+            this.cauldronTemperature = (int) ((double) this.cauldronTemperature * oldLevel / newLevel);
+            this.setChanged();
+        }
+    }
     // KioCG end
 
     public static void particleTick(Level world, BlockPos pos, BlockState state, CampfireBlockEntity campfire) {
@@ -258,6 +307,7 @@ public class CampfireBlockEntity extends BlockEntity implements Clearable {
         // Paper end - Add more Campfire API
 
         if (nbt.contains("KioCG.LitTicks", org.bukkit.craftbukkit.util.CraftMagicNumbers.NBT.TAG_INT)) litTicks = nbt.getInt("KioCG.LitTicks"); // KioCG
+        if (nbt.contains("KioCG.CauldronTemperature", org.bukkit.craftbukkit.util.CraftMagicNumbers.NBT.TAG_INT)) cauldronTemperature = nbt.getInt("KioCG.CauldronTemperature"); // KioCG
     }
 
     @Override
@@ -274,6 +324,7 @@ public class CampfireBlockEntity extends BlockEntity implements Clearable {
         nbt.putByteArray("Paper.StopCooking", cookingState);
         // Paper end - Add more Campfire API
         nbt.putInt("KioCG.LitTicks", litTicks); // KioCG
+        nbt.putInt("KioCG.CauldronTemperature", cauldronTemperature); // KioCG
     }
 
     @Override
diff --git a/src/main/java/org/bukkit/craftbukkit/block/CraftCampfire.java b/src/main/java/org/bukkit/craftbukkit/block/CraftCampfire.java
index a776bba2ec51c6aecce98a3abceb2c235522d99d..2f59ee950ab8199374009cb65129f3a7c64f42b8 100644
--- a/src/main/java/org/bukkit/craftbukkit/block/CraftCampfire.java
+++ b/src/main/java/org/bukkit/craftbukkit/block/CraftCampfire.java
@@ -98,4 +98,11 @@ public class CraftCampfire extends CraftBlockEntityState<CampfireBlockEntity> im
         return getSnapshot().stopCooking[index];
     }
     // Paper end
+
+    // KioCG start
+    @Override
+    public boolean isCauldronBoiling() {
+        return getSnapshot().isCauldronBoiling();
+    }
+    // KioCG end
 }
