From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Joket_abc <15005771700@qq.com>
Date: Tue, 2 Apr 2024 19:33:24 +0800
Subject: [PATCH] Breeding animals


diff --git a/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java b/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java
index 9f53b440d6952a8a73a6bc631d48117ab1b5ac17..efa39a88070c251038bc41aad035c20f0ba25d61 100644
--- a/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java
+++ b/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java
@@ -608,6 +608,12 @@ public class WorldConfiguration extends ConfigurationPart {
                 public boolean babyZombieJockey = true;
             }
 
+            public KiocgConfig.Entity.Animal animal;
+            public class Animal extends ConfigurationPart {
+                public boolean villagerCanBreed = false;
+                public double feedingHugeChance = 0.001;
+            }
+
             public boolean turretEnable = true;
             public int turretCooldownDefault = 100;
             public double turretRangeDefault = 8.0;
diff --git a/src/main/java/net/minecraft/core/dispenser/DispenseItemBehavior.java b/src/main/java/net/minecraft/core/dispenser/DispenseItemBehavior.java
index 60d3319016beb4f60cbc26dde165f64cf7577602..3c0538033b6e2e2dc7994edb3b51796957d74c1b 100644
--- a/src/main/java/net/minecraft/core/dispenser/DispenseItemBehavior.java
+++ b/src/main/java/net/minecraft/core/dispenser/DispenseItemBehavior.java
@@ -902,7 +902,7 @@ public interface DispenseItemBehavior {
             protected ItemStack execute(BlockSource pointer, ItemStack stack) {
                 ServerLevel worldserver = pointer.level();
                 BlockPos blockposition = pointer.pos().relative((Direction) pointer.state().getValue(DispenserBlock.FACING));
-                List<Armadillo> list = worldserver.getEntitiesOfClass(Armadillo.class, new AABB(blockposition), EntitySelector.NO_SPECTATORS);
+                List<LivingEntity> list = worldserver.getEntitiesOfClass(LivingEntity.class, new AABB(blockposition), EntitySelector.NO_SPECTATORS); // KioCG
 
                 if (list.isEmpty()) {
                     this.setSuccess(false);
@@ -935,7 +935,7 @@ public interface DispenseItemBehavior {
                     // CraftBukkit end
                     Iterator iterator1 = list.iterator();
 
-                    Armadillo armadillo;
+                    boolean continueLoop = true; // KioCG
 
                     do {
                         if (!iterator1.hasNext()) {
@@ -943,8 +943,15 @@ public interface DispenseItemBehavior {
                             return stack;
                         }
 
-                        armadillo = (Armadillo) iterator1.next();
-                    } while (!armadillo.brushOffScute());
+                        // KioCG start
+                        final LivingEntity entity = (LivingEntity) iterator1.next();
+                        if (entity instanceof Armadillo armadillo) {
+                            continueLoop = !armadillo.brushOffScute();
+                        } else if (entity instanceof net.minecraft.world.entity.animal.Turtle turtle) {
+                            continueLoop = !turtle.brushOffScute();
+                        }
+                    } while (continueLoop);
+                        // KioCG end
 
                     stack.hurtAndBreak(16, worldserver, (ServerPlayer) null, (item) -> {
                     });
diff --git a/src/main/java/net/minecraft/world/entity/AgeableMob.java b/src/main/java/net/minecraft/world/entity/AgeableMob.java
index 7a61d82039a4793f090c928189c01c4df66a7ede..5acfd92cfd20b60a049e8a4e013339ecf400c707 100644
--- a/src/main/java/net/minecraft/world/entity/AgeableMob.java
+++ b/src/main/java/net/minecraft/world/entity/AgeableMob.java
@@ -21,6 +21,11 @@ public abstract class AgeableMob extends PathfinderMob {
     protected int forcedAge;
     protected int forcedAgeTimer;
     public boolean ageLocked; // CraftBukkit
+    // KioCG start
+    private int refreshDay;
+    public int feedingToday;
+    public int produceToday;
+    // KioCG end
 
     protected AgeableMob(EntityType<? extends AgeableMob> type, Level world) {
         super(type, world);
@@ -41,7 +46,7 @@ public abstract class AgeableMob extends PathfinderMob {
             if ( i < 0 )
             {
                 ++i;
-                this.setAge( i );
+                // this.setAge( i ); // KioCG - 阻止小动物自然生长
             } else if ( i > 0 )
             {
                 --i;
@@ -114,6 +119,13 @@ public abstract class AgeableMob extends PathfinderMob {
         this.ageUp(age, false);
     }
 
+    // KioCG start
+    public void ageUp() {
+        ageUp(400);
+        this.feedingFeed();
+    }
+    // KioCG end
+
     public void setAge(int age) {
         int j = this.getAge();
 
@@ -131,6 +143,11 @@ public abstract class AgeableMob extends PathfinderMob {
         nbt.putInt("Age", this.getAge());
         nbt.putInt("ForcedAge", this.forcedAge);
         nbt.putBoolean("AgeLocked", this.ageLocked); // CraftBukkit
+        // KioCG start
+        nbt.putInt("KioCG.RefreshDay", this.refreshDay);
+        nbt.putInt("KioCG.FeedingToday", this.feedingToday);
+        nbt.putInt("KioCG.ProduceToday", this.produceToday);
+        // KioCG end
     }
 
     @Override
@@ -139,6 +156,17 @@ public abstract class AgeableMob extends PathfinderMob {
         this.setAge(nbt.getInt("Age"));
         this.forcedAge = nbt.getInt("ForcedAge");
         this.ageLocked = nbt.getBoolean("AgeLocked"); // CraftBukkit
+        // KioCG start
+        if (nbt.contains("KioCG.RefreshDay", net.minecraft.nbt.Tag.TAG_INT)) {
+            this.refreshDay = nbt.getInt("KioCG.RefreshDay");
+        }
+        if (nbt.contains("KioCG.FeedingToday", net.minecraft.nbt.Tag.TAG_INT)) {
+            this.feedingToday = nbt.getInt("KioCG.FeedingToday");
+        }
+        if (nbt.contains("KioCG.ProduceToday", net.minecraft.nbt.Tag.TAG_INT)) {
+            this.produceToday = nbt.getInt("KioCG.ProduceToday");
+        }
+        // KioCG end
     }
 
     @Override
@@ -166,11 +194,22 @@ public abstract class AgeableMob extends PathfinderMob {
 
             if (i < 0) {
                 ++i;
-                this.setAge(i);
+                // this.setAge(i); // KioCG - 阻止小动物自然生长
             } else if (i > 0) {
                 --i;
                 this.setAge(i);
             }
+
+            // KioCG start
+            if (this.level().isDay()) {
+                final int days = this.level().getDays();
+                if (days != this.refreshDay) {
+                    this.refreshDay = days;
+                    this.feedingToday = 0;
+                    this.produceToday = 0;
+                }
+            }
+            // KioCG end
         }
 
     }
@@ -205,6 +244,24 @@ public abstract class AgeableMob extends PathfinderMob {
         return (int) ((float) (breedingAge / 20) * 0.1F);
     }
 
+    // KioCG start
+    public boolean canFeed() {
+        return this.feedingToday < (this.isHugeSimulate() ? 3 : 1);
+    }
+
+    public void feedingFeed() {
+        ++this.feedingToday;
+    }
+
+    public boolean canProduce() {
+        return this.produceToday < (this.isHugeSimulate() ? 3 : 1);
+    }
+
+    public void produce() {
+        ++produceToday;
+    }
+    // KioCG end
+
     public static class AgeableMobGroupData implements SpawnGroupData {
 
         private int groupSize;
diff --git a/src/main/java/net/minecraft/world/entity/ai/goal/EatBlockGoal.java b/src/main/java/net/minecraft/world/entity/ai/goal/EatBlockGoal.java
index 4e2c23ccdf4e4a4d65b291dbe20952bae1838bff..8b5a8ae87449257ca322a205899ee2c7fba79ae5 100644
--- a/src/main/java/net/minecraft/world/entity/ai/goal/EatBlockGoal.java
+++ b/src/main/java/net/minecraft/world/entity/ai/goal/EatBlockGoal.java
@@ -69,6 +69,7 @@ public class EatBlockGoal extends Goal {
     @Override
     public void tick() {
         this.eatAnimationTick = Math.max(0, this.eatAnimationTick - 1);
+        if (true) return; // KioCG
         if (this.eatAnimationTick == this.adjustedTickDelay(4)) {
             BlockPos blockposition = this.mob.blockPosition();
 
diff --git a/src/main/java/net/minecraft/world/entity/animal/Animal.java b/src/main/java/net/minecraft/world/entity/animal/Animal.java
index 1808e1b01afa3041a54c9c9a7586d4d61960527a..0c1c5c1fb670acce8d2d183fc036bde30cbb7744 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Animal.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Animal.java
@@ -147,16 +147,16 @@ public abstract class Animal extends AgeableMob {
         if (this.isFood(itemstack)) {
             int i = this.getAge();
 
-            if (!this.level().isClientSide && i == 0 && this.canFallInLove()) {
+            if (!this.level().isClientSide && this.canEatFoodIfIsAdult()) { // KioCG
                 final ItemStack breedCopy = itemstack.copy(); // Paper - Fix EntityBreedEvent copying
                 this.usePlayerItem(player, hand, itemstack);
-                this.setInLove(player, breedCopy); // Paper - Fix EntityBreedEvent copying
+                this.eatFood(); // KioCG
                 return InteractionResult.SUCCESS;
             }
 
-            if (this.isBaby()) {
+            if (this.isBaby() && this.canFeed()) { // KioCG
                 this.usePlayerItem(player, hand, itemstack);
-                this.ageUp(getSpeedUpSecondsWhenFeeding(-i), true);
+                this.ageUp(); // KioCG
                 return InteractionResult.sidedSuccess(this.level().isClientSide);
             }
 
@@ -172,33 +172,56 @@ public abstract class Animal extends AgeableMob {
         stack.consume(1, player);
     }
 
-    public boolean canFallInLove() {
-        return this.inLove <= 0;
+    // KioCG start
+    // public boolean canFallInLove() {
+    //     return this.inLove <= 0;
+    // }
+    //
+    // @Deprecated @io.papermc.paper.annotation.DoNotUse // Paper - Fix EntityBreedEvent copying
+    // public void setInLove(@Nullable Player player) {
+    //     // Paper start - Fix EntityBreedEvent copying
+    //     this.setInLove(player, null);
+    // }
+    // public void setInLove(@Nullable Player player, @Nullable ItemStack breedItemCopy) {
+    //     if (breedItemCopy != null) this.breedItem = breedItemCopy;
+    //     // Paper end - Fix EntityBreedEvent copying
+    //     // CraftBukkit start
+    //     EntityEnterLoveModeEvent entityEnterLoveModeEvent = CraftEventFactory.callEntityEnterLoveModeEvent(player, this, 600);
+    //     if (entityEnterLoveModeEvent.isCancelled()) {
+    //         this.breedItem = null; // Paper - Fix EntityBreedEvent copying; clear if cancelled
+    //         return;
+    //     }
+    //     this.inLove = entityEnterLoveModeEvent.getTicksInLove();
+    //     // CraftBukkit end
+    //     if (player != null) {
+    //         this.loveCause = player.getUUID();
+    //     }
+    //     // Paper - Fix EntityBreedEvent copying; set breed item in better place
+    //
+    //     this.level().broadcastEntityEvent(this, (byte) 18);
+    // }
+
+    public boolean canEatFoodIfIsAdult() {
+        return !this.isBaby() && this.canFeed(); // KioCG
     }
 
-    @Deprecated @io.papermc.paper.annotation.DoNotUse // Paper - Fix EntityBreedEvent copying
-    public void setInLove(@Nullable Player player) {
-        // Paper start - Fix EntityBreedEvent copying
-        this.setInLove(player, null);
-    }
-    public void setInLove(@Nullable Player player, @Nullable ItemStack breedItemCopy) {
-        if (breedItemCopy != null) this.breedItem = breedItemCopy;
-        // Paper end - Fix EntityBreedEvent copying
-        // CraftBukkit start
-        EntityEnterLoveModeEvent entityEnterLoveModeEvent = CraftEventFactory.callEntityEnterLoveModeEvent(player, this, 600);
-        if (entityEnterLoveModeEvent.isCancelled()) {
-            this.breedItem = null; // Paper - Fix EntityBreedEvent copying; clear if cancelled
-            return;
-        }
-        this.inLove = entityEnterLoveModeEvent.getTicksInLove();
-        // CraftBukkit end
-        if (player != null) {
-            this.loveCause = player.getUUID();
-        }
-        // Paper - Fix EntityBreedEvent copying; set breed item in better place
+    public void eatFood() {
+        this.feedingFeed();
+
+        final net.minecraft.resources.ResourceKey<net.minecraft.world.level.storage.loot.LootTable> lootTable = this.lootTable;
+        this.lootTable = null;
+        this.forceDrops = true;
+        this.dropFromLootTable(this.damageSources().generic(), false);
+        this.forceDrops = false;
+        this.lootTable = lootTable;
 
         this.level().broadcastEntityEvent(this, (byte) 18);
+
+        if (!this.isHugeSimulate() && this.random.nextDouble() < this.level().paperConfig().kiocgConfig.entity.animal.feedingHugeChance) {
+            this.setHugeSimulate();
+        }
     }
+    // KioCG end
 
     public void setInLoveTime(int loveTicks) {
         this.inLove = loveTicks;
diff --git a/src/main/java/net/minecraft/world/entity/animal/Chicken.java b/src/main/java/net/minecraft/world/entity/animal/Chicken.java
index 8e347718f72297398b5e6d34a893264bc10efe18..a54680c1201be07efbb769f13ed7dbfbba506ad9 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Chicken.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Chicken.java
@@ -50,7 +50,7 @@ public class Chicken extends Animal {
 
     public Chicken(EntityType<? extends Chicken> type, Level world) {
         super(type, world);
-        this.eggTime = this.random.nextInt(6000) + 6000;
+        this.eggTime = this.random.nextInt(200); // KioCG
         this.setPathfindingMalus(PathType.WATER, 0.0F);
     }
 
@@ -96,13 +96,14 @@ public class Chicken extends Animal {
         }
 
         this.flap += this.flapping * 2.0F;
-        if (!this.level().isClientSide && this.isAlive() && !this.isBaby() && !this.isChickenJockey() && --this.eggTime <= 0) {
+        if (!this.level().isClientSide && this.isAlive() && !this.isBaby() && !this.isChickenJockey() && this.canProduce() && --this.eggTime <= 0) { // KioCG
             this.playSound(SoundEvents.CHICKEN_EGG, 1.0F, (this.random.nextFloat() - this.random.nextFloat()) * 0.2F + 1.0F);
             this.forceDrops = true; // CraftBukkit
             this.spawnAtLocation((ItemLike) Items.EGG);
             this.forceDrops = false; // CraftBukkit
             this.gameEvent(GameEvent.ENTITY_PLACE);
-            this.eggTime = this.random.nextInt(6000) + 6000;
+            this.eggTime = this.random.nextInt(200); // KioCG
+            this.produce(); // KioCG
         }
 
     }
diff --git a/src/main/java/net/minecraft/world/entity/animal/Cow.java b/src/main/java/net/minecraft/world/entity/animal/Cow.java
index e336934f37075a827843e4b1bb2b6b660d2c60c9..174d4188b459edbdbf408e85b49a898139b90c1e 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Cow.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Cow.java
@@ -97,6 +97,13 @@ public class Cow extends Animal {
         ItemStack itemstack = player.getItemInHand(hand);
 
         if (itemstack.is(Items.BUCKET) && !this.isBaby()) {
+            // KioCG start
+            if (!this.canProduce()) {
+                player.containerMenu.sendAllDataToRemote(); // Paper - Fix inventory desync
+                return InteractionResult.PASS;
+            }
+            // KioCG end
+
             // CraftBukkit start - Got milk?
             PlayerBucketFillEvent event = CraftEventFactory.callPlayerBucketFillEvent((ServerLevel) player.level(), player, this.blockPosition(), this.blockPosition(), null, itemstack, Items.MILK_BUCKET, hand);
 
@@ -109,6 +116,7 @@ public class Cow extends Animal {
             player.playSound(SoundEvents.COW_MILK, 1.0F, 1.0F);
             ItemStack itemstack1 = ItemUtils.createFilledResult(itemstack, player, CraftItemStack.asNMSCopy(event.getItemStack())); // CraftBukkit
 
+            this.produce(); // KioCG
             player.setItemInHand(hand, itemstack1);
             return InteractionResult.sidedSuccess(this.level().isClientSide);
         } else {
diff --git a/src/main/java/net/minecraft/world/entity/animal/MushroomCow.java b/src/main/java/net/minecraft/world/entity/animal/MushroomCow.java
index 0c21959f57ae88fcd0a4d6dc911c1ce347c96528..659d55516cbe238c0ba04cdd9b0d9f53a2e9fdde 100644
--- a/src/main/java/net/minecraft/world/entity/animal/MushroomCow.java
+++ b/src/main/java/net/minecraft/world/entity/animal/MushroomCow.java
@@ -96,6 +96,13 @@ public class MushroomCow extends Cow implements Shearable, VariantHolder<Mushroo
         ItemStack itemstack = player.getItemInHand(hand);
 
         if (itemstack.is(Items.BOWL) && !this.isBaby()) {
+            // KioCG start
+            if (!this.canProduce()) {
+                player.containerMenu.sendAllDataToRemote(); // Paper - Fix inventory desync
+                return InteractionResult.PASS;
+            }
+            // KioCG end
+
             boolean flag = false;
             ItemStack itemstack1;
 
@@ -110,6 +117,7 @@ public class MushroomCow extends Cow implements Shearable, VariantHolder<Mushroo
 
             ItemStack itemstack2 = ItemUtils.createFilledResult(itemstack, player, itemstack1, false);
 
+            this.produce(); // KioCG
             player.setItemInHand(hand, itemstack2);
             SoundEvent soundeffect;
 
diff --git a/src/main/java/net/minecraft/world/entity/animal/Panda.java b/src/main/java/net/minecraft/world/entity/animal/Panda.java
index e108f876d3f129c6287f13d68427aed2a6f0c5b1..5f5f6352d65f0e1aa2d3c8bbde1a9ffdda69d1c6 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Panda.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Panda.java
@@ -669,13 +669,13 @@ public class Panda extends Animal {
                 this.gotBamboo = true;
             }
 
-            if (this.isBaby()) {
+            if (this.isBaby() && this.canFeed()) { // KioCG
                 this.usePlayerItem(player, hand, itemstack);
-                this.ageUp((int) ((float) (-this.getAge() / 20) * 0.1F), true);
-            } else if (!this.level().isClientSide && this.getAge() == 0 && this.canFallInLove()) {
+                this.ageUp(); // KioCG
+            } else if (!this.level().isClientSide && this.canEatFoodIfIsAdult()) { // KioCG
                 final ItemStack breedCopy = itemstack.copy(); // Paper - Fix EntityBreedEvent copying
                 this.usePlayerItem(player, hand, itemstack);
-                this.setInLove(player, breedCopy); // Paper - Fix EntityBreedEvent copying
+                this.eatFood(); // KioCG
             } else {
                 if (this.level().isClientSide || this.isSitting() || this.isInWater()) {
                     return InteractionResult.PASS;
diff --git a/src/main/java/net/minecraft/world/entity/animal/Sheep.java b/src/main/java/net/minecraft/world/entity/animal/Sheep.java
index 38ac2759894660be1ee7ba59b0bd1270158e9232..888f96021de87e6f57c36e9809f74e1942f69c3b 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Sheep.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Sheep.java
@@ -95,6 +95,7 @@ public class Sheep extends Animal implements Shearable {
     }, Sheep::createSheepColor)));
     private int eatAnimationTick;
     private EatBlockGoal eatBlockGoal;
+    public int woolTime; // KioCG
 
     private static int createSheepColor(DyeColor color) {
         if (color == DyeColor.WHITE) {
@@ -113,6 +114,7 @@ public class Sheep extends Animal implements Shearable {
 
     public Sheep(EntityType<? extends Sheep> type, Level world) {
         super(type, world);
+        this.woolTime = this.random.nextInt(200); // KioCG
     }
 
     @Override
@@ -148,6 +150,14 @@ public class Sheep extends Animal implements Shearable {
             this.eatAnimationTick = Math.max(0, this.eatAnimationTick - 1);
         }
 
+        // KioCG start
+        if (this.produceToday == 0 && --this.woolTime <= 0) {
+            produce();
+            ate();
+            this.woolTime = this.random.nextInt(200); // KioCG
+        }
+        // KioCG end
+
         super.aiStep();
     }
 
@@ -299,6 +309,7 @@ public class Sheep extends Animal implements Shearable {
     public void shear(SoundSource shearedSoundCategory, java.util.List<ItemStack> drops) {
         // Paper end - custom shear drops
         this.level().playSound((Player) null, (Entity) this, SoundEvents.SHEEP_SHEAR, shearedSoundCategory, 1.0F, 1.0F);
+        if (this.canProduce()) { this.produce(); } else // KioCG
         this.setSheared(true);
         int i = 1 + this.random.nextInt(3);
 
@@ -407,7 +418,7 @@ public class Sheep extends Animal implements Shearable {
         super.ate();
         this.setSheared(false);
         if (this.isBaby()) {
-            this.ageUp(60);
+            // this.ageUp(60); // KioCG
         }
 
     }
diff --git a/src/main/java/net/minecraft/world/entity/animal/Turtle.java b/src/main/java/net/minecraft/world/entity/animal/Turtle.java
index 4bfa947531c4a67989e18032754dabf4c69e989c..cb19f599ff2ea5316861a163fd7f6caef2f1b1da 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Turtle.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Turtle.java
@@ -252,8 +252,10 @@ public class Turtle extends Animal {
     }
 
     @Override
-    public boolean canFallInLove() {
-        return super.canFallInLove() && !this.hasEgg();
+    // KioCG start
+    public boolean canEatFoodIfIsAdult() {
+        return super.canEatFoodIfIsAdult() && !this.hasEgg();
+    // KioCG end
     }
 
     @Override
@@ -342,6 +344,34 @@ public class Turtle extends Animal {
         return this.isBaby() ? Turtle.BABY_DIMENSIONS : super.getDefaultDimensions(pose);
     }
 
+    // KioCG start - copy from Armadillo.java
+    @Override
+    public net.minecraft.world.InteractionResult mobInteract(Player player, net.minecraft.world.InteractionHand hand) {
+        ItemStack itemstack = player.getItemInHand(hand);
+
+        if (itemstack.is(Items.BRUSH) && this.brushOffScute()) {
+            itemstack.hurtAndBreak(16, player, getSlotForHand(hand));
+            return net.minecraft.world.InteractionResult.sidedSuccess(this.level().isClientSide);
+        } else {
+            return super.mobInteract(player, hand);
+        }
+    }
+
+    public boolean brushOffScute() {
+        if (this.isBaby() || !this.canProduce()) { // KioCG
+            return false;
+        } else {
+            this.produce(); // KioCG
+            this.forceDrops = true; // CraftBukkit
+            this.spawnAtLocation(new ItemStack(Items.TURTLE_SCUTE));
+            this.forceDrops = false; // CraftBukkit
+            this.gameEvent(GameEvent.ENTITY_INTERACT);
+            this.playSound(SoundEvents.ARMADILLO_BRUSH);
+            return true;
+        }
+    }
+    // KioCG end - copy from Armadillo.java
+
     private static class TurtleMoveControl extends MoveControl {
 
         private final Turtle turtle;
diff --git a/src/main/java/net/minecraft/world/entity/animal/armadillo/Armadillo.java b/src/main/java/net/minecraft/world/entity/animal/armadillo/Armadillo.java
index 729fd2d52dd48e25ee7a077a3ffafc80ecef7c9f..f61e39e3d28c47ab4315e4bae160821a19a77706 100644
--- a/src/main/java/net/minecraft/world/entity/animal/armadillo/Armadillo.java
+++ b/src/main/java/net/minecraft/world/entity/animal/armadillo/Armadillo.java
@@ -141,7 +141,7 @@ public class Armadillo extends Animal {
         this.level().getProfiler().push("armadilloActivityUpdate");
         ArmadilloAi.updateActivity(this);
         this.level().getProfiler().pop();
-        if (this.isAlive() && !this.isBaby() && --this.scuteTime <= 0) {
+        if (false && this.isAlive() && !this.isBaby() && --this.scuteTime <= 0) { // KioCG
             this.playSound(SoundEvents.ARMADILLO_SCUTE_DROP, 1.0F, (this.random.nextFloat() - this.random.nextFloat()) * 0.2F + 1.0F);
             this.forceDrops = true; // CraftBukkit
             this.spawnAtLocation((ItemLike) Items.ARMADILLO_SCUTE);
@@ -327,7 +327,7 @@ public class Armadillo extends Animal {
 
     @Override
     public void ageUp(int age, boolean overGrow) {
-        if (this.isBaby() && overGrow) {
+        if (this.isBaby()) { // KioCG - 不再判断overGrow, 因为玩家喂养现为false
             this.makeSound(SoundEvents.ARMADILLO_EAT);
         }
 
@@ -335,9 +335,10 @@ public class Armadillo extends Animal {
     }
 
     public boolean brushOffScute() {
-        if (this.isBaby()) {
+        if (this.isBaby() || !this.canProduce()) { // KioCG
             return false;
         } else {
+            this.produce(); // KioCG
             this.forceDrops = true; // CraftBukkit
             this.spawnAtLocation(new ItemStack(Items.ARMADILLO_SCUTE));
             this.forceDrops = false; // CraftBukkit
@@ -352,14 +353,18 @@ public class Armadillo extends Animal {
     }
 
     @Override
-    public void setInLove(@Nullable Player player, @Nullable ItemStack breedItemCopy) { // Paper
-        super.setInLove(player, breedItemCopy); // Paper
+    // KioCG start
+    public void eatFood() {
+        super.eatFood();
+    // KioCG end
         this.makeSound(SoundEvents.ARMADILLO_EAT);
     }
 
     @Override
-    public boolean canFallInLove() {
-        return super.canFallInLove() && !this.isScared();
+    // KioCG start
+    public boolean canEatFoodIfIsAdult() {
+        return super.canEatFoodIfIsAdult() && !this.isScared();
+    // KioCG end
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/camel/Camel.java b/src/main/java/net/minecraft/world/entity/animal/camel/Camel.java
index 8941752e4600ccd11b3fa1147b2e414785589eed..c0f7b8ec1cf78fd964d6ea6034d0d0c2e1e8532f 100644
--- a/src/main/java/net/minecraft/world/entity/animal/camel/Camel.java
+++ b/src/main/java/net/minecraft/world/entity/animal/camel/Camel.java
@@ -390,18 +390,18 @@ public class Camel extends AbstractHorse implements PlayerRideableJumping, Saddl
                 this.heal(2.0F, org.bukkit.event.entity.EntityRegainHealthEvent.RegainReason.EATING); // Paper - Add missing regain reason
             }
 
-            boolean flag1 = this.isTamed() && this.getAge() == 0 && this.canFallInLove();
+            boolean flag1 = this.isTamed() && this.canEatFoodIfIsAdult(); // KioCG
 
             if (flag1) {
-                this.setInLove(player, item.copy()); // Paper - Fix EntityBreedEvent copying
+                this.eatFood(); // KioCG
             }
 
-            boolean flag2 = this.isBaby();
+            boolean flag2 = this.isBaby() && this.canFeed(); // KioCG
 
             if (flag2) {
                 this.level().addParticle(ParticleTypes.HAPPY_VILLAGER, this.getRandomX(1.0D), this.getRandomY() + 0.5D, this.getRandomZ(1.0D), 0.0D, 0.0D, 0.0D);
                 if (!this.level().isClientSide) {
-                    this.ageUp(10);
+                    this.ageUp(); // KioCG
                 }
             }
 
diff --git a/src/main/java/net/minecraft/world/entity/animal/goat/Goat.java b/src/main/java/net/minecraft/world/entity/animal/goat/Goat.java
index 376bcbc189008464f4d518c1e07643431ba96306..4479a4021fc1c0c6fc06b00e7705fafa0cd3afcd 100644
--- a/src/main/java/net/minecraft/world/entity/animal/goat/Goat.java
+++ b/src/main/java/net/minecraft/world/entity/animal/goat/Goat.java
@@ -230,6 +230,13 @@ public class Goat extends Animal {
         ItemStack itemstack = player.getItemInHand(hand);
 
         if (itemstack.is(Items.BUCKET) && !this.isBaby()) {
+            // KioCG start
+            if (!this.canProduce()) {
+                player.containerMenu.sendAllDataToRemote(); // Paper - Fix inventory desync
+                return InteractionResult.PASS;
+            }
+            // KioCG end
+
             // CraftBukkit start - Got milk?
             PlayerBucketFillEvent event = CraftEventFactory.callPlayerBucketFillEvent((ServerLevel) player.level(), player, this.blockPosition(), this.blockPosition(), null, itemstack, Items.MILK_BUCKET, hand);
 
@@ -241,6 +248,7 @@ public class Goat extends Animal {
             player.playSound(this.getMilkingSound(), 1.0F, 1.0F);
             ItemStack itemstack1 = ItemUtils.createFilledResult(itemstack, player, CraftItemStack.asNMSCopy(event.getItemStack())); // CraftBukkit
 
+            this.produce(); // KioCG
             player.setItemInHand(hand, itemstack1);
             return InteractionResult.sidedSuccess(this.level().isClientSide);
         } else {
diff --git a/src/main/java/net/minecraft/world/entity/animal/horse/AbstractHorse.java b/src/main/java/net/minecraft/world/entity/animal/horse/AbstractHorse.java
index 1f5ed236fb7c0c1b0181675747d25d233f534284..25d9a9996fb9cc978987af515422910723c94c00 100644
--- a/src/main/java/net/minecraft/world/entity/animal/horse/AbstractHorse.java
+++ b/src/main/java/net/minecraft/world/entity/animal/horse/AbstractHorse.java
@@ -570,17 +570,17 @@ public abstract class AbstractHorse extends Animal implements ContainerListener,
             f = 4.0F;
             short0 = 60;
             b0 = 5;
-            if (!this.level().isClientSide && this.isTamed() && this.getAge() == 0 && !this.isInLove()) {
+            if (!this.level().isClientSide && this.isTamed() && this.canEatFoodIfIsAdult()) { // KioCG
                 flag = true;
-                this.setInLove(player, item.copy()); // Paper - Fix EntityBreedEvent copying
+                this.eatFood(); // KioCG
             }
         } else if (item.is(Items.GOLDEN_APPLE) || item.is(Items.ENCHANTED_GOLDEN_APPLE)) {
             f = 10.0F;
             short0 = 240;
             b0 = 10;
-            if (!this.level().isClientSide && this.isTamed() && this.getAge() == 0 && !this.isInLove()) {
+            if (!this.level().isClientSide && this.isTamed() && this.canEatFoodIfIsAdult()) { // KioCG
                 flag = true;
-                this.setInLove(player, item.copy()); // Paper - Fix EntityBreedEvent copying
+                this.eatFood(); // KioCG
             }
         }
 
@@ -589,10 +589,10 @@ public abstract class AbstractHorse extends Animal implements ContainerListener,
             flag = true;
         }
 
-        if (this.isBaby() && short0 > 0) {
+        if (this.isBaby() && short0 > 0 && this.canFeed()) { // KioCG
             this.level().addParticle(ParticleTypes.HAPPY_VILLAGER, this.getRandomX(1.0D), this.getRandomY() + 0.5D, this.getRandomZ(1.0D), 0.0D, 0.0D, 0.0D);
             if (!this.level().isClientSide) {
-                this.ageUp(short0);
+                this.ageUp(); // KioCG
                 flag = true;
             }
         }
diff --git a/src/main/java/net/minecraft/world/entity/animal/horse/Llama.java b/src/main/java/net/minecraft/world/entity/animal/horse/Llama.java
index cf6a3a63b6f2b96943c0f399e8c82d293fee31ba..65f700dde0554ce8e38cd873a42e8d1902ec9c9d 100644
--- a/src/main/java/net/minecraft/world/entity/animal/horse/Llama.java
+++ b/src/main/java/net/minecraft/world/entity/animal/horse/Llama.java
@@ -177,9 +177,9 @@ public class Llama extends AbstractChestedHorse implements VariantHolder<Llama.V
             b0 = 90;
             b1 = 6;
             f = 10.0F;
-            if (this.isTamed() && this.getAge() == 0 && this.canFallInLove()) {
+            if (this.isTamed() && this.canEatFoodIfIsAdult()) { // KioCG
                 flag = true;
-                this.setInLove(player, item.copy()); // Paper - Fix EntityBreedEvent copying
+                this.eatFood(); // KioCG
             }
         }
 
@@ -188,10 +188,10 @@ public class Llama extends AbstractChestedHorse implements VariantHolder<Llama.V
             flag = true;
         }
 
-        if (this.isBaby() && b0 > 0) {
+        if (this.isBaby() && b0 > 0 && this.canFeed()) { // KioCG
             this.level().addParticle(ParticleTypes.HAPPY_VILLAGER, this.getRandomX(1.0D), this.getRandomY() + 0.5D, this.getRandomZ(1.0D), 0.0D, 0.0D, 0.0D);
             if (!this.level().isClientSide) {
-                this.ageUp(b0);
+                this.ageUp(); // KioCG
             }
 
             flag = true;
diff --git a/src/main/java/net/minecraft/world/entity/monster/hoglin/Hoglin.java b/src/main/java/net/minecraft/world/entity/monster/hoglin/Hoglin.java
index d5e0c493f4c348724958193795ceb987765a465f..29f8ee30379397ecd0216f090054b48fc227a6b6 100644
--- a/src/main/java/net/minecraft/world/entity/monster/hoglin/Hoglin.java
+++ b/src/main/java/net/minecraft/world/entity/monster/hoglin/Hoglin.java
@@ -333,8 +333,10 @@ public class Hoglin extends Animal implements Enemy, HoglinBase {
     }
 
     @Override
-    public boolean canFallInLove() {
-        return !HoglinAi.isPacified(this) && super.canFallInLove();
+    // KioCG start
+    public boolean canEatFoodIfIsAdult() {
+        return !HoglinAi.isPacified(this) && super.canEatFoodIfIsAdult();
+    // KioCG end
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/npc/Villager.java b/src/main/java/net/minecraft/world/entity/npc/Villager.java
index 7e1871401ec5e3e9a85232053490259f132aec0a..b976d4c8dc578b834c88392af4baa58807de2983 100644
--- a/src/main/java/net/minecraft/world/entity/npc/Villager.java
+++ b/src/main/java/net/minecraft/world/entity/npc/Villager.java
@@ -740,6 +740,7 @@ public class Villager extends AbstractVillager implements ReputationEventHandler
 
     @Override
     public boolean canBreed() {
+        if (!this.level().paperConfig().kiocgConfig.entity.animal.villagerCanBreed) return false; // KioCG
         return this.foodLevel + this.countFoodPointsInInventory() >= 12 && !this.isSleeping() && this.getAge() == 0;
     }
 
diff --git a/src/main/java/org/spigotmc/ActivationRange.java b/src/main/java/org/spigotmc/ActivationRange.java
index 82f1667ae2a868c36c3a6edb51268d79ae0692ce..4e688a132596de73e9e23793271f41917675db18 100644
--- a/src/main/java/org/spigotmc/ActivationRange.java
+++ b/src/main/java/org/spigotmc/ActivationRange.java
@@ -348,7 +348,7 @@ public class ActivationRange
             if ( entity instanceof Animal )
             {
                 Animal animal = (Animal) entity;
-                if ( animal.isBaby() || animal.isInLove() )
+                if ( animal.isInLove() ) // KioCG - 不再需要豁免baby
                 {
                     return 5; // Paper
                 }
