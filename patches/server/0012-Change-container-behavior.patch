From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Joket_abc <15005771700@qq.com>
Date: Wed, 28 Feb 2024 23:17:21 +0800
Subject: [PATCH] Change container behavior


diff --git a/src/main/java/net/minecraft/world/inventory/BrewingStandMenu.java b/src/main/java/net/minecraft/world/inventory/BrewingStandMenu.java
index 184a631a59c857beae19376ce7d4aedd016014a8..e83f4454c2649c4db94cdf7fb18e536d6df58e9d 100644
--- a/src/main/java/net/minecraft/world/inventory/BrewingStandMenu.java
+++ b/src/main/java/net/minecraft/world/inventory/BrewingStandMenu.java
@@ -86,12 +86,12 @@ public class BrewingStandMenu extends AbstractContainerMenu {
 
             itemstack = itemstack1.copy();
             if ((slot < 0 || slot > 2) && slot != 3 && slot != 4) {
-                if (BrewingStandMenu.FuelSlot.mayPlaceItem(itemstack)) {
-                    if (this.moveItemStackTo(itemstack1, 4, 5, false) || this.ingredientSlot.mayPlace(itemstack1) && !this.moveItemStackTo(itemstack1, 3, 4, false)) {
+                if (this.ingredientSlot.mayPlace(itemstack1)) { // KioCG - 调换材料槽和燃料槽的判断顺序
+                    if (this.moveItemStackTo(itemstack1, 3, 4, false) || BrewingStandMenu.FuelSlot.mayPlaceItem(itemstack) && !this.moveItemStackTo(itemstack1, 4, 5, false)) { // KioCG - 调换材料槽和燃料槽的判断顺序
                         return ItemStack.EMPTY;
                     }
-                } else if (this.ingredientSlot.mayPlace(itemstack1)) {
-                    if (!this.moveItemStackTo(itemstack1, 3, 4, false)) {
+                } else if (BrewingStandMenu.FuelSlot.mayPlaceItem(itemstack)) { // KioCG - 调换材料槽和燃料槽的判断顺序
+                    if (!this.moveItemStackTo(itemstack1, 4, 5, false)) { // KioCG - 调换材料槽和燃料槽的判断顺序
                         return ItemStack.EMPTY;
                     }
                 } else if (BrewingStandMenu.PotionSlot.mayPlaceItem(itemstack) && itemstack.getCount() == 1) {
@@ -205,6 +205,7 @@ public class BrewingStandMenu extends AbstractContainerMenu {
 
         public static boolean mayPlaceItem(ItemStack stack) {
             if (!io.papermc.paper.configuration.GlobalConfiguration.get().kiocgConfig.modelItems.vanillaRecipeCanUse.allowed(net.minecraft.world.inventory.MenuType.BREWING_STAND, stack)) return false; // KioCG
+            if (true) return PotionBrewing.isIngredient(stack); // KioCG - 燃料槽允许放置材料
             return stack.is(Items.BLAZE_POWDER);
         }
 
diff --git a/src/main/java/net/minecraft/world/item/alchemy/PotionBrewing.java b/src/main/java/net/minecraft/world/item/alchemy/PotionBrewing.java
index 0bba74bd22d66881fc6851797d29c1442f509445..6791902e3036bb10540b47c29b21fd8d2b4996cf 100644
--- a/src/main/java/net/minecraft/world/item/alchemy/PotionBrewing.java
+++ b/src/main/java/net/minecraft/world/item/alchemy/PotionBrewing.java
@@ -69,6 +69,7 @@ public class PotionBrewing {
         if (!ALLOWED_CONTAINER.test(input)) {
             return false;
         } else {
+            if (true) return true; // KioCG - 自定义失败的酿造
             return hasContainerMix(input, ingredient) || hasPotionMix(input, ingredient);
         }
     }
@@ -120,6 +121,8 @@ public class PotionBrewing {
                     return PotionUtils.setPotion(new ItemStack(item), mix2.to);
                 }
             }
+
+            return PotionUtils.setPotion(new ItemStack(item), Potions.EMPTY); // KioCG - 自定义失败的酿造
         }
 
         return input;
@@ -203,7 +206,7 @@ public class PotionBrewing {
         addMix(Potions.LONG_LEAPING, Items.FERMENTED_SPIDER_EYE, Potions.LONG_SLOWNESS);
         addMix(Potions.SLOWNESS, Items.REDSTONE, Potions.LONG_SLOWNESS);
         addMix(Potions.SLOWNESS, Items.GLOWSTONE_DUST, Potions.STRONG_SLOWNESS);
-        addMix(Potions.AWKWARD, Items.TURTLE_HELMET, Potions.TURTLE_MASTER);
+        addMix(Potions.AWKWARD, Items.SCUTE, Potions.TURTLE_MASTER); // KioCG - 海龟壳改为鳞甲
         addMix(Potions.TURTLE_MASTER, Items.REDSTONE, Potions.LONG_TURTLE_MASTER);
         addMix(Potions.TURTLE_MASTER, Items.GLOWSTONE_DUST, Potions.STRONG_TURTLE_MASTER);
         addMix(Potions.SWIFTNESS, Items.FERMENTED_SPIDER_EYE, Potions.SLOWNESS);
diff --git a/src/main/java/net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity.java b/src/main/java/net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity.java
index 80e0b122ebdc7480444f5b84abe2070e2a4b1aba..6e2b681f9d3b1125e15e982f2c7dd17fd13baa30 100644
--- a/src/main/java/net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity.java
+++ b/src/main/java/net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity.java
@@ -143,6 +143,8 @@ public abstract class AbstractFurnaceBlockEntity extends BaseContainerBlockEntit
         // Paper end - cache burn durations
         Map<Item, Integer> map = Maps.newLinkedHashMap();
 
+        // KioCG start
+        /*
         AbstractFurnaceBlockEntity.add(map, (ItemLike) Items.LAVA_BUCKET, 20000);
         AbstractFurnaceBlockEntity.add(map, (ItemLike) Blocks.COAL_BLOCK, 16000);
         AbstractFurnaceBlockEntity.add(map, (ItemLike) Items.BLAZE_ROD, 2400);
@@ -202,6 +204,11 @@ public abstract class AbstractFurnaceBlockEntity extends BaseContainerBlockEntit
         AbstractFurnaceBlockEntity.add(map, (ItemLike) Blocks.AZALEA, 100);
         AbstractFurnaceBlockEntity.add(map, (ItemLike) Blocks.FLOWERING_AZALEA, 100);
         AbstractFurnaceBlockEntity.add(map, (ItemLike) Blocks.MANGROVE_ROOTS, 300);
+        */
+        AbstractFurnaceBlockEntity.add(map, (ItemLike) Items.COAL, 200);
+        AbstractFurnaceBlockEntity.add(map, (ItemLike) Items.CHARCOAL, 200);
+        // KioCG end
+
         // Paper start - cache burn durations
         cachedBurnDurations = com.google.common.collect.ImmutableMap.copyOf(map);
         return cachedBurnDurations;
@@ -366,7 +373,7 @@ public abstract class AbstractFurnaceBlockEntity extends BaseContainerBlockEntit
 
                 blockEntity.litTime = furnaceBurnEvent.getBurnTime();
                 blockEntity.litDuration = blockEntity.litTime;
-                if (blockEntity.isLit() && furnaceBurnEvent.isBurning()) {
+                if (false && blockEntity.isLit() && furnaceBurnEvent.isBurning()) { // KioCG - 燃烧完成后再扣除燃料
                     // CraftBukkit end
                     flag1 = true;
                     if (flag3 && furnaceBurnEvent.willConsumeFuel()) { // Paper - add consumeFuel to FurnaceBurnEvent
@@ -399,9 +406,32 @@ public abstract class AbstractFurnaceBlockEntity extends BaseContainerBlockEntit
                 if (blockEntity.cookingProgress >= blockEntity.cookingTotalTime) { // Paper - cook speed multiplier API
                     blockEntity.cookingProgress = 0;
                     blockEntity.cookingTotalTime = AbstractFurnaceBlockEntity.getTotalCookTime(world, blockEntity.recipeType, blockEntity, blockEntity.cookSpeedMultiplier); // Paper - cook speed multiplier API
-                    if (AbstractFurnaceBlockEntity.burn(blockEntity.level, blockEntity.worldPosition, world.registryAccess(), recipeholder, blockEntity.items, i)) { // CraftBukkit
+
+                    // KioCG start
+                    boolean burned = false;
+                    while (AbstractFurnaceBlockEntity.burn(blockEntity.level, blockEntity.worldPosition, world.registryAccess(), recipeholder, blockEntity.items, i)) { // CraftBukkit
                         blockEntity.setRecipeUsed(recipeholder);
+                        burned = true;
+                        if (blockEntity.items.get(0).isEmpty()) break;
+                    }
+
+                    if (burned) {
+                        ((AbstractFurnaceBlockEntity) blockEntity).getRecipesToAwardAndPopExperience((ServerLevel) world, new Vec3(blockEntity.worldPosition.getX() + 0.5D, blockEntity.worldPosition.getY() + 1.0D, blockEntity.worldPosition.getZ() + 0.5D));
+                        blockEntity.recipesUsed.clear();
+
+                        // 燃烧完成后再扣除燃料
+                        if (!itemstack.isEmpty()) {
+                            Item item = itemstack.getItem();
+
+                            itemstack.shrink(1);
+                            if (itemstack.isEmpty()) {
+                                Item item1 = item.getCraftingRemainingItem();
+
+                                blockEntity.items.set(1, item1 == null ? ItemStack.EMPTY : new ItemStack(item1));
+                            }
+                        }
                     }
+                    // KioCG end
 
                     flag1 = true;
                 }
@@ -466,13 +496,16 @@ public abstract class AbstractFurnaceBlockEntity extends BaseContainerBlockEntit
             itemstack1 = CraftItemStack.asNMSCopy(result);
 
             if (!itemstack1.isEmpty()) {
-                if (itemstack2.isEmpty()) {
-                    nonnulllist.set(2, itemstack1.copy());
-                } else if (CraftItemStack.asCraftMirror(itemstack2).isSimilar(result)) {
-                    itemstack2.grow(itemstack1.getCount());
-                } else {
-                    return false;
-                }
+                // KioCG start
+                net.minecraft.world.Containers.dropItemStack(world, (double) blockposition.getX(), (double) blockposition.getY(), (double) blockposition.getZ(), itemstack1);
+                // if (itemstack2.isEmpty()) {
+                //     nonnulllist.set(2, itemstack1.copy());
+                // } else if (CraftItemStack.asCraftMirror(itemstack2).isSimilar(result)) {
+                //     itemstack2.grow(itemstack1.getCount());
+                // } else {
+                //     return false;
+                // }
+                // KioCG end
             }
 
             /*
@@ -519,6 +552,7 @@ public abstract class AbstractFurnaceBlockEntity extends BaseContainerBlockEntit
 
     @Override
     public int[] getSlotsForFace(Direction side) {
+        if (true) return new int[0]; // KioCG - 阻止漏斗交互
         return side == Direction.DOWN ? AbstractFurnaceBlockEntity.SLOTS_FOR_DOWN : (side == Direction.UP ? AbstractFurnaceBlockEntity.SLOTS_FOR_UP : AbstractFurnaceBlockEntity.SLOTS_FOR_SIDES);
     }
 
diff --git a/src/main/java/net/minecraft/world/level/block/entity/BrewingStandBlockEntity.java b/src/main/java/net/minecraft/world/level/block/entity/BrewingStandBlockEntity.java
index 31bbaf4f7f3110695fcae96029495363756c924d..88aa95276117d760df405b2176af980a169187ae 100644
--- a/src/main/java/net/minecraft/world/level/block/entity/BrewingStandBlockEntity.java
+++ b/src/main/java/net/minecraft/world/level/block/entity/BrewingStandBlockEntity.java
@@ -153,6 +153,7 @@ public class BrewingStandBlockEntity extends BaseContainerBlockEntity implements
         if (blockEntity.brewTime <= 0 && !blockEntity.shouldTick) return; else blockEntity.shouldTick = false; // KioCG - 优化未燃烧的tick
         ItemStack itemstack = (ItemStack) blockEntity.items.get(4);
 
+        blockEntity.fuel = 20; // KioCG - 总是最大燃料值
         if (blockEntity.fuel <= 0 && itemstack.is(Items.BLAZE_POWDER)) {
             // CraftBukkit start
             BrewingStandFuelEvent event = new BrewingStandFuelEvent(CraftBlock.at(world, pos), CraftItemStack.asCraftMirror(itemstack), 20);
@@ -279,9 +280,17 @@ public class BrewingStandBlockEntity extends BaseContainerBlockEntity implements
         }
         // CraftBukkit end
 
+        ItemStack fuel = nonnulllist.get(4); // KioCG
         for (int i = 0; i < 3; ++i) {
             // CraftBukkit start - validate index in case it is cleared by plugins
             if (i < brewResults.size()) {
+                // KioCG start
+                if (fuel.isEmpty()) {
+                    Containers.dropItemStack(world, (double) blockposition.getX(), (double) blockposition.getY(), (double) blockposition.getZ(), CraftItemStack.asNMSCopy(brewResults.get(i)));
+                    nonnulllist.set(i, ItemStack.EMPTY);
+                    continue;
+                }
+                // KioCG end
                 nonnulllist.set(i, CraftItemStack.asNMSCopy(brewResults.get(i)));
             } else {
                 nonnulllist.set(i, ItemStack.EMPTY);
@@ -300,6 +309,7 @@ public class BrewingStandBlockEntity extends BaseContainerBlockEntity implements
             }
         }
 
+        if (!fuel.isEmpty() && itemstack.isEmpty()) itemstack = fuel.copyAndClear(); // KioCG - 燃料槽物品移入材料槽
         nonnulllist.set(3, itemstack);
         world.levelEvent(1035, blockposition, 0);
     }
@@ -352,12 +362,33 @@ public class BrewingStandBlockEntity extends BaseContainerBlockEntity implements
 
     @Override
     public boolean canPlaceItem(int slot, ItemStack stack) {
+    // KioCG start
+        boolean vanillaRecipeCanUse = io.papermc.paper.configuration.GlobalConfiguration.get().kiocgConfig.modelItems.vanillaRecipeCanUse.allowed(net.minecraft.world.inventory.MenuType.BREWING_STAND, stack);
+        if (slot == 3) {
+            return vanillaRecipeCanUse && PotionBrewing.isIngredient(stack) || PotionBrewing.isCustomIngredient(stack);
+        } else if (slot == 4) {
+            // 燃料槽允许放置材料
+            return vanillaRecipeCanUse && PotionBrewing.isIngredient(stack) || PotionBrewing.isCustomIngredient(stack);
+        } else {
+            if (!this.getItem(slot).isEmpty()) {
+                return false;
+            } else if (PotionBrewing.isCustomInput(stack)) {
+                return true;
+            } else {
+                return vanillaRecipeCanUse && (stack.is(Items.POTION) || stack.is(Items.SPLASH_POTION) || stack.is(Items.LINGERING_POTION) || stack.is(Items.GLASS_BOTTLE));
+            }
+        }
+    }
+
+    public boolean canPlaceItem0(int slot, ItemStack stack) {
+    // KioCG end
         if ((slot == 4 || (slot == 3 ? !PotionBrewing.isCustomIngredient(stack) : !PotionBrewing.isCustomInput(stack))) && !io.papermc.paper.configuration.GlobalConfiguration.get().kiocgConfig.modelItems.vanillaRecipeCanUse.allowed(net.minecraft.world.inventory.MenuType.BREWING_STAND, stack)) return false; // KioCG
         return slot == 3 ? PotionBrewing.isIngredient(stack) : (slot == 4 ? stack.is(Items.BLAZE_POWDER) : (stack.is(Items.POTION) || stack.is(Items.SPLASH_POTION) || stack.is(Items.LINGERING_POTION) || stack.is(Items.GLASS_BOTTLE) || PotionBrewing.isCustomInput(stack)) && this.getItem(slot).isEmpty()); // Paper - Custom Potion Mixes
     }
 
     @Override
     public int[] getSlotsForFace(Direction side) {
+        if (true) return new int[0]; // KioCG - 阻止漏斗交互
         return side == Direction.UP ? BrewingStandBlockEntity.SLOTS_FOR_UP : (side == Direction.DOWN ? BrewingStandBlockEntity.SLOTS_FOR_DOWN : BrewingStandBlockEntity.SLOTS_FOR_SIDES);
     }
 
diff --git a/src/main/java/net/minecraft/world/level/block/entity/CampfireBlockEntity.java b/src/main/java/net/minecraft/world/level/block/entity/CampfireBlockEntity.java
index 0c70786e8e5ca5c2b6c69914ce350ff06d3ce437..0e8a22684932cc1e181508ea68c48147339e03d4 100644
--- a/src/main/java/net/minecraft/world/level/block/entity/CampfireBlockEntity.java
+++ b/src/main/java/net/minecraft/world/level/block/entity/CampfireBlockEntity.java
@@ -74,6 +74,12 @@ public class CampfireBlockEntity extends BlockEntity implements Clearable {
                         return ((CampfireCookingRecipe) recipeholder.value()).assemble(inventorysubcontainer, world.registryAccess());
                     }).orElse(itemstack);
 
+                    // KioCG start
+                    if (itemstack1 == itemstack) {
+                        campfire.cookingTime[i] = Integer.MAX_VALUE;
+                        continue;
+                    }
+                    // KioCG end
                     if (itemstack1.isItemEnabled(world.enabledFeatures())) {
                         // CraftBukkit start - fire BlockCookEvent
                         CraftItemStack source = CraftItemStack.asCraftMirror(itemstack);
@@ -97,6 +103,8 @@ public class CampfireBlockEntity extends BlockEntity implements Clearable {
                         result = blockCookEvent.getResult();
                         itemstack1 = CraftItemStack.asNMSCopy(result);
                         // CraftBukkit end
+                        // KioCG start
+                        /*
                         // Paper start - Fix item locations dropped from campfires
                         double deviation = 0.05F * RandomSource.GAUSSIAN_SPREAD_FACTOR;
                         while (!itemstack1.isEmpty()) {
@@ -105,7 +113,16 @@ public class CampfireBlockEntity extends BlockEntity implements Clearable {
                             world.addFreshEntity(droppedItem);
                         }
                         // Paper end - Fix item locations dropped from campfires
-                        campfire.items.set(i, ItemStack.EMPTY);
+                        */
+
+                        Optional<RecipeHolder<CampfireCookingRecipe>> optional = campfire.quickCheck.getRecipeFor(new SimpleContainer(new ItemStack[]{itemstack1}), world);
+                        if (optional.isPresent()) {
+                            campfire.placeFood(null, itemstack1, ((CampfireCookingRecipe) ((RecipeHolder) optional.get()).value()).getCookingTime());
+                        } else {
+                            campfire.items.set(i, itemstack1);
+                            campfire.cookingTime[i] = Integer.MAX_VALUE;
+                        }
+                        // KioCG end
                         world.sendBlockUpdated(pos, state, state, 3);
                         world.gameEvent(GameEvent.BLOCK_CHANGE, pos, GameEvent.Context.of(state));
                     }
