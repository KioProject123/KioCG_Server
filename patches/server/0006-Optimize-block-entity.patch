From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Joket_abc <15005771700@qq.com>
Date: Fri, 1 Mar 2024 23:10:19 +0800
Subject: [PATCH] Optimize block entity


diff --git a/src/main/java/net/minecraft/world/entity/vehicle/MinecartHopper.java b/src/main/java/net/minecraft/world/entity/vehicle/MinecartHopper.java
index d7f8464bf3eed0e42a5fc7f14a5b243d171f8b5e..8bc841e4958011edc5a0e4ad55a6eff4d39d4cb3 100644
--- a/src/main/java/net/minecraft/world/entity/vehicle/MinecartHopper.java
+++ b/src/main/java/net/minecraft/world/entity/vehicle/MinecartHopper.java
@@ -92,6 +92,7 @@ public class MinecartHopper extends AbstractMinecartContainer implements Hopper
     }
 
     public boolean suckInItems() {
+        if (HopperBlockEntity.isFullContainer(this, null)) return false; // KioCG
         if (HopperBlockEntity.suckInItems(this.level(), this)) {
             this.immunize();  // Paper
             return true;
diff --git a/src/main/java/net/minecraft/world/level/block/CampfireBlock.java b/src/main/java/net/minecraft/world/level/block/CampfireBlock.java
index d6fffb0953494e8667cc456137cac0f5deebfbb6..e490a48c1f19b1a3fce2651248760476c71c7cfc 100644
--- a/src/main/java/net/minecraft/world/level/block/CampfireBlock.java
+++ b/src/main/java/net/minecraft/world/level/block/CampfireBlock.java
@@ -291,7 +291,7 @@ public class CampfireBlock extends BaseEntityBlock implements SimpleWaterloggedB
     @Nullable
     @Override
     public <T extends BlockEntity> BlockEntityTicker<T> getTicker(Level world, BlockState state, BlockEntityType<T> type) {
-        return world.isClientSide ? ((Boolean) state.getValue(CampfireBlock.LIT) ? createTickerHelper(type, BlockEntityType.CAMPFIRE, CampfireBlockEntity::particleTick) : null) : ((Boolean) state.getValue(CampfireBlock.LIT) ? createTickerHelper(type, BlockEntityType.CAMPFIRE, CampfireBlockEntity::cookTick) : createTickerHelper(type, BlockEntityType.CAMPFIRE, CampfireBlockEntity::cooldownTick));
+        return world.isClientSide ? ((Boolean) state.getValue(CampfireBlock.LIT) ? createTickerHelper(type, BlockEntityType.CAMPFIRE, CampfireBlockEntity::particleTick) : null) : ((Boolean) state.getValue(CampfireBlock.LIT) ? createTickerHelper(type, BlockEntityType.CAMPFIRE, CampfireBlockEntity::cookTick) : null); // KioCG - 优化未燃烧的运算
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity.java b/src/main/java/net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity.java
index 18ed5fb4b5a6f7d6ea2a8c418600282f2691294e..9b7763342469e293772fcca2f465978e0cd5f7ca 100644
--- a/src/main/java/net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity.java
+++ b/src/main/java/net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity.java
@@ -326,12 +326,15 @@ public abstract class AbstractFurnaceBlockEntity extends BaseContainerBlockEntit
         nbt.put("RecipesUsed", nbttagcompound1);
     }
 
+    private boolean shouldTick = true; // KioCG
     public static void serverTick(Level world, BlockPos pos, BlockState state, AbstractFurnaceBlockEntity blockEntity) {
+        if (!blockEntity.isLit() && !blockEntity.shouldTick) return; else blockEntity.shouldTick = false; // KioCG - 优化未燃烧的tick
         boolean flag = blockEntity.isLit();
         boolean flag1 = false;
 
         if (blockEntity.isLit()) {
             --blockEntity.litTime;
+            blockEntity.shouldTick = true; // KioCG
         }
 
         ItemStack itemstack = (ItemStack) blockEntity.items.get(1);
@@ -341,6 +344,7 @@ public abstract class AbstractFurnaceBlockEntity extends BaseContainerBlockEntit
         if (!blockEntity.isLit() && (!flag3 || !flag2)) {
             if (!blockEntity.isLit() && blockEntity.cookingProgress > 0) {
                 blockEntity.cookingProgress = Mth.clamp(blockEntity.cookingProgress - 2, 0, blockEntity.cookingTotalTime);
+                blockEntity.shouldTick = true; // KioCG - 燃烧冷却过程中
             }
         } else {
             RecipeHolder recipeholder;
@@ -560,6 +564,7 @@ public abstract class AbstractFurnaceBlockEntity extends BaseContainerBlockEntit
             this.setChanged();
         }
 
+        this.shouldTick = true; // KioCG
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/world/level/block/entity/BrewingStandBlockEntity.java b/src/main/java/net/minecraft/world/level/block/entity/BrewingStandBlockEntity.java
index eef723032950ea553f09cbfe4fe81af2cff50191..8bce3d2d510654fd7f931639aae06e974e681937 100644
--- a/src/main/java/net/minecraft/world/level/block/entity/BrewingStandBlockEntity.java
+++ b/src/main/java/net/minecraft/world/level/block/entity/BrewingStandBlockEntity.java
@@ -145,7 +145,9 @@ public class BrewingStandBlockEntity extends BaseContainerBlockEntity implements
         this.items = inventory;
     }
 
+    private boolean shouldTick = true; // KioCG
     public static void serverTick(Level world, BlockPos pos, BlockState state, BrewingStandBlockEntity blockEntity) {
+        if (blockEntity.brewTime <= 0 && !blockEntity.shouldTick) return; else blockEntity.shouldTick = false; // KioCG - 优化未燃烧的tick
         ItemStack itemstack = (ItemStack) blockEntity.items.get(4);
 
         if (blockEntity.fuel <= 0 && itemstack.is(Items.BLAZE_POWDER)) {
@@ -175,6 +177,7 @@ public class BrewingStandBlockEntity extends BaseContainerBlockEntity implements
 
         if (flag1) {
             blockEntity.brewTime -= elapsedTicks;
+            blockEntity.shouldTick = true; // KioCG
             boolean flag2 = blockEntity.brewTime <= 0; // == -> <=
             // CraftBukkit end
 
@@ -314,6 +317,13 @@ public class BrewingStandBlockEntity extends BaseContainerBlockEntity implements
         nbt.putByte("Fuel", (byte) this.fuel);
     }
 
+    // KioCG start
+    @Override
+    public void setItem(int slot, ItemStack stack) {
+        this.shouldTick = true;
+    }
+    // KioCG end
+
     @Override
     public boolean canPlaceItem(int slot, ItemStack stack) {
         PotionBrewing potionbrewer = this.level != null ? this.level.potionBrewing() : PotionBrewing.EMPTY; // Paper - move up
diff --git a/src/main/java/net/minecraft/world/level/block/entity/CampfireBlockEntity.java b/src/main/java/net/minecraft/world/level/block/entity/CampfireBlockEntity.java
index c4e91faf86209600ccb63c67ca78598fe4a8ab29..e2fd8a5e729ba3cb25d7e9307d4b112addc963df 100644
--- a/src/main/java/net/minecraft/world/level/block/entity/CampfireBlockEntity.java
+++ b/src/main/java/net/minecraft/world/level/block/entity/CampfireBlockEntity.java
@@ -140,6 +140,24 @@ public class CampfireBlockEntity extends BlockEntity implements Clearable {
 
     }
 
+    // KioCG start
+    public static void cooldownImmediately(Level world, BlockPos pos, BlockState state, CampfireBlockEntity campfire) {
+        boolean flag = false;
+
+        for (int i = 0; i < campfire.items.size(); ++i) {
+            if (campfire.cookingProgress[i] > 0) {
+                flag = true;
+                campfire.cookingProgress[i] = (int) 0;
+            }
+        }
+
+        if (flag) {
+            setChanged(world, pos, state);
+        }
+
+    }
+    // KioCG end
+
     public static void particleTick(Level world, BlockPos pos, BlockState state, CampfireBlockEntity campfire) {
         RandomSource randomsource = world.random;
         int i;
@@ -274,6 +292,7 @@ public class CampfireBlockEntity extends BlockEntity implements Clearable {
     public void dowse() {
         if (this.level != null) {
             this.markUpdated();
+            this.cooldownImmediately(this.getLevel(), this.getBlockPos(), this.getBlockState(), (CampfireBlockEntity) this); // KioCG - 优化未燃烧的运算
         }
 
     }
diff --git a/src/main/java/net/minecraft/world/level/block/entity/HopperBlockEntity.java b/src/main/java/net/minecraft/world/level/block/entity/HopperBlockEntity.java
index 8310d132006043e93c612890514c4c7f3eb1c74d..a233a6f702a65f5b2ddc18cedb0e2d74bf0ddb55 100644
--- a/src/main/java/net/minecraft/world/level/block/entity/HopperBlockEntity.java
+++ b/src/main/java/net/minecraft/world/level/block/entity/HopperBlockEntity.java
@@ -524,7 +524,7 @@ public class HopperBlockEntity extends RandomizableContainerBlockEntity implemen
         return aint;
     }
 
-    private static boolean isFullContainer(Container inventory, Direction direction) {
+    public static boolean isFullContainer(Container inventory, Direction direction) { // KioCG - private -> public
         int[] aint = HopperBlockEntity.getSlots(inventory, direction);
         int[] aint1 = aint;
         int i = aint.length;
