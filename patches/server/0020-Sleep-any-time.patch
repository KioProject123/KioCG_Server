From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Joket_abc <15005771700@qq.com>
Date: Sun, 17 Mar 2024 14:39:32 +0800
Subject: [PATCH] Sleep any time


diff --git a/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java b/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java
index 35a62471252209a179c6a75d16ea3735777a40af..ed092b028819f26dcc084978444264d6f362518d 100644
--- a/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java
+++ b/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java
@@ -590,6 +590,7 @@ public class WorldConfiguration extends ConfigurationPart {
         public boolean betterMobGriefingSetting = true;
         public double dirtPathSpeedBoost = 0.04;
         public double saplingsWitheredChance = 0.025;
+        public boolean sleepAnyTime = true;
     }
     // KioCG end
 }
diff --git a/src/main/java/net/minecraft/server/level/ServerLevel.java b/src/main/java/net/minecraft/server/level/ServerLevel.java
index bf5e47e8c3706590fdc0731bd9a5858b56d06136..210a3b9d613c467dfa9ca2548137add04e910ad2 100644
--- a/src/main/java/net/minecraft/server/level/ServerLevel.java
+++ b/src/main/java/net/minecraft/server/level/ServerLevel.java
@@ -819,6 +819,7 @@ public class ServerLevel extends Level implements WorldGenLevel {
         int i = this.getGameRules().getInt(GameRules.RULE_PLAYERS_SLEEPING_PERCENTAGE);
         long j;
 
+        if (!this.paperConfig().kiocgConfig.sleepAnyTime) // KioCG
         if (this.sleepStatus.areEnoughSleeping(i) && this.sleepStatus.areEnoughDeepSleeping(i, this.players)) {
             // CraftBukkit start
             j = this.levelData.getDayTime() + 24000L;
@@ -1172,6 +1173,7 @@ public class ServerLevel extends Level implements WorldGenLevel {
     }
 
     private void announceSleepStatus() {
+        if (!this.paperConfig().kiocgConfig.sleepAnyTime) // KioCG
         if (this.canSleepThroughNights()) {
             if (!this.getServer().isSingleplayer() || this.getServer().isPublished()) {
                 int i = this.getGameRules().getInt(GameRules.RULE_PLAYERS_SLEEPING_PERCENTAGE);
diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index faefa71669ea41af4468482fa4183f6704496200..6d4ab7975922f0482c9156ba07d397373895117c 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -1410,7 +1410,7 @@ public class ServerPlayer extends Player {
                 return Either.left(Player.BedSleepingProblem.OBSTRUCTED);
             } else {
                 this.setRespawnPosition(this.level().dimension(), blockposition, this.getYRot(), false, true, com.destroystokyo.paper.event.player.PlayerSetSpawnEvent.Cause.BED); // Paper - Add PlayerSetSpawnEvent
-                if (this.level().isDay()) {
+                if (this.level().isDay() && !this.level().paperConfig().kiocgConfig.sleepAnyTime) { // KioCG
                     return Either.left(Player.BedSleepingProblem.NOT_POSSIBLE_NOW);
                 } else {
                     if (!this.isCreative()) {
@@ -1460,7 +1460,7 @@ public class ServerPlayer extends Player {
                         CriteriaTriggers.SLEPT_IN_BED.trigger(this);
                     });
 
-                    if (!this.serverLevel().canSleepThroughNights()) {
+                    if (!this.serverLevel().canSleepThroughNights() && !this.level().paperConfig().kiocgConfig.sleepAnyTime) { // KioCG
                         this.displayClientMessage(Component.translatable("sleep.not_possible"), true);
                     }
 
@@ -2446,7 +2446,7 @@ public class ServerPlayer extends Player {
             // Paper end - Add PlayerSetSpawnEvent
 
             if (event.willNotifyPlayer() && event.getNotification() != null) { // Paper - Add PlayerSetSpawnEvent
-                this.sendSystemMessage(PaperAdventure.asVanilla(event.getNotification())); // Paper - Add PlayerSetSpawnEvent
+                this.sendSystemMessage(PaperAdventure.asVanilla(event.getNotification()), this.level().paperConfig().kiocgConfig.sleepAnyTime); // Paper - Add PlayerSetSpawnEvent // KioCG
             }
 
             this.respawnPosition = pos;
diff --git a/src/main/java/net/minecraft/world/entity/player/Player.java b/src/main/java/net/minecraft/world/entity/player/Player.java
index ca01581d8decc696db11f15bd782308848d97478..e20fd389de1d8363c2c526da4b1c9e993d7d8ad9 100644
--- a/src/main/java/net/minecraft/world/entity/player/Player.java
+++ b/src/main/java/net/minecraft/world/entity/player/Player.java
@@ -262,7 +262,7 @@ public abstract class Player extends LivingEntity {
                 this.sleepCounter = 100;
             }
 
-            if (!this.level().isClientSide && this.level().isDay()) {
+            if (!this.level().isClientSide && this.level().isDay() && !this.level().paperConfig().kiocgConfig.sleepAnyTime) { // KioCG
                 this.stopSleepInBed(false, true);
             }
         } else if (this.sleepCounter > 0) {
