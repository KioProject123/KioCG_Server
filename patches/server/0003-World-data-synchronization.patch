From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Joket_abc <15005771700@qq.com>
Date: Thu, 4 Apr 2024 00:59:59 +0800
Subject: [PATCH] World data synchronization


diff --git a/src/main/java/net/minecraft/server/level/ServerLevel.java b/src/main/java/net/minecraft/server/level/ServerLevel.java
index e079f4db4e4738f60a6fdbdbf5e4d1baf593a62f..f72d85b28327a99149d17c9f533f0c4bc3155937 100644
--- a/src/main/java/net/minecraft/server/level/ServerLevel.java
+++ b/src/main/java/net/minecraft/server/level/ServerLevel.java
@@ -1291,6 +1291,13 @@ public class ServerLevel extends Level implements WorldGenLevel, ca.spottedleaf.
         }
     }
 
+    // KioCG start
+    @Override
+    public int getDays() {
+        return this.serverLevelData.getDays();
+    }
+    // KioCG end
+
     @Override
     public boolean mayInteract(Player player, BlockPos pos) {
         return !this.server.isUnderSpawnProtection(this, pos, player) && this.getWorldBorder().isWithinBounds(pos);
diff --git a/src/main/java/net/minecraft/world/level/Level.java b/src/main/java/net/minecraft/world/level/Level.java
index 0d202ce8eb88bfdb8ca3306593d758fa483d8612..3400111ccefc010ed911f6f6f449a71dc2233774 100644
--- a/src/main/java/net/minecraft/world/level/Level.java
+++ b/src/main/java/net/minecraft/world/level/Level.java
@@ -1310,6 +1310,12 @@ public abstract class Level implements LevelAccessor, AutoCloseable, ca.spottedl
         return this.levelData.getDayTime();
     }
 
+    // KioCG start
+    public int getDays() {
+        return 0;
+    }
+    // KioCG end
+
     public boolean mayInteract(Player player, BlockPos pos) {
         return true;
     }
diff --git a/src/main/java/net/minecraft/world/level/storage/PrimaryLevelData.java b/src/main/java/net/minecraft/world/level/storage/PrimaryLevelData.java
index efd0bcfebb3b4f63018d4e20a6a89f79192898d1..3490e188e36adc765aea6142941c6d155c6e3ef3 100644
--- a/src/main/java/net/minecraft/world/level/storage/PrimaryLevelData.java
+++ b/src/main/java/net/minecraft/world/level/storage/PrimaryLevelData.java
@@ -68,6 +68,7 @@ public class PrimaryLevelData implements ServerLevelData, WorldData {
     private float spawnAngle;
     private long gameTime;
     private long dayTime;
+    private int days; // KioCG
     @Nullable
     private final CompoundTag loadedPlayerTag;
     private final int version;
@@ -111,6 +112,7 @@ public class PrimaryLevelData implements ServerLevelData, WorldData {
         this.spawnAngle = spawnAngle;
         this.gameTime = time;
         this.dayTime = timeOfDay;
+        this.days = (int) (this.dayTime / 24000L); // KioCG
         this.version = version;
         this.clearWeatherTime = clearWeatherTime;
         this.rainTime = rainTime;
@@ -285,9 +287,23 @@ public class PrimaryLevelData implements ServerLevelData, WorldData {
 
     @Override
     public long getDayTime() {
+        // KioCG start - 同步世界时间
+        if (this != MinecraftServer.getServer().getWorldData() && this.getGameRules().getBoolean(GameRules.RULE_DAYLIGHT)) {
+            return ((PrimaryLevelData) MinecraftServer.getServer().getWorldData()).getDayTime();
+        }
+        // KioCG end - 同步世界时间
         return this.dayTime;
     }
 
+    // KioCG start
+    public int getDays() {
+        if (this != MinecraftServer.getServer().getWorldData() && this.getGameRules().getBoolean(GameRules.RULE_DAYLIGHT)) {
+            return ((PrimaryLevelData) MinecraftServer.getServer().getWorldData()).getDays();
+        }
+        return this.days;
+    }
+    // KioCG end
+
     @Nullable
     @Override
     public CompoundTag getLoadedPlayerTag() {
@@ -302,6 +318,7 @@ public class PrimaryLevelData implements ServerLevelData, WorldData {
     @Override
     public void setDayTime(long timeOfDay) {
         this.dayTime = timeOfDay;
+        this.days = (int) (this.dayTime / 24000L); // KioCG
     }
 
     @Override
@@ -322,6 +339,11 @@ public class PrimaryLevelData implements ServerLevelData, WorldData {
 
     @Override
     public int getClearWeatherTime() {
+        // KioCG start - 同步世界天气
+        if (this != MinecraftServer.getServer().getWorldData() && this.getGameRules().getBoolean(GameRules.RULE_WEATHER_CYCLE)) {
+            return ((PrimaryLevelData) MinecraftServer.getServer().getWorldData()).getClearWeatherTime();
+        }
+        // KioCG end - 同步世界天气
         return this.clearWeatherTime;
     }
 
@@ -332,6 +354,11 @@ public class PrimaryLevelData implements ServerLevelData, WorldData {
 
     @Override
     public boolean isThundering() {
+        // KioCG start - 同步世界天气
+        if (this != MinecraftServer.getServer().getWorldData() && this.getGameRules().getBoolean(GameRules.RULE_WEATHER_CYCLE)) {
+            return ((PrimaryLevelData) MinecraftServer.getServer().getWorldData()).isThundering();
+        }
+        // KioCG end - 同步世界天气
         return this.thundering;
     }
 
@@ -361,6 +388,11 @@ public class PrimaryLevelData implements ServerLevelData, WorldData {
 
     @Override
     public int getThunderTime() {
+        // KioCG start - 同步世界天气
+        if (this != MinecraftServer.getServer().getWorldData() && this.getGameRules().getBoolean(GameRules.RULE_WEATHER_CYCLE)) {
+            return ((PrimaryLevelData) MinecraftServer.getServer().getWorldData()).getThunderTime();
+        }
+        // KioCG end - 同步世界天气
         return this.thunderTime;
     }
 
@@ -371,6 +403,11 @@ public class PrimaryLevelData implements ServerLevelData, WorldData {
 
     @Override
     public boolean isRaining() {
+        // KioCG start - 同步世界天气
+        if (this != MinecraftServer.getServer().getWorldData() && this.getGameRules().getBoolean(GameRules.RULE_WEATHER_CYCLE)) {
+            return ((PrimaryLevelData) MinecraftServer.getServer().getWorldData()).isRaining();
+        }
+        // KioCG end - 同步世界天气
         return this.raining;
     }
 
@@ -401,6 +438,11 @@ public class PrimaryLevelData implements ServerLevelData, WorldData {
 
     @Override
     public int getRainTime() {
+        // KioCG start - 同步世界天气
+        if (this != MinecraftServer.getServer().getWorldData() && this.getGameRules().getBoolean(GameRules.RULE_WEATHER_CYCLE)) {
+            return ((PrimaryLevelData) MinecraftServer.getServer().getWorldData()).getRainTime();
+        }
+        // KioCG end - 同步世界天气
         return this.rainTime;
     }
 
