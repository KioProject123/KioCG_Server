From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Joket_abc <15005771700@qq.com>
Date: Fri, 5 Apr 2024 19:22:58 +0800
Subject: [PATCH] Expand container rows


diff --git a/src/main/java/net/minecraft/world/entity/player/Player.java b/src/main/java/net/minecraft/world/entity/player/Player.java
index 0d4076141505b28da0172eca920ee63558421b5a..a2b130e4e93bf8a780afdf5aea13766434b91ac3 100644
--- a/src/main/java/net/minecraft/world/entity/player/Player.java
+++ b/src/main/java/net/minecraft/world/entity/player/Player.java
@@ -199,6 +199,7 @@ public abstract class Player extends LivingEntity {
     private int currentImpulseContextResetGraceTime;
     public boolean affectsSpawning = true; // Paper - Affects Spawning API
     public net.kyori.adventure.util.TriState flyingFallDamage = net.kyori.adventure.util.TriState.NOT_SET; // Paper - flying fall damage
+    public int enderchestRows; // KioCG
 
     // CraftBukkit start
     public boolean fauxSleeping;
diff --git a/src/main/java/net/minecraft/world/inventory/ChestMenu.java b/src/main/java/net/minecraft/world/inventory/ChestMenu.java
index 0dbfd23bbfc6ad203f048142f8c90ef741849fe1..962522590aa10bde17652d9b2d5c86476bbfbab3 100644
--- a/src/main/java/net/minecraft/world/inventory/ChestMenu.java
+++ b/src/main/java/net/minecraft/world/inventory/ChestMenu.java
@@ -75,6 +75,21 @@ public class ChestMenu extends AbstractContainerMenu {
         return new ChestMenu(MenuType.GENERIC_9x6, syncId, playerInventory, inventory, 6);
     }
 
+    // KioCG start
+    public static ChestMenu oneRow(int syncId, Inventory playerInventory, Container inventory) {
+        return new ChestMenu(MenuType.GENERIC_9x1, syncId, playerInventory, inventory, 1);
+    }
+    public static ChestMenu twoRows(int syncId, Inventory playerInventory, Container inventory) {
+        return new ChestMenu(MenuType.GENERIC_9x2, syncId, playerInventory, inventory, 2);
+    }
+    public static ChestMenu fourRows(int syncId, Inventory playerInventory, Container inventory) {
+        return new ChestMenu(MenuType.GENERIC_9x4, syncId, playerInventory, inventory, 4);
+    }
+    public static ChestMenu fiveRows(int syncId, Inventory playerInventory, Container inventory) {
+        return new ChestMenu(MenuType.GENERIC_9x5, syncId, playerInventory, inventory, 5);
+    }
+    // KioCG end
+
     public ChestMenu(MenuType<?> type, int syncId, Inventory playerInventory, Container inventory, int rows) {
         super(type, syncId);
         checkContainerSize(inventory, rows * 9);
diff --git a/src/main/java/net/minecraft/world/inventory/PlayerEnderChestContainer.java b/src/main/java/net/minecraft/world/inventory/PlayerEnderChestContainer.java
index a15d5ff872dbd77f3c3145e0328f3d02e431ff8c..39ede269cdf5f096a79c3b4cf19c641224c8f061 100644
--- a/src/main/java/net/minecraft/world/inventory/PlayerEnderChestContainer.java
+++ b/src/main/java/net/minecraft/world/inventory/PlayerEnderChestContainer.java
@@ -31,11 +31,18 @@ public class PlayerEnderChestContainer extends SimpleContainer {
     }
 
     public PlayerEnderChestContainer(Player owner) {
-        super(27);
+        super(6 * 9); // KioCG
         this.owner = owner;
         // CraftBukkit end
     }
 
+    // KioCG start
+    @Override
+    public int getContainerSize() {
+        return this.owner.enderchestRows * 9;
+    }
+    // KioCG end
+
     public void setActiveChest(EnderChestBlockEntity blockEntity) {
         this.activeChest = blockEntity;
     }
diff --git a/src/main/java/net/minecraft/world/level/block/ChestBlock.java b/src/main/java/net/minecraft/world/level/block/ChestBlock.java
index 8fbfd18b3caeed769396b3ffb1b1778b2f38edc0..303f50597d205f7ccf7f9ec316fdd2767dc125d9 100644
--- a/src/main/java/net/minecraft/world/level/block/ChestBlock.java
+++ b/src/main/java/net/minecraft/world/level/block/ChestBlock.java
@@ -225,6 +225,7 @@ public class ChestBlock extends AbstractChestBlock<ChestBlockEntity> implements
             }
         }
 
+        blockpropertychesttype = ChestType.SINGLE; // KioCG - 强制单箱子
         return (BlockState) ((BlockState) ((BlockState) this.defaultBlockState().setValue(ChestBlock.FACING, enumdirection)).setValue(ChestBlock.TYPE, blockpropertychesttype)).setValue(ChestBlock.WATERLOGGED, fluid.getType() == Fluids.WATER);
     }
 
diff --git a/src/main/java/net/minecraft/world/level/block/EnderChestBlock.java b/src/main/java/net/minecraft/world/level/block/EnderChestBlock.java
index ca92d49ef2010ba00c623491671dcde8ebe697c1..4461e60bde4f45e06c49923d540842a17ccc0406 100644
--- a/src/main/java/net/minecraft/world/level/block/EnderChestBlock.java
+++ b/src/main/java/net/minecraft/world/level/block/EnderChestBlock.java
@@ -91,7 +91,7 @@ public class EnderChestBlock extends AbstractChestBlock<EnderChestBlockEntity> i
                 EnderChestBlockEntity enderChestBlockEntity = (EnderChestBlockEntity)blockEntity;
                 playerEnderChestContainer.setActiveChest(enderChestBlockEntity);
                 player.openMenu(
-                    new SimpleMenuProvider((i, inventory, playerx) -> ChestMenu.threeRows(i, inventory, playerEnderChestContainer), CONTAINER_TITLE)
+                    new SimpleMenuProvider((i, inventory, playerx) -> this.getEnderChestRows(i, inventory, playerEnderChestContainer, player), CONTAINER_TITLE)
                 );
                 player.awardStat(Stats.OPEN_ENDERCHEST);
                 PiglinAi.angerNearbyPiglins(player, true);
@@ -102,6 +102,34 @@ public class EnderChestBlock extends AbstractChestBlock<EnderChestBlockEntity> i
         }
     }
 
+    // KioCG start
+    private ChestMenu getEnderChestRows(int syncId, net.minecraft.world.entity.player.Inventory inventory, PlayerEnderChestContainer playerEnderChestContainer, Player player) {
+        org.bukkit.craftbukkit.entity.CraftHumanEntity bukkitPlayer = player.getBukkitEntity();
+        if (bukkitPlayer.hasPermission("kiocg.enderchestrows.6")) {
+            player.enderchestRows = 6;
+            return ChestMenu.sixRows(syncId, inventory, playerEnderChestContainer);
+        } else if (bukkitPlayer.hasPermission("kiocg.enderchestrows.5")) {
+            player.enderchestRows = 5;
+            return ChestMenu.fiveRows(syncId, inventory, playerEnderChestContainer);
+        } else if (bukkitPlayer.hasPermission("kiocg.enderchestrows.4")) {
+            player.enderchestRows = 4;
+            return ChestMenu.fourRows(syncId, inventory, playerEnderChestContainer);
+        } else if (bukkitPlayer.hasPermission("kiocg.enderchestrows.3")) {
+            player.enderchestRows = 3;
+            return ChestMenu.threeRows(syncId, inventory, playerEnderChestContainer);
+        } else if (bukkitPlayer.hasPermission("kiocg.enderchestrows.2")) {
+            player.enderchestRows = 2;
+            return ChestMenu.twoRows(syncId, inventory, playerEnderChestContainer);
+        } else if (bukkitPlayer.hasPermission("kiocg.enderchestrows.1")) {
+            player.enderchestRows = 1;
+            return ChestMenu.oneRow(syncId, inventory, playerEnderChestContainer);
+        } else {
+            player.enderchestRows = 3;
+            return ChestMenu.threeRows(syncId, inventory, playerEnderChestContainer);
+        }
+    }
+    // KioCG end
+
     @Override
     public BlockEntity newBlockEntity(BlockPos pos, BlockState state) {
         return new EnderChestBlockEntity(pos, state);
diff --git a/src/main/java/net/minecraft/world/level/block/entity/BarrelBlockEntity.java b/src/main/java/net/minecraft/world/level/block/entity/BarrelBlockEntity.java
index 6186e55014bbb9d5bedaa0e9d196879c55339d42..1c3daf6486364974ddc603d95a9ebd0abfeb50d9 100644
--- a/src/main/java/net/minecraft/world/level/block/entity/BarrelBlockEntity.java
+++ b/src/main/java/net/minecraft/world/level/block/entity/BarrelBlockEntity.java
@@ -27,7 +27,7 @@ import org.bukkit.craftbukkit.entity.CraftHumanEntity;
 import org.bukkit.entity.HumanEntity;
 // CraftBukkit end
 
-public class BarrelBlockEntity extends RandomizableContainerBlockEntity {
+public class BarrelBlockEntity extends RowsContainerBlockEntity { // KioCG
 
     // CraftBukkit start - add fields and methods
     public List<HumanEntity> transaction = new ArrayList<>();
@@ -117,10 +117,12 @@ public class BarrelBlockEntity extends RandomizableContainerBlockEntity {
 
     }
 
-    @Override
-    public int getContainerSize() {
-        return 27;
-    }
+    // KioCG start
+    // @Override
+    // public int getContainerSize() {
+    //     return 27;
+    // }
+    // KioCG end
 
     @Override
     protected NonNullList<ItemStack> getItems() {
@@ -137,10 +139,12 @@ public class BarrelBlockEntity extends RandomizableContainerBlockEntity {
         return Component.translatable("container.barrel");
     }
 
-    @Override
-    protected AbstractContainerMenu createMenu(int syncId, Inventory playerInventory) {
-        return ChestMenu.threeRows(syncId, playerInventory, this);
-    }
+    // KioCG start
+    // @Override
+    // protected AbstractContainerMenu createMenu(int syncId, Inventory playerInventory) {
+    //     return ChestMenu.threeRows(syncId, playerInventory, this);
+    // }
+    // KioCG end
 
     @Override
     public void startOpen(Player player) {
diff --git a/src/main/java/net/minecraft/world/level/block/entity/ChestBlockEntity.java b/src/main/java/net/minecraft/world/level/block/entity/ChestBlockEntity.java
index b88aa184cd06a0485146f58a5b61a56a50911209..18c3672d12fbaf94c8309c5acb7a0b82aecc5962 100644
--- a/src/main/java/net/minecraft/world/level/block/entity/ChestBlockEntity.java
+++ b/src/main/java/net/minecraft/world/level/block/entity/ChestBlockEntity.java
@@ -29,7 +29,7 @@ import org.bukkit.craftbukkit.entity.CraftHumanEntity;
 import org.bukkit.entity.HumanEntity;
 // CraftBukkit end
 
-public class ChestBlockEntity extends RandomizableContainerBlockEntity implements LidBlockEntity {
+public class ChestBlockEntity extends RowsContainerBlockEntity implements LidBlockEntity { // KioCG
 
     private static final int EVENT_SET_OPEN_COUNT = 1;
     private NonNullList<ItemStack> items;
@@ -103,10 +103,12 @@ public class ChestBlockEntity extends RandomizableContainerBlockEntity implement
         this(BlockEntityType.CHEST, pos, state);
     }
 
-    @Override
-    public int getContainerSize() {
-        return 27;
-    }
+    // KioCG start
+    // @Override
+    // public int getContainerSize() {
+    //     return 27;
+    // }
+    // KioCG end
 
     @Override
     protected Component getDefaultName() {
@@ -217,10 +219,12 @@ public class ChestBlockEntity extends RandomizableContainerBlockEntity implement
         to.setItems(nonnulllist);
     }
 
-    @Override
-    protected AbstractContainerMenu createMenu(int syncId, Inventory playerInventory) {
-        return ChestMenu.threeRows(syncId, playerInventory, this);
-    }
+    // KioCG start
+    // @Override
+    // protected AbstractContainerMenu createMenu(int syncId, Inventory playerInventory) {
+    //     return ChestMenu.threeRows(syncId, playerInventory, this);
+    // }
+    // KioCG end
 
     public void recheckOpen() {
         if (!this.remove) {
diff --git a/src/main/java/net/minecraft/world/level/block/entity/RowsContainerBlockEntity.java b/src/main/java/net/minecraft/world/level/block/entity/RowsContainerBlockEntity.java
new file mode 100644
index 0000000000000000000000000000000000000000..f365f91b412c3178962a81dfe6a602c4ddfd60e2
--- /dev/null
+++ b/src/main/java/net/minecraft/world/level/block/entity/RowsContainerBlockEntity.java
@@ -0,0 +1,103 @@
+// KioCG start - all class
+package net.minecraft.world.level.block.entity;
+
+import net.minecraft.core.BlockPos;
+import net.minecraft.core.HolderLookup;
+import net.minecraft.core.NonNullList;
+import net.minecraft.nbt.CompoundTag;
+import net.minecraft.world.entity.player.Inventory;
+import net.minecraft.world.inventory.AbstractContainerMenu;
+import net.minecraft.world.inventory.ChestMenu;
+import net.minecraft.world.item.ItemStack;
+import net.minecraft.world.level.block.state.BlockState;
+import org.bukkit.entity.HumanEntity;
+
+import java.util.List;
+
+public abstract class RowsContainerBlockEntity extends RandomizableContainerBlockEntity {
+    private int rows;
+
+    protected RowsContainerBlockEntity(BlockEntityType<?> type, BlockPos pos, BlockState state) {
+        super(type, pos, state);
+        this.rows = getVanillaRows();
+    }
+
+    protected int getVanillaRows() {
+        return 3;
+    }
+
+    public int getRows() {
+        return this.rows;
+    }
+
+    @Override
+    public final int getContainerSize() {
+        return this.rows * 9;
+    }
+
+    public List<ItemStack> setRows(int rows) {
+        for (HumanEntity viewer : this.getViewers()) {
+            viewer.closeInventory(org.bukkit.event.inventory.InventoryCloseEvent.Reason.CANT_USE);
+        }
+
+        this.rows = rows;
+
+        List<ItemStack> leftover = new java.util.ArrayList<>();
+        List<ItemStack> items = this.getContents();
+        List<ItemStack> newItems = NonNullList.withSize(getContainerSize(), ItemStack.EMPTY);
+        for (int i = 0; i < items.size(); ++i) {
+            ItemStack itemStack = items.get(i);
+            if (i < newItems.size()) {
+                newItems.set(i, itemStack);
+            } else if (!itemStack.isEmpty()) {
+                leftover.add(itemStack);
+            }
+        }
+
+        this.setItems((NonNullList<ItemStack>) newItems);
+        return leftover;
+    }
+
+    @Override
+    protected void applyImplicitComponents(BlockEntity.DataComponentInput components) {
+        super.applyImplicitComponents(components);
+        final net.minecraft.world.item.component.CustomData customData = components.get(net.minecraft.core.component.DataComponents.CUSTOM_DATA);
+        if (customData != null && customData.getUnsafe().contains("KioCG.Rows", net.minecraft.nbt.Tag.TAG_INT)) {
+            this.setRows(customData.getUnsafe().getInt("KioCG.Rows"));
+        }
+    }
+
+    @Override
+    public void removeComponentsFromTag(CompoundTag nbt) {
+        super.removeComponentsFromTag(nbt);
+        nbt.remove("KioCG.Rows");
+    }
+
+    @Override
+    protected void loadAdditional(CompoundTag nbt, HolderLookup.Provider registryLookup) {
+        super.loadAdditional(nbt, registryLookup);
+        if (nbt.contains("KioCG.Rows", net.minecraft.nbt.Tag.TAG_INT)) {
+            this.rows = nbt.getInt("KioCG.Rows");
+        }
+    }
+
+    @Override
+    protected void saveAdditional(CompoundTag nbt, HolderLookup.Provider registryLookup) {
+        super.saveAdditional(nbt, registryLookup);
+        nbt.putInt("KioCG.Rows", this.rows);
+    }
+
+    @Override
+    protected final AbstractContainerMenu createMenu(int syncId, Inventory playerInventory) {
+        return switch (getContainerSize()) {
+            case 9 -> ChestMenu.oneRow(syncId, playerInventory, this);
+            case 2 * 9 -> ChestMenu.twoRows(syncId, playerInventory, this);
+            case 3 * 9 -> ChestMenu.threeRows(syncId, playerInventory, this);
+            case 4 * 9 -> ChestMenu.fourRows(syncId, playerInventory, this);
+            case 5 * 9 -> ChestMenu.fiveRows(syncId, playerInventory, this);
+            case 6 * 9 -> ChestMenu.sixRows(syncId, playerInventory, this);
+            default -> throw new IllegalStateException("Unexpected value: " + getContainerSize());
+        };
+    }
+}
+// KioCG end - all class
diff --git a/src/main/java/org/bukkit/craftbukkit/block/CraftChest.java b/src/main/java/org/bukkit/craftbukkit/block/CraftChest.java
index cc7bf4d39b834fba472bc163226a01a0cd4b6010..dca1d737d9311a9b52dc530dc2e06af130f14102 100644
--- a/src/main/java/org/bukkit/craftbukkit/block/CraftChest.java
+++ b/src/main/java/org/bukkit/craftbukkit/block/CraftChest.java
@@ -124,4 +124,25 @@ public class CraftChest extends CraftLootable<ChestBlockEntity> implements Chest
             && ChestBlock.isChestBlockedAt(world, neighbourBlockPos);
     }
     // Paper end - More Chest Block API
+
+    // KioCG start
+    @Override
+    public int getRows() {
+        return getTileEntity().getRows();
+    }
+
+    @Override
+    public org.bukkit.inventory.ItemStack[] setRows(int rows) {
+        final java.util.List<net.minecraft.world.item.ItemStack> mcItems = getTileEntity().setRows(rows);
+        int size = mcItems.size();
+        org.bukkit.inventory.ItemStack[] items = new org.bukkit.inventory.ItemStack[size];
+
+        for (int i = 0; i < size; i++) {
+            net.minecraft.world.item.ItemStack mcItem = mcItems.get(i);
+            items[i] = org.bukkit.craftbukkit.inventory.CraftItemStack.asCraftMirror(mcItem);
+        }
+
+        return items;
+    }
+    // KioCG end
 }
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index 0230e4fe47b3536934684b355be5d87d3e3d02df..0ee82c40b47d4337941e4a81f12869233bbda590 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -234,6 +234,29 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
         }
     }
 
+    // KioCG start
+    @Override
+    public void recalculatePermissions() {
+        super.recalculatePermissions();
+
+        if (this.hasPermission("kiocg.enderchestrows.6")) {
+            this.getHandle().enderchestRows = 6;
+        } else if (this.hasPermission("kiocg.enderchestrows.5")) {
+            this.getHandle().enderchestRows = 5;
+        } else if (this.hasPermission("kiocg.enderchestrows.4")) {
+            this.getHandle().enderchestRows = 4;
+        } else if (this.hasPermission("kiocg.enderchestrows.3")) {
+            this.getHandle().enderchestRows = 3;
+        } else if (this.hasPermission("kiocg.enderchestrows.2")) {
+            this.getHandle().enderchestRows = 2;
+        } else if (this.hasPermission("kiocg.enderchestrows.1")) {
+            this.getHandle().enderchestRows = 1;
+        } else {
+            this.getHandle().enderchestRows = 3;
+        }
+    }
+    // KioCG end
+
     @Override
     public boolean isOp() {
         return this.server.getHandle().isOp(this.getProfile());
diff --git a/src/main/java/org/bukkit/craftbukkit/inventory/CraftContainer.java b/src/main/java/org/bukkit/craftbukkit/inventory/CraftContainer.java
index 10a5b1853d3984427209c87bdec1d471dddb1244..3c3426314c94e689299e32cbf71d2a7c2e468fb9 100644
--- a/src/main/java/org/bukkit/craftbukkit/inventory/CraftContainer.java
+++ b/src/main/java/org/bukkit/craftbukkit/inventory/CraftContainer.java
@@ -184,7 +184,18 @@ public class CraftContainer extends AbstractContainerMenu {
             case CHEST:
             case ENDER_CHEST:
             case BARREL:
-                this.delegate = new ChestMenu(MenuType.GENERIC_9x3, windowId, bottom, top, top.getContainerSize() / 9);
+                // KioCG start
+                MenuType menuType = switch (top.getContainerSize()) {
+                    case 9 -> MenuType.GENERIC_9x1;
+                    case 18 -> MenuType.GENERIC_9x2;
+                    case 27, 41 /*player*/ -> MenuType.GENERIC_9x3;
+                    case 36 -> MenuType.GENERIC_9x4;
+                    case 45 -> MenuType.GENERIC_9x5;
+                    case 54 -> MenuType.GENERIC_9x6;
+                    default -> throw new IllegalArgumentException("Unsupported custom inventory size " + top.getContainerSize());
+                };
+                this.delegate = new ChestMenu(menuType, windowId, bottom, top, top.getContainerSize() / 9);
+                // KioCG end
                 break;
             case DISPENSER:
             case DROPPER:
diff --git a/src/main/resources/data/minecraft/loot_table/blocks/barrel.json b/src/main/resources/data/minecraft/loot_table/blocks/barrel.json
index b1b80b266b13f1de0cb33c62a5a5f4033e42f6fe..66fe913e2beac9b131652932d546548f83a8c417 100644
--- a/src/main/resources/data/minecraft/loot_table/blocks/barrel.json
+++ b/src/main/resources/data/minecraft/loot_table/blocks/barrel.json
@@ -18,6 +18,17 @@
                 "minecraft:custom_name"
               ],
               "source": "block_entity"
+            },
+            {
+              "function": "minecraft:copy_custom_data",
+              "ops": [
+                {
+                  "source": "'KioCG.Rows'",
+                  "target": "'KioCG.Rows'",
+                  "op": "replace"
+                }
+              ],
+              "source": "block_entity"
             }
           ],
           "name": "minecraft:barrel"
diff --git a/src/main/resources/data/minecraft/loot_table/blocks/chest.json b/src/main/resources/data/minecraft/loot_table/blocks/chest.json
index 7faaf3b2f3ea2f092a32b06344d3947ba55ffc4e..f73d13671773fa65e312dfa3be1446ea14c59800 100644
--- a/src/main/resources/data/minecraft/loot_table/blocks/chest.json
+++ b/src/main/resources/data/minecraft/loot_table/blocks/chest.json
@@ -18,6 +18,17 @@
                 "minecraft:custom_name"
               ],
               "source": "block_entity"
+            },
+            {
+              "function": "minecraft:copy_custom_data",
+              "ops": [
+                {
+                  "source": "'KioCG.Rows'",
+                  "target": "'KioCG.Rows'",
+                  "op": "replace"
+                }
+              ],
+              "source": "block_entity"
             }
           ],
           "name": "minecraft:chest"
