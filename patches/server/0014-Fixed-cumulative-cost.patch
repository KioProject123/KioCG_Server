From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Joket_abc <15005771700@qq.com>
Date: Sun, 17 Mar 2024 01:33:14 +0800
Subject: [PATCH] Fixed cumulative cost


diff --git a/src/main/java/io/papermc/paper/configuration/GlobalConfiguration.java b/src/main/java/io/papermc/paper/configuration/GlobalConfiguration.java
index fef19857b670319613f9183de680dd23d6d1a0e8..8bb51312cc6f63b5d85c2e0cd494af89e61850b1 100644
--- a/src/main/java/io/papermc/paper/configuration/GlobalConfiguration.java
+++ b/src/main/java/io/papermc/paper/configuration/GlobalConfiguration.java
@@ -435,6 +435,13 @@ public class GlobalConfiguration extends ConfigurationPart {
         public class Enchant extends ConfigurationPart {
             public boolean allowUnsafeCommand = true;
         }
+
+        public Anvil anvil;
+        public class Anvil extends ConfigurationPart {
+            public int fixedCumulativeCost = 4;
+            public boolean repairNoLevelCost = true;
+            public boolean renameNoLevelCost = true;
+        }
     }
     // KioCG end
 }
diff --git a/src/main/java/net/minecraft/world/inventory/AnvilMenu.java b/src/main/java/net/minecraft/world/inventory/AnvilMenu.java
index 2854ecc3598364a86ff1104e9bc8dad90caedce4..e1d645a9fa00b42b3c3c3eb5e44cc440f067af5e 100644
--- a/src/main/java/net/minecraft/world/inventory/AnvilMenu.java
+++ b/src/main/java/net/minecraft/world/inventory/AnvilMenu.java
@@ -142,17 +142,21 @@ public class AnvilMenu extends ItemCombinerMenu {
         int i = 0;
         long j = 0L;
         byte b0 = 0;
+        boolean allowZeroLevel = false; // KioCG
 
         if (!itemstack.isEmpty() && EnchantmentHelper.canStoreEnchantments(itemstack)) {
             ItemStack itemstack1 = itemstack.copy();
             ItemStack itemstack2 = this.inputSlots.getItem(1);
             ItemEnchantments.Mutable itemenchantments_a = new ItemEnchantments.Mutable(EnchantmentHelper.getEnchantmentsForCrafting(itemstack1));
 
+            if (io.papermc.paper.configuration.GlobalConfiguration.get().kiocgConfig.anvil.fixedCumulativeCost >= 0) j += io.papermc.paper.configuration.GlobalConfiguration.get().kiocgConfig.anvil.fixedCumulativeCost; else // KioCG
             j += (long) (Integer) itemstack.getOrDefault(DataComponents.REPAIR_COST, 0) + (long) (Integer) itemstack2.getOrDefault(DataComponents.REPAIR_COST, 0);
             this.repairItemCountCost = 0;
             int k;
 
             if (!itemstack2.isEmpty()) {
+                if (io.papermc.paper.configuration.GlobalConfiguration.get().kiocgConfig.anvil.fixedCumulativeCost >= 0) j += io.papermc.paper.configuration.GlobalConfiguration.get().kiocgConfig.anvil.fixedCumulativeCost; // KioCG
+
                 boolean flag = itemstack2.has(DataComponents.STORED_ENCHANTMENTS);
                 int l;
                 int i1;
@@ -170,6 +174,12 @@ public class AnvilMenu extends ItemCombinerMenu {
                     for (i1 = 0; k > 0 && i1 < itemstack2.getCount(); ++i1) {
                         l = itemstack1.getDamageValue() - k;
                         itemstack1.setDamageValue(l);
+                        // KioCG start
+                        if (io.papermc.paper.configuration.GlobalConfiguration.get().kiocgConfig.anvil.repairNoLevelCost) {
+                            allowZeroLevel = true;
+                            j = 0;
+                        } else
+                        // KioCG end
                         ++i;
                         k = Math.min(itemstack1.getDamageValue(), itemstack1.getMaxDamage() / 4);
                     }
@@ -264,11 +274,23 @@ public class AnvilMenu extends ItemCombinerMenu {
             if (this.itemName != null && !StringUtil.isBlank(this.itemName)) {
                 if (!this.itemName.equals(itemstack.getHoverName().getString())) {
                     b0 = 1;
+                    // KioCG start
+                    if (io.papermc.paper.configuration.GlobalConfiguration.get().kiocgConfig.anvil.renameNoLevelCost) {
+                        allowZeroLevel = true;
+                        j = 0;
+                    } else
+                    // KioCG end
                     i += b0;
                     itemstack1.set(DataComponents.CUSTOM_NAME, Component.literal(this.itemName));
                 }
             } else if (itemstack.has(DataComponents.CUSTOM_NAME)) {
                 b0 = 1;
+                // KioCG start
+                if (io.papermc.paper.configuration.GlobalConfiguration.get().kiocgConfig.anvil.renameNoLevelCost) {
+                    allowZeroLevel = true;
+                    j = 0;
+                } else
+                // KioCG end
                 i += b0;
                 itemstack1.remove(DataComponents.CUSTOM_NAME);
             }
@@ -277,6 +299,7 @@ public class AnvilMenu extends ItemCombinerMenu {
 
             this.cost.set(k2);
             if (i <= 0) {
+                if (i < 0 || !allowZeroLevel) // KioCG
                 itemstack1 = ItemStack.EMPTY;
             }
 
@@ -295,6 +318,7 @@ public class AnvilMenu extends ItemCombinerMenu {
                 }
 
                 if (b0 != i || b0 == 0) {
+                    if (k2 != 0) // KioCG - 如果启用, 则重命名或原材料修复装备不计算铁砧惩罚
                     k = AnvilMenu.calculateIncreasedRepairCost(k);
                 }
 
