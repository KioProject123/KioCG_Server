From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Joket_abc <15005771700@qq.com>
Date: Wed, 28 Feb 2024 23:17:21 +0800
Subject: [PATCH] Change container behavior


diff --git a/src/main/java/net/minecraft/world/inventory/AnvilMenu.java b/src/main/java/net/minecraft/world/inventory/AnvilMenu.java
index af76c89a3d84a806268107f3cf19dd3b2dba6f4f..f485fb20ef5bb2bad60ac16200eedcfefc19563c 100644
--- a/src/main/java/net/minecraft/world/inventory/AnvilMenu.java
+++ b/src/main/java/net/minecraft/world/inventory/AnvilMenu.java
@@ -107,7 +107,7 @@ public class AnvilMenu extends ItemCombinerMenu {
         this.access.execute((world, blockposition) -> {
             BlockState iblockdata = world.getBlockState(blockposition);
 
-            if (!player.hasInfiniteMaterials() && iblockdata.is(BlockTags.ANVIL) && player.getRandom().nextFloat() < 0.12F) {
+            if (false && !player.hasInfiniteMaterials() && iblockdata.is(BlockTags.ANVIL) && player.getRandom().nextFloat() < 0.12F) { // KioCG - 铁砧无法损坏
                 BlockState iblockdata1 = AnvilBlock.damage(iblockdata);
 
                 // Paper start - AnvilDamageEvent
diff --git a/src/main/java/net/minecraft/world/item/alchemy/PotionBrewing.java b/src/main/java/net/minecraft/world/item/alchemy/PotionBrewing.java
index ca01f3344005b295c7ae98f6d5b03f79513b12a4..3032aeed30a75c3330771c9c5732881a42d6edb4 100644
--- a/src/main/java/net/minecraft/world/item/alchemy/PotionBrewing.java
+++ b/src/main/java/net/minecraft/world/item/alchemy/PotionBrewing.java
@@ -77,7 +77,7 @@ public class PotionBrewing {
             return true;
         }
         // Paper end - Custom Potion Mixes
-        return this.isContainer(input) && (this.hasContainerMix(input, ingredient) || this.hasPotionMix(input, ingredient));
+        return this.isContainer(input) && (true || this.hasContainerMix(input, ingredient) || this.hasPotionMix(input, ingredient)); // KioCG - 自定义失败的酿造
     }
 
     public boolean hasContainerMix(ItemStack input, ItemStack ingredient) {
@@ -132,6 +132,10 @@ public class PotionBrewing {
                     }
                 }
 
+                // KioCG start - 自定义失败的酿造
+                input = new ItemStack(input.getItem());
+                input.set(DataComponents.POTION_CONTENTS, PotionContents.EMPTY);
+                // KioCG end - 自定义失败的酿造
                 return input;
             }
         }
@@ -170,7 +174,7 @@ public class PotionBrewing {
         builder.addMix(Potions.LONG_LEAPING, Items.FERMENTED_SPIDER_EYE, Potions.LONG_SLOWNESS);
         builder.addMix(Potions.SLOWNESS, Items.REDSTONE, Potions.LONG_SLOWNESS);
         builder.addMix(Potions.SLOWNESS, Items.GLOWSTONE_DUST, Potions.STRONG_SLOWNESS);
-        builder.addMix(Potions.AWKWARD, Items.TURTLE_HELMET, Potions.TURTLE_MASTER);
+        builder.addMix(Potions.AWKWARD, Items.TURTLE_SCUTE, Potions.TURTLE_MASTER); // KioCG - 海龟壳改为海龟鳞甲
         builder.addMix(Potions.TURTLE_MASTER, Items.REDSTONE, Potions.LONG_TURTLE_MASTER);
         builder.addMix(Potions.TURTLE_MASTER, Items.GLOWSTONE_DUST, Potions.STRONG_TURTLE_MASTER);
         builder.addMix(Potions.SWIFTNESS, Items.FERMENTED_SPIDER_EYE, Potions.SLOWNESS);
diff --git a/src/main/java/net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity.java b/src/main/java/net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity.java
index d3a451158dd46be0d58150a1c956dc8cb344c5c5..63411731e62f3475a901bfb53b1dc2013156617f 100644
--- a/src/main/java/net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity.java
+++ b/src/main/java/net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity.java
@@ -149,6 +149,8 @@ public abstract class AbstractFurnaceBlockEntity extends BaseContainerBlockEntit
         } else {
             Map<Item, Integer> map1 = Maps.newLinkedHashMap();
 
+            // KioCG start
+            /*
             AbstractFurnaceBlockEntity.add(map1, (ItemLike) Items.LAVA_BUCKET, 20000);
             AbstractFurnaceBlockEntity.add(map1, (ItemLike) Blocks.COAL_BLOCK, 16000);
             AbstractFurnaceBlockEntity.add(map1, (ItemLike) Items.BLAZE_ROD, 2400);
@@ -208,6 +210,10 @@ public abstract class AbstractFurnaceBlockEntity extends BaseContainerBlockEntit
             AbstractFurnaceBlockEntity.add(map1, (ItemLike) Blocks.AZALEA, 100);
             AbstractFurnaceBlockEntity.add(map1, (ItemLike) Blocks.FLOWERING_AZALEA, 100);
             AbstractFurnaceBlockEntity.add(map1, (ItemLike) Blocks.MANGROVE_ROOTS, 300);
+            */
+            AbstractFurnaceBlockEntity.add(map1, (ItemLike) Items.COAL, 200);
+            AbstractFurnaceBlockEntity.add(map1, (ItemLike) Items.CHARCOAL, 200);
+            // KioCG end
             AbstractFurnaceBlockEntity.fuelCache = map1;
             return map1;
         }
@@ -371,7 +377,7 @@ public abstract class AbstractFurnaceBlockEntity extends BaseContainerBlockEntit
 
                 blockEntity.litTime = furnaceBurnEvent.getBurnTime();
                 blockEntity.litDuration = blockEntity.litTime;
-                if (blockEntity.isLit() && furnaceBurnEvent.isBurning()) {
+                if (false && blockEntity.isLit() && furnaceBurnEvent.isBurning()) { // KioCG - 燃烧完成后再扣除燃料
                     // CraftBukkit end
                     flag1 = true;
                     if (flag3 && furnaceBurnEvent.willConsumeFuel()) { // Paper - add consumeFuel to FurnaceBurnEvent
@@ -404,8 +410,31 @@ public abstract class AbstractFurnaceBlockEntity extends BaseContainerBlockEntit
                 if (blockEntity.cookingProgress >= blockEntity.cookingTotalTime) { // Paper - cook speed multiplier API
                     blockEntity.cookingProgress = 0;
                     blockEntity.cookingTotalTime = AbstractFurnaceBlockEntity.getTotalCookTime(world, blockEntity.recipeType, blockEntity, blockEntity.cookSpeedMultiplier); // Paper - cook speed multiplier API
-                    if (AbstractFurnaceBlockEntity.burn(blockEntity.level, blockEntity.worldPosition, world.registryAccess(), recipeholder, blockEntity.items, i)) { // CraftBukkit
+
+                    // KioCG start
+                    boolean burned = false;
+                    while (AbstractFurnaceBlockEntity.burn(blockEntity.level, blockEntity.worldPosition, world.registryAccess(), recipeholder, blockEntity.items, i)) { // CraftBukkit
                         blockEntity.setRecipeUsed(recipeholder);
+                        burned = true;
+                        if (blockEntity.items.get(0).isEmpty()) break;
+                    }
+
+                    if (burned) {
+                        ((AbstractFurnaceBlockEntity) blockEntity).getRecipesToAwardAndPopExperience((ServerLevel) world, new Vec3(blockEntity.worldPosition.getX() + 0.5D, blockEntity.worldPosition.getY() + 1.0D, blockEntity.worldPosition.getZ() + 0.5D));
+                        blockEntity.recipesUsed.clear();
+
+                        // 燃烧完成后再扣除燃料
+                        if (!itemstack.isEmpty()) {
+                            Item item = itemstack.getItem();
+
+                            itemstack.shrink(1);
+                            if (itemstack.isEmpty()) {
+                                Item item1 = item.getCraftingRemainingItem();
+
+                                blockEntity.items.set(1, item1 == null ? ItemStack.EMPTY : new ItemStack(item1));
+                            }
+                        }
+                    // KioCG end
                     }
 
                     flag1 = true;
@@ -471,6 +500,11 @@ public abstract class AbstractFurnaceBlockEntity extends BaseContainerBlockEntit
             itemstack1 = CraftItemStack.asNMSCopy(result);
 
             if (!itemstack1.isEmpty()) {
+                // KioCG start
+                net.minecraft.world.Containers.dropItemStack(world, (double) blockposition.getX(), (double) blockposition.getY(), (double) blockposition.getZ(), itemstack1);
+            }
+            if (false) {
+                // KioCG end
                 if (itemstack2.isEmpty()) {
                     nonnulllist.set(2, itemstack1.copy());
                 } else if (CraftItemStack.asCraftMirror(itemstack2).isSimilar(result)) {
@@ -490,10 +524,13 @@ public abstract class AbstractFurnaceBlockEntity extends BaseContainerBlockEntit
             // CraftBukkit end
 
             if (itemstack.is(Blocks.WET_SPONGE.asItem()) && !((ItemStack) nonnulllist.get(1)).isEmpty() && ((ItemStack) nonnulllist.get(1)).is(Items.BUCKET)) {
-                nonnulllist.set(1, new ItemStack(Items.WATER_BUCKET));
+                // KioCG start
+                nonnulllist.set(1, ItemStack.EMPTY);
+                net.minecraft.world.Containers.dropItemStack(world, (double) blockposition.getX(), (double) blockposition.getY(), (double) blockposition.getZ(), new ItemStack(Items.WATER_BUCKET));
+                // KioCG end
             }
 
-            itemstack.shrink(1);
+            itemstack.setCount(0); // KioCG - 直接清除材料, 因为配方不支持指定材料数量 (使用插件自定义行为)
             return true;
         } else {
             return false;
@@ -516,6 +553,7 @@ public abstract class AbstractFurnaceBlockEntity extends BaseContainerBlockEntit
         // Paper start - cook speed multiplier API
         /* Scale the recipe's cooking time to the current cookSpeedMultiplier */
         int cookTime = world != null ? furnace.quickCheck.getRecipeFor(singlerecipeinput, world).map(holder -> holder.value().getCookingTime()).orElse(200) : (net.minecraft.server.MinecraftServer.getServer().getRecipeManager().getRecipeFor(recipeType, singlerecipeinput, world /* passing a null level here is safe. world is only used for map extending recipes which won't happen here */).map(holder -> holder.value().getCookingTime()).orElse(200));
+        if (furnace instanceof BlastFurnaceBlockEntity || furnace instanceof SmokerBlockEntity) cookTime *= 2; // KioCG - 不要加速高炉和烟熏炉
         return (int) Math.ceil (cookTime / cookSpeedMultiplier);
         // Paper end - cook speed multiplier API
     }
@@ -526,6 +564,7 @@ public abstract class AbstractFurnaceBlockEntity extends BaseContainerBlockEntit
 
     @Override
     public int[] getSlotsForFace(Direction side) {
+        if (true) return new int[0]; // KioCG - 阻止漏斗交互
         return side == Direction.DOWN ? AbstractFurnaceBlockEntity.SLOTS_FOR_DOWN : (side == Direction.UP ? AbstractFurnaceBlockEntity.SLOTS_FOR_UP : AbstractFurnaceBlockEntity.SLOTS_FOR_SIDES);
     }
 
diff --git a/src/main/java/net/minecraft/world/level/block/entity/BlastFurnaceBlockEntity.java b/src/main/java/net/minecraft/world/level/block/entity/BlastFurnaceBlockEntity.java
index fb4f57b2ed17ff9b4853e1ba2aac7a002989e5c8..a394e06d24cd99f672f762f75260c743bcee0b83 100644
--- a/src/main/java/net/minecraft/world/level/block/entity/BlastFurnaceBlockEntity.java
+++ b/src/main/java/net/minecraft/world/level/block/entity/BlastFurnaceBlockEntity.java
@@ -19,10 +19,12 @@ public class BlastFurnaceBlockEntity extends AbstractFurnaceBlockEntity {
         return Component.translatable("container.blast_furnace");
     }
 
-    @Override
-    protected int getBurnDuration(ItemStack fuel) {
-        return super.getBurnDuration(fuel) / 2;
-    }
+    // KioCG start - 不要加速高炉和烟熏炉
+    // @Override
+    // protected int getBurnDuration(ItemStack fuel) {
+    //     return super.getBurnDuration(fuel) / 2;
+    // }
+    // KioCG end - 不要加速高炉和烟熏炉
 
     @Override
     protected AbstractContainerMenu createMenu(int syncId, Inventory playerInventory) {
diff --git a/src/main/java/net/minecraft/world/level/block/entity/BrewingStandBlockEntity.java b/src/main/java/net/minecraft/world/level/block/entity/BrewingStandBlockEntity.java
index 0063bb973e77248bdfc541336e11b0d0f25cb7d2..5dc07c3d434858b997341102c19522c73d72d17e 100644
--- a/src/main/java/net/minecraft/world/level/block/entity/BrewingStandBlockEntity.java
+++ b/src/main/java/net/minecraft/world/level/block/entity/BrewingStandBlockEntity.java
@@ -86,7 +86,7 @@ public class BrewingStandBlockEntity extends BaseContainerBlockEntity implements
 
     public BrewingStandBlockEntity(BlockPos pos, BlockState state) {
         super(BlockEntityType.BREWING_STAND, pos, state);
-        this.items = NonNullList.withSize(5, ItemStack.EMPTY);
+        this.items = NonNullList.withSize(10, ItemStack.EMPTY); // KioCG
         this.dataAccess = new ContainerData() {
             @Override
             public int get(int index) {
@@ -150,6 +150,7 @@ public class BrewingStandBlockEntity extends BaseContainerBlockEntity implements
         if (blockEntity.brewTime <= 0 && !blockEntity.shouldTick) return; else blockEntity.shouldTick = false; // KioCG - 优化未燃烧的tick
         ItemStack itemstack = (ItemStack) blockEntity.items.get(4);
 
+        blockEntity.fuel = 20; // KioCG - 总是最大燃料值
         if (blockEntity.fuel <= 0 && itemstack.is(Items.BLAZE_POWDER)) {
             // CraftBukkit start
             BrewingStandFuelEvent event = new BrewingStandFuelEvent(CraftBlock.at(world, pos), CraftItemStack.asCraftMirror(itemstack), 20);
@@ -275,9 +276,22 @@ public class BrewingStandBlockEntity extends BaseContainerBlockEntity implements
         }
         // CraftBukkit end
 
+        // KioCG start
+        itemstack.shrink(1);
+        nonnulllist.set(3, itemstack);
+        boolean autoBrewing = tryFillNextIngredient(nonnulllist);
+        // KioCG end
+
         for (int i = 0; i < 3; ++i) {
             // CraftBukkit start - validate index in case it is cleared by plugins
             if (i < brewResults.size()) {
+                // KioCG start
+                if (!autoBrewing) {
+                    Containers.dropItemStack(world, (double) blockposition.getX(), (double) blockposition.getY(), (double) blockposition.getZ(), CraftItemStack.asNMSCopy(brewResults.get(i)));
+                    nonnulllist.set(i, ItemStack.EMPTY);
+                    continue;
+                }
+                // KioCG end
                 nonnulllist.set(i, CraftItemStack.asNMSCopy(brewResults.get(i)));
             } else {
                 nonnulllist.set(i, ItemStack.EMPTY);
@@ -285,21 +299,41 @@ public class BrewingStandBlockEntity extends BaseContainerBlockEntity implements
             // CraftBukkit end
         }
 
-        itemstack.shrink(1);
+        // itemstack.shrink(1); // KioCG - 上移
         if (itemstack.getItem().hasCraftingRemainingItem()) {
             ItemStack itemstack1 = new ItemStack(itemstack.getItem().getCraftingRemainingItem());
 
-            if (itemstack.isEmpty()) {
+            if (false && itemstack.isEmpty()) { // KioCG - 始终掉落玻璃瓶. 但由于MC-259583, 实际上最后一瓶龙息不会产生玻璃瓶
                 itemstack = itemstack1;
             } else {
                 Containers.dropItemStack(world, (double) blockposition.getX(), (double) blockposition.getY(), (double) blockposition.getZ(), itemstack1);
             }
         }
 
-        nonnulllist.set(3, itemstack);
+        // nonnulllist.set(3, itemstack); // KioCG - 上移
         world.levelEvent(1035, blockposition, 0);
     }
 
+    // KioCG start
+    private static boolean tryFillNextIngredient(NonNullList<ItemStack> nonnulllist) {
+        if (nonnulllist.get(3).isEmpty()) {
+            int[] slots = {3, 5, 6, 7, 8, 9};
+            int index = 0;
+
+            for (int i = 1; i <= 5; ++i) {
+                final ItemStack itemStack = nonnulllist.get(slots[i]);
+                if (!itemStack.isEmpty()) {
+                    nonnulllist.set(slots[index++], itemStack);
+                    nonnulllist.set(slots[i], ItemStack.EMPTY);
+                }
+            }
+
+            return index != 0;
+        }
+        return false;
+    }
+    // KioCG end
+
     @Override
     protected void loadAdditional(CompoundTag nbt, HolderLookup.Provider registryLookup) {
         super.loadAdditional(nbt, registryLookup);
@@ -343,6 +377,7 @@ public class BrewingStandBlockEntity extends BaseContainerBlockEntity implements
 
     @Override
     public int[] getSlotsForFace(Direction side) {
+        if (true) return new int[0]; // KioCG - 阻止漏斗交互
         return side == Direction.UP ? BrewingStandBlockEntity.SLOTS_FOR_UP : (side == Direction.DOWN ? BrewingStandBlockEntity.SLOTS_FOR_DOWN : BrewingStandBlockEntity.SLOTS_FOR_SIDES);
     }
 
diff --git a/src/main/java/net/minecraft/world/level/block/entity/CampfireBlockEntity.java b/src/main/java/net/minecraft/world/level/block/entity/CampfireBlockEntity.java
index 5c6bdd5b26e37449b76cf61d51fd09cd4fb3a015..281ce1e77e5abc89729afed2c2ded0527a6d6c1f 100644
--- a/src/main/java/net/minecraft/world/level/block/entity/CampfireBlockEntity.java
+++ b/src/main/java/net/minecraft/world/level/block/entity/CampfireBlockEntity.java
@@ -78,6 +78,12 @@ public class CampfireBlockEntity extends BlockEntity implements Clearable {
                         return ((CampfireCookingRecipe) recipeholder.value()).assemble(singlerecipeinput, world.registryAccess());
                     }).orElse(itemstack);
 
+                    // KioCG start
+                    if (itemstack1 == itemstack) {
+                        campfire.cookingTime[i] = Integer.MAX_VALUE;
+                        continue;
+                    }
+                    // KioCG end
                     if (itemstack1.isItemEnabled(world.enabledFeatures())) {
                         // CraftBukkit start - fire BlockCookEvent
                         CraftItemStack source = CraftItemStack.asCraftMirror(itemstack);
@@ -101,6 +107,8 @@ public class CampfireBlockEntity extends BlockEntity implements Clearable {
                         result = blockCookEvent.getResult();
                         itemstack1 = CraftItemStack.asNMSCopy(result);
                         // CraftBukkit end
+                        // KioCG start
+                        /*
                         // Paper start - Fix item locations dropped from campfires
                         double deviation = 0.05F * RandomSource.GAUSSIAN_SPREAD_FACTOR;
                         while (!itemstack1.isEmpty()) {
@@ -109,7 +117,16 @@ public class CampfireBlockEntity extends BlockEntity implements Clearable {
                             world.addFreshEntity(droppedItem);
                         }
                         // Paper end - Fix item locations dropped from campfires
-                        campfire.items.set(i, ItemStack.EMPTY);
+                        */
+
+                        Optional<RecipeHolder<CampfireCookingRecipe>> optional = campfire.quickCheck.getRecipeFor(new SimpleContainer(new ItemStack[]{itemstack1}), world);
+                        if (optional.isPresent()) {
+                            campfire.placeFood(null, itemstack1, ((CampfireCookingRecipe) ((RecipeHolder) optional.get()).value()).getCookingTime());
+                        } else {
+                            campfire.items.set(i, itemstack1);
+                            campfire.cookingTime[i] = Integer.MAX_VALUE;
+                        }
+                        // KioCG end
                         world.sendBlockUpdated(pos, state, state, 3);
                         world.gameEvent((Holder) GameEvent.BLOCK_CHANGE, pos, GameEvent.Context.of(state));
                     }
diff --git a/src/main/java/net/minecraft/world/level/block/entity/SmokerBlockEntity.java b/src/main/java/net/minecraft/world/level/block/entity/SmokerBlockEntity.java
index 7d9548f89fda9f4ba203d95d6e64826e9a697013..ceb8f3c4edb7ce331939b31d8d81c4ec4426cdd4 100644
--- a/src/main/java/net/minecraft/world/level/block/entity/SmokerBlockEntity.java
+++ b/src/main/java/net/minecraft/world/level/block/entity/SmokerBlockEntity.java
@@ -19,10 +19,12 @@ public class SmokerBlockEntity extends AbstractFurnaceBlockEntity {
         return Component.translatable("container.smoker");
     }
 
-    @Override
-    protected int getBurnDuration(ItemStack fuel) {
-        return super.getBurnDuration(fuel) / 2;
-    }
+    // KioCG start - 不要加速高炉和烟熏炉
+    // @Override
+    // protected int getBurnDuration(ItemStack fuel) {
+    //     return super.getBurnDuration(fuel) / 2;
+    // }
+    // KioCG end - 不要加速高炉和烟熏炉
 
     @Override
     protected AbstractContainerMenu createMenu(int syncId, Inventory playerInventory) {
