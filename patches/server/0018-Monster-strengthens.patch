From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Joket_abc <15005771700@qq.com>
Date: Wed, 13 Mar 2024 01:10:57 +0800
Subject: [PATCH] Monster strengthens


diff --git a/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java b/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java
index f3285458199003aacec61dae0d4eeec6793231a8..ac062748d01010cb723eaaf2b0b87b68ea24b1fe 100644
--- a/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java
+++ b/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java
@@ -579,6 +579,14 @@ public class WorldConfiguration extends ConfigurationPart {
             public int campfireExtinguishingOne = -1;
             public int campfireExtinguishingTwo = -1;
         }
+
+        public Monster monster;
+        public class Monster extends ConfigurationPart {
+            public boolean spawnInLightAtNight = true;
+            public int darkEnoughToSprint = 7;
+            public boolean babyZombieJockey = true;
+            public boolean zombiesSkinnedIntoSkeletons = true;
+        }
     }
     // KioCG end
 }
diff --git a/src/main/java/net/minecraft/world/entity/monster/Monster.java b/src/main/java/net/minecraft/world/entity/monster/Monster.java
index 759839e912c54598b257ad738481364940f88a18..15ebe8467ba5af964b94e2561a90ae807328589f 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Monster.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Monster.java
@@ -43,6 +43,19 @@ public abstract class Monster extends PathfinderMob implements Enemy {
         this.updateSwingTime();
         this.updateNoActionTime();
         super.aiStep();
+
+        // KioCG start
+        final int darkEnoughToSprint = this.level().paperConfig().kiocgConfig.monster.darkEnoughToSprint;
+        if (darkEnoughToSprint >= 0 && this.level().getMaxLocalRawBrightness(this.blockPosition()) <= darkEnoughToSprint) {
+            if (!this.isSprinting()) {
+                this.setSprinting(true);
+            }
+        } else {
+            if (this.isSprinting()) {
+                this.setSprinting(false);
+            }
+        }
+        // KioCG end
     }
 
     protected void updateNoActionTime() {
@@ -88,6 +101,7 @@ public abstract class Monster extends PathfinderMob implements Enemy {
     }
 
     public static boolean isDarkEnoughToSpawn(ServerLevelAccessor world, BlockPos pos, RandomSource random) {
+        if (world instanceof net.minecraft.server.level.ServerLevel level && level.paperConfig().kiocgConfig.monster.spawnInLightAtNight && world.getSkyDarken() >= 5) return true; // KioCG
         if (world.getBrightness(LightLayer.SKY, pos) > random.nextInt(32)) {
             return false;
         } else {
diff --git a/src/main/java/net/minecraft/world/entity/monster/Spider.java b/src/main/java/net/minecraft/world/entity/monster/Spider.java
index fa0316e9d2a4cf213982994dc8bf310299cca984..e9f0961558ea4f7a86395376099a4ebef50d8e95 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Spider.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Spider.java
@@ -192,7 +192,7 @@ public class Spider extends Monster {
 
         @Override
         public boolean canUse() {
-            return super.canUse() && !this.mob.isVehicle();
+            return super.canUse() && !(this.mob.getControllingPassenger() instanceof Monster); // KioCG
         }
 
         @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/Zombie.java b/src/main/java/net/minecraft/world/entity/monster/Zombie.java
index 6ea7a24f11bdef871be3d71e08ca491045ebeda2..c3d7525bde4f72f98b0a62fccb0d8bfc215a40f0 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Zombie.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Zombie.java
@@ -113,6 +113,16 @@ public class Zombie extends Monster {
     }
 
     protected void addBehaviourGoals() {
+        // KioCG start
+        if (this.level().paperConfig().kiocgConfig.monster.babyZombieJockey) {
+            this.goalSelector.addGoal(3, new net.minecraft.world.entity.ai.goal.LeapAtTargetGoal(this, 0.4F) {
+                @Override
+                public boolean canUse() {
+                    return Zombie.this.isBaby() && super.canUse();
+                }
+            });
+        }
+        // KioCG end
         this.goalSelector.addGoal(2, new ZombieAttackGoal(this, 1.0D, false));
         // this.goalSelector.addGoal(6, new MoveThroughVillageGoal(this, 1.0D, true, 4, this::canBreakDoors)); // KioCG - 优化实体行为
         this.goalSelector.addGoal(7, new WaterAvoidingRandomStrollGoal(this, 1.0D));
@@ -301,6 +311,48 @@ public class Zombie extends Monster {
 
     }
 
+    // KioCG start
+    @Override
+    public void die(DamageSource damageSource) {
+        if (this.level().paperConfig().kiocgConfig.monster.zombiesSkinnedIntoSkeletons) {
+            if (!this.isRemoved() && !this.dead) {
+                Entity entity = damageSource.getEntity();
+                Level world = this.level();
+
+                if (world instanceof ServerLevel) {
+                    org.bukkit.event.entity.EntityDeathEvent deathEvent = this.dropAllDeathLoot(damageSource);
+                    if (deathEvent == null || !deathEvent.isCancelled()) {
+                        if (this.isSleeping()) {
+                            this.stopSleeping();
+                        }
+
+                        this.getCombatTracker().recheckStatus();
+                        if (entity != null) {
+                            entity.killedEntity((ServerLevel) this.level(), this);
+                        }
+                    } else {
+                        this.setHealth((float) deathEvent.getReviveHealth());
+                        return;
+                    }
+
+                    Skeleton skeleton = this.convertTo(EntityType.SKELETON, true, EntityTransformEvent.TransformReason.PEELING, CreatureSpawnEvent.SpawnReason.PEELING);
+                    if (skeleton != null) {
+                        skeleton.setTarget(this.getTarget(), null, true);
+                        skeleton.getNavigation().moveTo(this.getNavigation().getPath(), 1.2D);
+                        skeleton.setAggressive(this.isAggressive());
+                    }
+
+                    if (!this.isSilent()) {
+                        this.level().levelEvent((Player) null, net.minecraft.world.level.block.LevelEvent.SOUND_SKELETON_TO_STRAY, this.blockPosition(), 0);
+                    }
+                }
+            }
+        } else {
+            super.die(damageSource);
+        }
+    }
+    // KioCG end
+
     public boolean isSunSensitive() {
         return this.shouldBurnInDay; // Paper - Add more Zombie API
     }
@@ -582,6 +634,7 @@ public class Zombie extends Monster {
 
     @Override
     protected void dropCustomDeathLoot(DamageSource source, int lootingMultiplier, boolean allowDrops) {
+        if (!this.level().paperConfig().kiocgConfig.monster.zombiesSkinnedIntoSkeletons) // KioCG - 僵尸剥皮: 不要掉落护甲
         super.dropCustomDeathLoot(source, lootingMultiplier, allowDrops);
         Entity entity = source.getEntity();
 
