From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Joket_abc <15005771700@qq.com>
Date: Sat, 23 Mar 2024 11:28:48 +0800
Subject: [PATCH] Remove automation gameplay


diff --git a/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java b/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java
index 4d9e24d183e04239323f008307bab01e0f8f573c..9a90cb9932a8223c4593e28a6394edbd7dbee849 100644
--- a/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java
+++ b/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java
@@ -581,6 +581,7 @@ public class WorldConfiguration extends ConfigurationPart {
 
     public class KiocgConfig extends ConfigurationPart {
         public boolean deathItemsOnlyPickedUpByOneself = true;
+        public boolean removeAutomationGameplay = true;
     }
     // KioCG end
 }
diff --git a/src/main/java/net/minecraft/world/entity/vehicle/MinecartHopper.java b/src/main/java/net/minecraft/world/entity/vehicle/MinecartHopper.java
index 8bc841e4958011edc5a0e4ad55a6eff4d39d4cb3..ede8088d1058848d234a97a39f1e2d4a2ad5d648 100644
--- a/src/main/java/net/minecraft/world/entity/vehicle/MinecartHopper.java
+++ b/src/main/java/net/minecraft/world/entity/vehicle/MinecartHopper.java
@@ -86,9 +86,11 @@ public class MinecartHopper extends AbstractMinecartContainer implements Hopper
     @Override
     public void tick() {
         super.tick();
+        if (!this.level().paperConfig().kiocgConfig.removeAutomationGameplay) { // KioCG
         if (!this.level().isClientSide && this.isAlive() && this.isEnabled() && this.suckInItems()) {
             this.setChanged();
         }
+        } // KioCG
     }
 
     public boolean suckInItems() {
diff --git a/src/main/java/net/minecraft/world/level/block/Blocks.java b/src/main/java/net/minecraft/world/level/block/Blocks.java
index 223259e7a09ada681b6181c898f6857888594f85..b7eecd75eeb741dacde2e29c5a946c5bfa29e3af 100644
--- a/src/main/java/net/minecraft/world/level/block/Blocks.java
+++ b/src/main/java/net/minecraft/world/level/block/Blocks.java
@@ -736,6 +736,7 @@ public class Blocks {
         "note_block",
         new NoteBlock(
             BlockBehaviour.Properties.of().mapColor(MapColor.WOOD).instrument(NoteBlockInstrument.BASS).sound(SoundType.WOOD).strength(0.8F).ignitedByLava()
+            .pushReaction(PushReaction.BLOCK) // KioCG
         )
     );
     public static final Block WHITE_BED = register("white_bed", bed(DyeColor.WHITE));
@@ -2582,6 +2583,7 @@ public class Blocks {
         "brown_mushroom_block",
         new HugeMushroomBlock(
             BlockBehaviour.Properties.of().mapColor(MapColor.DIRT).instrument(NoteBlockInstrument.BASS).strength(0.2F).sound(SoundType.WOOD).ignitedByLava()
+            .pushReaction(PushReaction.BLOCK) // KioCG
         )
     );
     public static final Block RED_MUSHROOM_BLOCK = register(
@@ -2593,12 +2595,14 @@ public class Blocks {
                 .strength(0.2F)
                 .sound(SoundType.WOOD)
                 .ignitedByLava()
+                .pushReaction(PushReaction.BLOCK) // KioCG
         )
     );
     public static final Block MUSHROOM_STEM = register(
         "mushroom_stem",
         new HugeMushroomBlock(
             BlockBehaviour.Properties.of().mapColor(MapColor.WOOL).instrument(NoteBlockInstrument.BASS).strength(0.2F).sound(SoundType.WOOD).ignitedByLava()
+            .pushReaction(PushReaction.BLOCK) // KioCG
         )
     );
     public static final Block IRON_BARS = register(
@@ -2778,7 +2782,7 @@ public class Blocks {
         )
     );
     public static final Block CAULDRON = register(
-        "cauldron", new CauldronBlock(BlockBehaviour.Properties.of().mapColor(MapColor.STONE).requiresCorrectToolForDrops().strength(2.0F).noOcclusion())
+        "cauldron", new CauldronBlock(BlockBehaviour.Properties.of().mapColor(MapColor.STONE).requiresCorrectToolForDrops().strength(2.0F).noOcclusion().pushReaction(PushReaction.BLOCK)) // KioCG
     );
     public static final Block WATER_CAULDRON = register(
         "water_cauldron", new LayeredCauldronBlock(Biome.Precipitation.RAIN, CauldronInteraction.WATER, BlockBehaviour.Properties.ofLegacyCopy(CAULDRON))
diff --git a/src/main/java/net/minecraft/world/level/block/DropperBlock.java b/src/main/java/net/minecraft/world/level/block/DropperBlock.java
index ddecf443df3679e3098eb54edd19585a0512e342..0ab847b57585bef7a4eb15d3323b90307254ff7d 100644
--- a/src/main/java/net/minecraft/world/level/block/DropperBlock.java
+++ b/src/main/java/net/minecraft/world/level/block/DropperBlock.java
@@ -70,7 +70,7 @@ public class DropperBlock extends DispenserBlock {
                     Container iinventory = HopperBlockEntity.getContainerAt(world, pos.relative(enumdirection));
                     ItemStack itemstack1;
 
-                    if (iinventory == null) {
+                    if (iinventory == null || world.paperConfig().kiocgConfig.removeAutomationGameplay) { // KioCG
                         if (!org.bukkit.craftbukkit.event.CraftEventFactory.handleBlockPreDispenseEvent(world, pos, itemstack, i)) return; // Paper - Add BlockPreDispenseEvent
                         itemstack1 = DropperBlock.DISPENSE_BEHAVIOUR.dispense(sourceblock, itemstack);
                     } else {
diff --git a/src/main/java/net/minecraft/world/level/block/entity/HopperBlockEntity.java b/src/main/java/net/minecraft/world/level/block/entity/HopperBlockEntity.java
index 127977166335acdc6fa85316a38723bdb905a13b..aa81a7fa7b2ff4e3e1d55812405c5e014be7c42c 100644
--- a/src/main/java/net/minecraft/world/level/block/entity/HopperBlockEntity.java
+++ b/src/main/java/net/minecraft/world/level/block/entity/HopperBlockEntity.java
@@ -140,6 +140,7 @@ public class HopperBlockEntity extends RandomizableContainerBlockEntity implemen
     }
 
     public static void pushItemsTick(Level world, BlockPos pos, BlockState state, HopperBlockEntity blockEntity) {
+        if (world.paperConfig().kiocgConfig.removeAutomationGameplay) return; // KioCG
         --blockEntity.cooldownTime;
         blockEntity.tickedGameTime = world.getGameTime();
         if (!blockEntity.isOnCooldown()) {
diff --git a/src/main/java/net/minecraft/world/level/block/piston/PistonBaseBlock.java b/src/main/java/net/minecraft/world/level/block/piston/PistonBaseBlock.java
index e0c62227b279a5fe0f3868fbf9ce8c78c515a09c..ac75586c33d5064a0710ccde55713ac60fc2cbbf 100644
--- a/src/main/java/net/minecraft/world/level/block/piston/PistonBaseBlock.java
+++ b/src/main/java/net/minecraft/world/level/block/piston/PistonBaseBlock.java
@@ -403,8 +403,10 @@ public class PistonBaseBlock extends DirectionalBlock {
             org.bukkit.event.block.BlockPistonEvent event;
             if (retract) {
                 event = new BlockPistonExtendEvent(bblock, blocks, CraftBlock.notchToBlockFace(enumdirection1));
+                if (world.paperConfig().kiocgConfig.removeAutomationGameplay && moved.size() > 1) event.setCancelled(true); // KioCG
             } else {
                 event = new BlockPistonRetractEvent(bblock, blocks, CraftBlock.notchToBlockFace(enumdirection1));
+                if (world.paperConfig().kiocgConfig.removeAutomationGameplay && moved.size() > 1) event.setCancelled(true); // KioCG
             }
             world.getCraftServer().getPluginManager().callEvent(event);
 
