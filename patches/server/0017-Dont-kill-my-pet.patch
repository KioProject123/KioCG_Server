From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Joket_abc <15005771700@qq.com>
Date: Thu, 14 Mar 2024 20:52:54 +0800
Subject: [PATCH] Dont kill my pet


diff --git a/src/main/java/io/papermc/paper/configuration/GlobalConfiguration.java b/src/main/java/io/papermc/paper/configuration/GlobalConfiguration.java
index d1d52d34ab7f079ba6689ea371e0b8b90676efce..a35fca31c7264f77a93c671b3bca4e3b7f5f4f22 100644
--- a/src/main/java/io/papermc/paper/configuration/GlobalConfiguration.java
+++ b/src/main/java/io/papermc/paper/configuration/GlobalConfiguration.java
@@ -413,6 +413,9 @@ public class GlobalConfiguration extends ConfigurationPart {
             public int fixedCumulativeCost = 4;
             public boolean anvilRenameInSurvival = false;
         }
+
+        public boolean dontKillMyPet = true;
+        public double petTeleportDistanceSqr = 256.0;
     }
     // KioCG end
 }
diff --git a/src/main/java/net/minecraft/world/entity/LivingEntity.java b/src/main/java/net/minecraft/world/entity/LivingEntity.java
index 9226de952f4020daa21f659ea710509fc89d093c..403b8b2e0f7cae449b3f7787e9a225f4a57be397 100644
--- a/src/main/java/net/minecraft/world/entity/LivingEntity.java
+++ b/src/main/java/net/minecraft/world/entity/LivingEntity.java
@@ -2322,7 +2322,15 @@ public abstract class LivingEntity extends Entity implements Attackable {
                 }
                 // CraftBukkit end
                 this.getCombatTracker().recordDamage(damagesource, f);
-                this.setHealth(this.getHealth() - f);
+                // KioCG start
+                float health = this.getHealth() - f;
+                if (health <= 0.0F && originalDamage != Float.MAX_VALUE && !damagesource.is(DamageTypeTags.BYPASSES_INVULNERABILITY)) {
+                    if (io.papermc.paper.configuration.GlobalConfiguration.get().kiocgConfig.dontKillMyPet && this instanceof TamableAnimal pet && pet.isTame()) {
+                        health = Float.MIN_VALUE;
+                    }
+                }
+                this.setHealth(health);
+                // KioCG end
                 // CraftBukkit start
                 if (!human) {
                     this.setAbsorptionAmount(this.getAbsorptionAmount() - f);
diff --git a/src/main/java/net/minecraft/world/entity/Mob.java b/src/main/java/net/minecraft/world/entity/Mob.java
index 2439f8d48daca7329049436414f06a36b4b79029..2ea31c46c8be7cd84e0f9dd78a6f9e3d88f9409d 100644
--- a/src/main/java/net/minecraft/world/entity/Mob.java
+++ b/src/main/java/net/minecraft/world/entity/Mob.java
@@ -289,6 +289,7 @@ public abstract class Mob extends LivingEntity implements Targeting {
     @Nullable
     @Override
     public LivingEntity getTarget() {
+        if (this.target instanceof TamableAnimal pet && pet.onTheVergeOfDeath()) this.target = null; // KioCG
         return this.target;
     }
 
diff --git a/src/main/java/net/minecraft/world/entity/TamableAnimal.java b/src/main/java/net/minecraft/world/entity/TamableAnimal.java
index e4550d3ac8d93e0dd9a54e41fbbbef2ef9d4f55e..9d78fcb98a971d24908700848007bb9bc340a99d 100644
--- a/src/main/java/net/minecraft/world/entity/TamableAnimal.java
+++ b/src/main/java/net/minecraft/world/entity/TamableAnimal.java
@@ -214,11 +214,57 @@ public abstract class TamableAnimal extends Animal implements OwnableEntity {
         super.die(damageSource);
     }
 
+    // KioCG start
+    public boolean onTheVergeOfDeath() {
+        return io.papermc.paper.configuration.GlobalConfiguration.get().kiocgConfig.dontKillMyPet && this.isTame() && this.getHealth() == Float.MIN_VALUE;
+    }
+
+    @Override
+    public boolean canBeSeenAsEnemy() {
+        return !this.onTheVergeOfDeath() && super.canBeSeenAsEnemy();
+    }
+
+    @Override
+    public boolean hurt(DamageSource source, float amount) {
+        return (amount == Float.MAX_VALUE || !onTheVergeOfDeath()) && super.hurt(source, amount);
+    }
+
+    @Nullable private Display helpDisplay;
+
+    public void tryAddHelpDisplay() {
+        if (!(this.getFirstPassenger() instanceof Display)) {
+            this.ejectPassengers();
+
+            Display.ItemDisplay display = EntityType.ITEM_DISPLAY.create(this.level());
+            if (display != null) {
+                display.moveTo(this.position());
+                display.persist = false;
+                display.setRiderDisplay(true);
+                display.setItemStack(new net.minecraft.world.item.ItemStack(net.minecraft.world.item.Items.BARRIER));
+                display.setItemTransform(net.minecraft.world.item.ItemDisplayContext.GROUND);
+                display.setBillboardConstraints(Display.BillboardConstraints.VERTICAL);
+                display.setTransformation(new com.mojang.math.Transformation(new org.joml.Vector3f(0.0F, 0.5F, 0.0F), null, null, null));
+                display.startRiding(this);
+                this.level().addFreshEntity(display);
+            }
+            helpDisplay = display;
+        }
+    }
+
+    public void tryRemoveHelpDisplay() {
+        if (this.helpDisplay != null) {
+            this.helpDisplay.stopRiding();
+            this.helpDisplay = null;
+        }
+    }
+    // KioCG end
+
     public boolean isOrderedToSit() {
         return this.orderedToSit;
     }
 
     public void setOrderedToSit(boolean sitting) {
+        if (!sitting && onTheVergeOfDeath()) return; // KioCG
         this.orderedToSit = sitting;
     }
 }
diff --git a/src/main/java/net/minecraft/world/entity/ai/goal/FollowOwnerGoal.java b/src/main/java/net/minecraft/world/entity/ai/goal/FollowOwnerGoal.java
index c0da573e3818a1dd2c1ef5a61c7cb34934b0a252..fb483e6d76713426954381ea4633c3f46a758a8c 100644
--- a/src/main/java/net/minecraft/world/entity/ai/goal/FollowOwnerGoal.java
+++ b/src/main/java/net/minecraft/world/entity/ai/goal/FollowOwnerGoal.java
@@ -96,7 +96,7 @@ public class FollowOwnerGoal extends Goal {
         if (this.tamable.distanceToSqr(this.owner) <= 16 * 16) this.tamable.getLookControl().setLookAt(this.owner, 10.0F, (float) this.tamable.getMaxHeadXRot()); // Paper - Limit pet look distance
         if (--this.timeToRecalcPath <= 0) {
             this.timeToRecalcPath = this.adjustedTickDelay(10);
-            if (this.tamable.distanceToSqr((Entity) this.owner) >= 144.0D) {
+            if (this.tamable.distanceToSqr((Entity) this.owner) >= io.papermc.paper.configuration.GlobalConfiguration.get().kiocgConfig.petTeleportDistanceSqr) { // KioCG
                 this.teleportToOwner();
             } else {
                 this.navigation.moveTo((Entity) this.owner, this.speedModifier);
diff --git a/src/main/java/net/minecraft/world/entity/animal/Cat.java b/src/main/java/net/minecraft/world/entity/animal/Cat.java
index 327f00736ede0c58d6078433235cf798ea59ba79..0c987c5896a9c507bf228c4ba03eb336adde7fdb 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Cat.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Cat.java
@@ -106,7 +106,14 @@ public class Cat extends TamableAnimal implements VariantHolder<CatVariant> {
     protected void registerGoals() {
         this.temptGoal = new Cat.CatTemptGoal(this, 0.6D, Cat.TEMPT_INGREDIENT, true);
         this.goalSelector.addGoal(1, new FloatGoal(this));
-        this.goalSelector.addGoal(1, new PanicGoal(this, 1.5D));
+        // KioCG start
+        this.goalSelector.addGoal(1, new PanicGoal(this, 1.5D) {
+            @Override
+            public boolean shouldPanic() {
+                return !((TamableAnimal) this.mob).onTheVergeOfDeath() && super.shouldPanic();
+            }
+        });
+        // KioCG end
         this.goalSelector.addGoal(2, new SitWhenOrderedToGoal(this));
         this.goalSelector.addGoal(3, new Cat.CatRelaxOnOwnerGoal(this));
         this.goalSelector.addGoal(4, this.temptGoal);
@@ -270,6 +277,16 @@ public class Cat extends TamableAnimal implements VariantHolder<CatVariant> {
         }
 
         this.handleLieDown();
+        // KioCG start
+        if (this.onTheVergeOfDeath()) {
+            tryAddHelpDisplay();
+            if (!this.isOrderedToSit()) {
+                this.setOrderedToSit(true);
+            }
+        } else {
+            tryRemoveHelpDisplay();
+        }
+        // KioCG end
     }
 
     private void handleLieDown() {
@@ -396,6 +413,16 @@ public class Cat extends TamableAnimal implements VariantHolder<CatVariant> {
                             this.usePlayerItem(player, hand, itemstack);
                             this.heal((float) item.getFoodProperties().getNutrition(), org.bukkit.event.entity.EntityRegainHealthEvent.RegainReason.EATING); // Paper - Add missing regain reason
                             return InteractionResult.CONSUME;
+                        // KioCG start
+                        } else if (itemstack.is(Items.POISONOUS_POTATO)) {
+                            this.playSound(SoundEvents.CAT_EAT, 1.0F, 1.0F);
+                            super.usePlayerItem(player, hand, itemstack);
+
+                            this.addEffect(new net.minecraft.world.effect.MobEffectInstance(net.minecraft.world.effect.MobEffects.POISON, 900), org.bukkit.event.entity.EntityPotionEffectEvent.Cause.FOOD); // CraftBukkit
+                            this.hurt(this.damageSources().playerAttack(player), Float.MAX_VALUE);
+
+                            return InteractionResult.CONSUME;
+                        // KioCG end
                         }
 
                         enuminteractionresult = super.mobInteract(player, hand);
diff --git a/src/main/java/net/minecraft/world/entity/animal/Parrot.java b/src/main/java/net/minecraft/world/entity/animal/Parrot.java
index 0fd04f96ed697ddf0fcf93c7bd258e5e2ebcf659..b147863410813da9469ce5193dea834c5891456a 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Parrot.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Parrot.java
@@ -155,7 +155,14 @@ public class Parrot extends ShoulderRidingEntity implements VariantHolder<Parrot
 
     @Override
     protected void registerGoals() {
-        this.goalSelector.addGoal(0, new PanicGoal(this, 1.25D));
+        // KioCG start
+        this.goalSelector.addGoal(0, new PanicGoal(this, 1.25D) {
+            @Override
+            public boolean shouldPanic() {
+                return !((net.minecraft.world.entity.TamableAnimal) this.mob).onTheVergeOfDeath() && super.shouldPanic();
+            }
+        });
+        // KioCG end
         this.goalSelector.addGoal(0, new FloatGoal(this));
         this.goalSelector.addGoal(1, new LookAtPlayerGoal(this, Player.class, 8.0F));
         this.goalSelector.addGoal(2, new SitWhenOrderedToGoal(this));
@@ -213,6 +220,21 @@ public class Parrot extends ShoulderRidingEntity implements VariantHolder<Parrot
         this.calculateFlapping();
     }
 
+    // KioCG start
+    @Override
+    public void tick() {
+        super.tick();
+        if (this.onTheVergeOfDeath()) {
+            tryAddHelpDisplay();
+            if (!this.isOrderedToSit()) {
+                this.setOrderedToSit(true);
+            }
+        } else {
+            tryRemoveHelpDisplay();
+        }
+    }
+    // KioCG end
+
     @Override
     public void setRecordPlayingNearby(BlockPos songPosition, boolean playing) {
         this.jukebox = songPosition;
@@ -286,7 +308,7 @@ public class Parrot extends ShoulderRidingEntity implements VariantHolder<Parrot
             }
 
             return InteractionResult.sidedSuccess(this.level().isClientSide);
-        } else if (itemstack.is(Parrot.POISONOUS_FOOD)) {
+        } else if (itemstack.is(Parrot.POISONOUS_FOOD) || itemstack.is(Items.POISONOUS_POTATO)) { // KioCG
             if (!player.getAbilities().instabuild) {
                 itemstack.shrink(1);
             }
diff --git a/src/main/java/net/minecraft/world/entity/animal/Wolf.java b/src/main/java/net/minecraft/world/entity/animal/Wolf.java
index efef15fe55ae7126bd01010219cb69d5eaa87469..ffa832c6813299a730e46560467c315c14e37cd1 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Wolf.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Wolf.java
@@ -266,6 +266,18 @@ public class Wolf extends TamableAnimal implements NeutralMob {
                 }
             }
 
+            // KioCG start
+            if (this.onTheVergeOfDeath()) {
+                tryAddHelpDisplay();
+                if (!this.isOrderedToSit()) {
+                    this.navigation.stop();
+                    this.setTarget((LivingEntity) null);
+                    this.setOrderedToSit(true);
+                }
+            } else {
+                tryRemoveHelpDisplay();
+            }
+            // KioCG end
         }
     }
 
@@ -408,6 +420,17 @@ public class Wolf extends TamableAnimal implements NeutralMob {
 
                         return super.mobInteract(player, hand);
                     }
+                // KioCG start
+                } else if (itemstack.is(Items.POISONOUS_POTATO)) {
+                    if (!player.getAbilities().instabuild) {
+                        itemstack.shrink(1);
+                    }
+
+                    this.addEffect(new net.minecraft.world.effect.MobEffectInstance(net.minecraft.world.effect.MobEffects.POISON, 900), org.bukkit.event.entity.EntityPotionEffectEvent.Cause.FOOD); // CraftBukkit
+                    this.hurt(this.damageSources().playerAttack(player), Float.MAX_VALUE);
+
+                    return InteractionResult.SUCCESS;
+                // KioCG end
                 }
 
                 InteractionResult enuminteractionresult = super.mobInteract(player, hand);
@@ -590,6 +613,7 @@ public class Wolf extends TamableAnimal implements NeutralMob {
 
         @Override
         protected boolean shouldPanic() {
+            if (((TamableAnimal) this.mob).onTheVergeOfDeath()) return false; // KioCG
             return this.mob.isFreezing() || this.mob.isOnFire();
         }
     }
